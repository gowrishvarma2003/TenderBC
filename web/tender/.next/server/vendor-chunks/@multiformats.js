"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@multiformats";
exports.ids = ["vendor-chunks/@multiformats"];
exports.modules = {

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multiaddrToUri: () => (/* binding */ multiaddrToUri)\n/* harmony export */ });\n/* harmony import */ var _multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @multiformats/multiaddr */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/index.js\");\n/**\n * @packageDocumentation\n *\n * This module allows easy conversion of Multiaddrs to URLs.\n *\n * @example Converting multiaddrs to URLs\n *\n * ```js\n * import { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n *\n * console.log(multiaddrToUri('/dnsaddr/protocol.ai/https'))\n * // -> https://protocol.ai\n *\n * console.log(multiaddrToUri('/ip4/127.0.0.1/tcp/8080'))\n * // -> http://127.0.0.1:8080\n *\n * console.log(multiaddrToUri('/ip4/127.0.0.1/tcp/8080', { assumeHttp: false }))\n * // -> tcp://127.0.0.1:8080\n * ```\n *\n * Note:\n *\n * - When `/tcp` is the last (terminating) protocol HTTP is assumed by default (implicit `assumeHttp: true`)\n *   - this means produced URIs will start with `http://` instead of `tcp://`\n *   - passing `{ assumeHttp: false }` disables this behavior\n * - Might be lossy - e.g. a DNSv6 multiaddr\n * - Can throw if the passed multiaddr:\n *   - is not a valid multiaddr\n *   - is not supported as a URI e.g. circuit\n */\n\nfunction extractSNI(ma) {\n    let sniProtoCode;\n    try {\n        sniProtoCode = (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.protocols)('sni').code;\n    }\n    catch (e) {\n        // No SNI protocol in multiaddr\n        return null;\n    }\n    for (const [proto, value] of ma) {\n        if (proto === sniProtoCode && value !== undefined) {\n            return value;\n        }\n    }\n    return null;\n}\nfunction hasTLS(ma) {\n    return ma.some(([proto, _]) => proto === (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.protocols)('tls').code);\n}\nfunction interpretNext(headProtoCode, headProtoVal, restMa) {\n    const interpreter = interpreters[(0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.protocols)(headProtoCode).name];\n    if (interpreter === undefined) {\n        throw new Error(`Can't interpret protocol ${(0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.protocols)(headProtoCode).name}`);\n    }\n    const restVal = interpreter(headProtoVal, restMa);\n    if (headProtoCode === (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.protocols)('ip6').code) {\n        return `[${restVal}]`;\n    }\n    return restVal;\n}\nconst interpreters = {\n    ip4: (value, restMa) => value,\n    ip6: (value, restMa) => {\n        if (restMa.length === 0) {\n            return value;\n        }\n        return `[${value}]`;\n    },\n    tcp: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `tcp://${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}:${value}`;\n    },\n    udp: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `udp://${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}:${value}`;\n    },\n    dnsaddr: (value, restMa) => value,\n    dns4: (value, restMa) => value,\n    dns6: (value, restMa) => value,\n    dns: (value, restMa) => value,\n    ipfs: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/ipfs/${value}`;\n    },\n    p2p: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/p2p/${value}`;\n    },\n    http: (value, restMa) => {\n        const maHasTLS = hasTLS(restMa);\n        const sni = extractSNI(restMa);\n        if (maHasTLS && sni !== null) {\n            return `https://${sni}`;\n        }\n        const protocol = maHasTLS ? 'https://' : 'http://';\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal.replace('tcp://', '');\n        return `${protocol}${baseVal}`;\n    },\n    tls: (value, restMa) => {\n        // Noop, the parent context knows that it's tls. We don't need to do\n        // anything here\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n    },\n    sni: (value, restMa) => {\n        // Noop, the parent context uses the sni information, we don't need to do\n        // anything here\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n    },\n    https: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal.replace('tcp://', '');\n        return `https://${baseVal}`;\n    },\n    ws: (value, restMa) => {\n        const maHasTLS = hasTLS(restMa);\n        const sni = extractSNI(restMa);\n        if (maHasTLS && sni !== null) {\n            return `wss://${sni}`;\n        }\n        const protocol = maHasTLS ? 'wss://' : 'ws://';\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        // We are reinterpreting the base, so we need to remove the tcp:// if it's there\n        baseVal = baseVal.replace('tcp://', '');\n        return `${protocol}${baseVal}`;\n    },\n    wss: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal.replace('tcp://', '');\n        return `wss://${baseVal}`;\n    },\n    'p2p-websocket-star': (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/p2p-websocket-star`;\n    },\n    'p2p-webrtc-star': (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/p2p-webrtc-star`;\n    },\n    'p2p-webrtc-direct': (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/p2p-webrtc-direct`;\n    }\n};\nfunction multiaddrToUri(input, opts) {\n    const ma = (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(input);\n    const parts = ma.stringTuples();\n    const head = parts.pop();\n    if (head === undefined) {\n        throw new Error('Unexpected end of multiaddr');\n    }\n    const protocol = (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.protocols)(head[0]);\n    const interpreter = interpreters[protocol.name];\n    if (interpreter == null) {\n        throw new Error(`No interpreter found for ${protocol.name}`);\n    }\n    let uri = interpreter(head[1] ?? '', parts);\n    if (opts?.assumeHttp !== false && head[0] === (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.protocols)('tcp').code) {\n        // If rightmost proto is tcp, we assume http here\n        uri = uri.replace('tcp://', 'http://');\n        if (head[1] === '443' || head[1] === '80') {\n            if (head[1] === '443') {\n                uri = uri.replace('http://', 'https://');\n            }\n            // Drop the port\n            uri = uri.substring(0, uri.lastIndexOf(':'));\n        }\n    }\n    return uri;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/codec.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/codec.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParseError: () => (/* binding */ ParseError),\n/* harmony export */   bytesToMultiaddrParts: () => (/* binding */ bytesToMultiaddrParts),\n/* harmony export */   bytesToTuples: () => (/* binding */ bytesToTuples),\n/* harmony export */   cleanPath: () => (/* binding */ cleanPath),\n/* harmony export */   stringToMultiaddrParts: () => (/* binding */ stringToMultiaddrParts),\n/* harmony export */   tuplesToBytes: () => (/* binding */ tuplesToBytes)\n/* harmony export */ });\n/* harmony import */ var uint8_varint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8-varint */ \"(ssr)/./node_modules/uint8-varint/dist/src/index.js\");\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/concat.node.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/to-string.node.js\");\n/* harmony import */ var _convert_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./convert.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/convert.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./protocols-table.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n\n\n\n\n\nfunction stringToMultiaddrParts(str) {\n    str = cleanPath(str);\n    const tuples = [];\n    const stringTuples = [];\n    let path = null;\n    const parts = str.split('/').slice(1);\n    if (parts.length === 1 && parts[0] === '') {\n        return {\n            bytes: new Uint8Array(),\n            string: '/',\n            tuples: [],\n            stringTuples: [],\n            path: null\n        };\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_4__.getProtocol)(part);\n        if (proto.size === 0) {\n            tuples.push([proto.code]);\n            stringTuples.push([proto.code]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            // should we need to check each path part to see if it's a proto?\n            // This would allow for other protocols to be added after a unix path,\n            // however it would have issues if the path had a protocol name in the path\n            path = cleanPath(parts.slice(p).join('/'));\n            tuples.push([proto.code, (0,_convert_js__WEBPACK_IMPORTED_MODULE_3__.convertToBytes)(proto.code, path)]);\n            stringTuples.push([proto.code, path]);\n            break;\n        }\n        const bytes = (0,_convert_js__WEBPACK_IMPORTED_MODULE_3__.convertToBytes)(proto.code, parts[p]);\n        tuples.push([proto.code, bytes]);\n        stringTuples.push([proto.code, (0,_convert_js__WEBPACK_IMPORTED_MODULE_3__.convertToString)(proto.code, bytes)]);\n    }\n    return {\n        string: stringTuplesToString(stringTuples),\n        bytes: tuplesToBytes(tuples),\n        tuples,\n        stringTuples,\n        path\n    };\n}\nfunction bytesToMultiaddrParts(bytes) {\n    const tuples = [];\n    const stringTuples = [];\n    let path = null;\n    let i = 0;\n    while (i < bytes.length) {\n        const code = uint8_varint__WEBPACK_IMPORTED_MODULE_0__.decode(bytes, i);\n        const n = uint8_varint__WEBPACK_IMPORTED_MODULE_0__.encodingLength(code);\n        const p = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_4__.getProtocol)(code);\n        const size = sizeForAddr(p, bytes.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            stringTuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = bytes.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > bytes.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_2__.toString)(bytes, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n        const stringAddr = (0,_convert_js__WEBPACK_IMPORTED_MODULE_3__.convertToString)(code, addr);\n        stringTuples.push([code, stringAddr]);\n        if (p.path === true) {\n            // should we need to check each path part to see if it's a proto?\n            // This would allow for other protocols to be added after a unix path,\n            // however it would have issues if the path had a protocol name in the path\n            path = stringAddr;\n            break;\n        }\n    }\n    return {\n        bytes: Uint8Array.from(bytes),\n        string: stringTuplesToString(stringTuples),\n        tuples,\n        stringTuples,\n        path\n    };\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nfunction stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_4__.getProtocol)(tup[0]);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nfunction tuplesToBytes(tuples) {\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_1__.concat)(tuples.map((tup) => {\n        const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_4__.getProtocol)(tup[0]);\n        let buf = Uint8Array.from(uint8_varint__WEBPACK_IMPORTED_MODULE_0__.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_1__.concat)([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    }));\n}\n/**\n * For the passed address, return the serialized size\n */\nfunction sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = uint8_varint__WEBPACK_IMPORTED_MODULE_0__.decode(addr instanceof Uint8Array ? addr : Uint8Array.from(addr));\n        return size + uint8_varint__WEBPACK_IMPORTED_MODULE_0__.encodingLength(size);\n    }\n}\nfunction bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = uint8_varint__WEBPACK_IMPORTED_MODULE_0__.decode(buf, i);\n        const n = uint8_varint__WEBPACK_IMPORTED_MODULE_0__.encodingLength(code);\n        const p = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_4__.getProtocol)(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_2__.toString)(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\nfunction cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nfunction ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\n//# sourceMappingURL=codec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/convert.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/convert.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convert: () => (/* binding */ convert),\n/* harmony export */   convertToBytes: () => (/* binding */ convertToBytes),\n/* harmony export */   convertToIpNet: () => (/* binding */ convertToIpNet),\n/* harmony export */   convertToString: () => (/* binding */ convertToString)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_netmask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chainsafe/netmask */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/index.js\");\n/* harmony import */ var multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/bases/base32 */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/basics.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var uint8_varint__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8-varint */ \"(ssr)/./node_modules/uint8-varint/dist/src/index.js\");\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/concat.node.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/from-string.node.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/to-string.node.js\");\n/* harmony import */ var _ip_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ip.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/ip.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./protocols-table.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\n\n\n\n\n\n\n\n\n\n\n\n\nconst ip4Protocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_11__.getProtocol)('ip4');\nconst ip6Protocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_11__.getProtocol)('ip6');\nconst ipcidrProtocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_11__.getProtocol)('ipcidr');\nfunction convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nfunction convertToString(proto, buf) {\n    const protocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_11__.getProtocol)(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        case 481: // http-path\n            return globalThis.encodeURIComponent(bytes2str(buf));\n        default:\n            return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_9__.toString)(buf, 'base16'); // no clue. convert to hex\n    }\n}\nfunction convertToBytes(proto, str) {\n    const protocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_11__.getProtocol)(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        case 481: // http-path\n            return str2bytes(globalThis.decodeURIComponent(str));\n        default:\n            return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_8__.fromString)(str, 'base16'); // no clue. convert from hex\n    }\n}\nfunction convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new _chainsafe_netmask__WEBPACK_IMPORTED_MODULE_0__.IpNet(addr, mask);\n}\nconst decoders = Object.values(multiformats_basics__WEBPACK_IMPORTED_MODULE_3__.bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!_ip_js__WEBPACK_IMPORTED_MODULE_10__.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return _ip_js__WEBPACK_IMPORTED_MODULE_10__.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = _ip_js__WEBPACK_IMPORTED_MODULE_10__.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!_ip_js__WEBPACK_IMPORTED_MODULE_10__.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_8__.fromString)(str);\n    const size = Uint8Array.from(uint8_varint__WEBPACK_IMPORTED_MODULE_6__.encode(buf.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_7__.concat)([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = uint8_varint__WEBPACK_IMPORTED_MODULE_6__.decode(buf);\n    buf = buf.slice(uint8_varint__WEBPACK_IMPORTED_MODULE_6__.encodingLength(size));\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_9__.toString)(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_5__.decode(multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_2__.base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = multiformats_cid__WEBPACK_IMPORTED_MODULE_4__.CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(uint8_varint__WEBPACK_IMPORTED_MODULE_6__.encode(mh.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_7__.concat)([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(uint8_varint__WEBPACK_IMPORTED_MODULE_6__.encode(mb.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_7__.concat)([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = uint8_varint__WEBPACK_IMPORTED_MODULE_6__.decode(buf);\n    const hash = buf.slice(uint8_varint__WEBPACK_IMPORTED_MODULE_6__.encodingLength(size));\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_9__.toString)(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = uint8_varint__WEBPACK_IMPORTED_MODULE_6__.decode(buf);\n    const address = buf.slice(uint8_varint__WEBPACK_IMPORTED_MODULE_6__.encodingLength(size));\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_9__.toString)(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_1__.base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_7__.concat)([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_1__.base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_7__.concat)([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_9__.toString)(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci9kaXN0L3NyYy9jb252ZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzJDO0FBQ1E7QUFDRztBQUNWO0FBQ0w7QUFDYztBQUNkO0FBQ3lCO0FBQ2E7QUFDTjtBQUN6QztBQUNxQjtBQUNuRCxvQkFBb0IsaUVBQVc7QUFDL0Isb0JBQW9CLGlFQUFXO0FBQy9CLHVCQUF1QixpRUFBVztBQUMzQjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxxQkFBcUIsaUVBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtEQUFrQixpQkFBaUI7QUFDdEQ7QUFDQTtBQUNPO0FBQ1AscUJBQXFCLGlFQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1FQUFvQixpQkFBaUI7QUFDeEQ7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGVBQWUscURBQUs7QUFDcEI7QUFDQSwrQkFBK0Isc0RBQUs7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxTQUFTLHlDQUFPO0FBQ2hCO0FBQ0E7QUFDQSxXQUFXLDRDQUFVO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUIsNkNBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5Q0FBTztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUVBQW9CO0FBQ3BDLGlDQUFpQyxnREFBYTtBQUM5QyxXQUFXLDBEQUFnQjtBQUMzQjtBQUNBO0FBQ0EsaUJBQWlCLGdEQUFhO0FBQzlCLG9CQUFvQix3REFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0EsV0FBVywrREFBa0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDhEQUFhLENBQUMsZ0VBQVMsWUFBWSxLQUFLO0FBQ3JEO0FBQ0E7QUFDQSxhQUFhLGlEQUFHO0FBQ2hCO0FBQ0E7QUFDQSxpQ0FBaUMsZ0RBQWE7QUFDOUMsV0FBVywwREFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGdEQUFhO0FBQzlDLFdBQVcsMERBQWdCO0FBQzNCO0FBQ0E7QUFDQSxpQkFBaUIsZ0RBQWE7QUFDOUIsMkJBQTJCLHdEQUFxQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0RBQWE7QUFDOUIsOEJBQThCLHdEQUFxQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLCtEQUFrQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxrQkFBa0I7QUFDNUU7QUFDQTtBQUNBLHVEQUF1RCxTQUFTO0FBQ2hFO0FBQ0E7QUFDQSxnQkFBZ0IsNkRBQU07QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywwREFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsa0JBQWtCO0FBQzVFO0FBQ0E7QUFDQSx1REFBdUQsU0FBUztBQUNoRTtBQUNBO0FBQ0EsZ0JBQWdCLDZEQUFNLFlBQVksUUFBUTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDBEQUFnQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrREFBa0I7QUFDbkM7QUFDQSxjQUFjLEtBQUssR0FBRyxLQUFLO0FBQzNCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci9kaXN0L3NyYy9jb252ZXJ0LmpzP2IwN2YiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAcGFja2FnZURvY3VtZW50YXRpb25cbiAqXG4gKiBQcm92aWRlcyBtZXRob2RzIGZvciBjb252ZXJ0aW5nXG4gKi9cbmltcG9ydCB7IElwTmV0IH0gZnJvbSAnQGNoYWluc2FmZS9uZXRtYXNrJztcbmltcG9ydCB7IGJhc2UzMiB9IGZyb20gJ211bHRpZm9ybWF0cy9iYXNlcy9iYXNlMzInO1xuaW1wb3J0IHsgYmFzZTU4YnRjIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U1OCc7XG5pbXBvcnQgeyBiYXNlcyB9IGZyb20gJ211bHRpZm9ybWF0cy9iYXNpY3MnO1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2NpZCc7XG5pbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9kaWdlc3QnO1xuaW1wb3J0ICogYXMgdmFyaW50IGZyb20gJ3VpbnQ4LXZhcmludCc7XG5pbXBvcnQgeyBjb25jYXQgYXMgdWludDhBcnJheUNvbmNhdCB9IGZyb20gJ3VpbnQ4YXJyYXlzL2NvbmNhdCc7XG5pbXBvcnQgeyBmcm9tU3RyaW5nIGFzIHVpbnQ4QXJyYXlGcm9tU3RyaW5nIH0gZnJvbSAndWludDhhcnJheXMvZnJvbS1zdHJpbmcnO1xuaW1wb3J0IHsgdG9TdHJpbmcgYXMgdWludDhBcnJheVRvU3RyaW5nIH0gZnJvbSAndWludDhhcnJheXMvdG8tc3RyaW5nJztcbmltcG9ydCAqIGFzIGlwIGZyb20gJy4vaXAuanMnO1xuaW1wb3J0IHsgZ2V0UHJvdG9jb2wgfSBmcm9tICcuL3Byb3RvY29scy10YWJsZS5qcyc7XG5jb25zdCBpcDRQcm90b2NvbCA9IGdldFByb3RvY29sKCdpcDQnKTtcbmNvbnN0IGlwNlByb3RvY29sID0gZ2V0UHJvdG9jb2woJ2lwNicpO1xuY29uc3QgaXBjaWRyUHJvdG9jb2wgPSBnZXRQcm90b2NvbCgnaXBjaWRyJyk7XG5leHBvcnQgZnVuY3Rpb24gY29udmVydChwcm90bywgYSkge1xuICAgIGlmIChhIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gY29udmVydFRvU3RyaW5nKHByb3RvLCBhKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBjb252ZXJ0VG9CeXRlcyhwcm90bywgYSk7XG4gICAgfVxufVxuLyoqXG4gKiBDb252ZXJ0IFtjb2RlLFVpbnQ4QXJyYXldIHRvIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydFRvU3RyaW5nKHByb3RvLCBidWYpIHtcbiAgICBjb25zdCBwcm90b2NvbCA9IGdldFByb3RvY29sKHByb3RvKTtcbiAgICBzd2l0Y2ggKHByb3RvY29sLmNvZGUpIHtcbiAgICAgICAgY2FzZSA0OiAvLyBpcHY0XG4gICAgICAgIGNhc2UgNDE6IC8vIGlwdjZcbiAgICAgICAgICAgIHJldHVybiBieXRlczJpcChidWYpO1xuICAgICAgICBjYXNlIDQyOiAvLyBpcHY2em9uZVxuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzMnN0cihidWYpO1xuICAgICAgICBjYXNlIDY6IC8vIHRjcFxuICAgICAgICBjYXNlIDI3MzogLy8gdWRwXG4gICAgICAgIGNhc2UgMzM6IC8vIGRjY3BcbiAgICAgICAgY2FzZSAxMzI6IC8vIHNjdHBcbiAgICAgICAgICAgIHJldHVybiBieXRlczJwb3J0KGJ1ZikudG9TdHJpbmcoKTtcbiAgICAgICAgY2FzZSA1MzogLy8gZG5zXG4gICAgICAgIGNhc2UgNTQ6IC8vIGRuczRcbiAgICAgICAgY2FzZSA1NTogLy8gZG5zNlxuICAgICAgICBjYXNlIDU2OiAvLyBkbnNhZGRyXG4gICAgICAgIGNhc2UgNDAwOiAvLyB1bml4XG4gICAgICAgIGNhc2UgNDQ5OiAvLyBzbmlcbiAgICAgICAgY2FzZSA3Nzc6IC8vIG1lbW9yeVxuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzMnN0cihidWYpO1xuICAgICAgICBjYXNlIDQyMTogLy8gaXBmc1xuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzMm1oKGJ1Zik7XG4gICAgICAgIGNhc2UgNDQ0OiAvLyBvbmlvblxuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzMm9uaW9uKGJ1Zik7XG4gICAgICAgIGNhc2UgNDQ1OiAvLyBvbmlvbjNcbiAgICAgICAgICAgIHJldHVybiBieXRlczJvbmlvbihidWYpO1xuICAgICAgICBjYXNlIDQ2NjogLy8gY2VydGhhc2hcbiAgICAgICAgICAgIHJldHVybiBieXRlczJtYihidWYpO1xuICAgICAgICBjYXNlIDQ4MTogLy8gaHR0cC1wYXRoXG4gICAgICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5lbmNvZGVVUklDb21wb25lbnQoYnl0ZXMyc3RyKGJ1ZikpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHVpbnQ4QXJyYXlUb1N0cmluZyhidWYsICdiYXNlMTYnKTsgLy8gbm8gY2x1ZS4gY29udmVydCB0byBoZXhcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gY29udmVydFRvQnl0ZXMocHJvdG8sIHN0cikge1xuICAgIGNvbnN0IHByb3RvY29sID0gZ2V0UHJvdG9jb2wocHJvdG8pO1xuICAgIHN3aXRjaCAocHJvdG9jb2wuY29kZSkge1xuICAgICAgICBjYXNlIDQ6IC8vIGlwdjRcbiAgICAgICAgICAgIHJldHVybiBpcDJieXRlcyhzdHIpO1xuICAgICAgICBjYXNlIDQxOiAvLyBpcHY2XG4gICAgICAgICAgICByZXR1cm4gaXAyYnl0ZXMoc3RyKTtcbiAgICAgICAgY2FzZSA0MjogLy8gaXB2NnpvbmVcbiAgICAgICAgICAgIHJldHVybiBzdHIyYnl0ZXMoc3RyKTtcbiAgICAgICAgY2FzZSA2OiAvLyB0Y3BcbiAgICAgICAgY2FzZSAyNzM6IC8vIHVkcFxuICAgICAgICBjYXNlIDMzOiAvLyBkY2NwXG4gICAgICAgIGNhc2UgMTMyOiAvLyBzY3RwXG4gICAgICAgICAgICByZXR1cm4gcG9ydDJieXRlcyhwYXJzZUludChzdHIsIDEwKSk7XG4gICAgICAgIGNhc2UgNTM6IC8vIGRuc1xuICAgICAgICBjYXNlIDU0OiAvLyBkbnM0XG4gICAgICAgIGNhc2UgNTU6IC8vIGRuczZcbiAgICAgICAgY2FzZSA1NjogLy8gZG5zYWRkclxuICAgICAgICBjYXNlIDQwMDogLy8gdW5peFxuICAgICAgICBjYXNlIDQ0OTogLy8gc25pXG4gICAgICAgIGNhc2UgNzc3OiAvLyBtZW1vcnlcbiAgICAgICAgICAgIHJldHVybiBzdHIyYnl0ZXMoc3RyKTtcbiAgICAgICAgY2FzZSA0MjE6IC8vIGlwZnNcbiAgICAgICAgICAgIHJldHVybiBtaDJieXRlcyhzdHIpO1xuICAgICAgICBjYXNlIDQ0NDogLy8gb25pb25cbiAgICAgICAgICAgIHJldHVybiBvbmlvbjJieXRlcyhzdHIpO1xuICAgICAgICBjYXNlIDQ0NTogLy8gb25pb24zXG4gICAgICAgICAgICByZXR1cm4gb25pb24zMmJ5dGVzKHN0cik7XG4gICAgICAgIGNhc2UgNDY2OiAvLyBjZXJ0aGFzaFxuICAgICAgICAgICAgcmV0dXJuIG1iMmJ5dGVzKHN0cik7XG4gICAgICAgIGNhc2UgNDgxOiAvLyBodHRwLXBhdGhcbiAgICAgICAgICAgIHJldHVybiBzdHIyYnl0ZXMoZ2xvYmFsVGhpcy5kZWNvZGVVUklDb21wb25lbnQoc3RyKSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdWludDhBcnJheUZyb21TdHJpbmcoc3RyLCAnYmFzZTE2Jyk7IC8vIG5vIGNsdWUuIGNvbnZlcnQgZnJvbSBoZXhcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gY29udmVydFRvSXBOZXQobXVsdGlhZGRyKSB7XG4gICAgbGV0IG1hc2s7XG4gICAgbGV0IGFkZHI7XG4gICAgbXVsdGlhZGRyLnN0cmluZ1R1cGxlcygpLmZvckVhY2goKFtjb2RlLCB2YWx1ZV0pID0+IHtcbiAgICAgICAgaWYgKGNvZGUgPT09IGlwNFByb3RvY29sLmNvZGUgfHwgY29kZSA9PT0gaXA2UHJvdG9jb2wuY29kZSkge1xuICAgICAgICAgICAgYWRkciA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb2RlID09PSBpcGNpZHJQcm90b2NvbC5jb2RlKSB7XG4gICAgICAgICAgICBtYXNrID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAobWFzayA9PSBudWxsIHx8IGFkZHIgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbXVsdGlhZGRyJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgSXBOZXQoYWRkciwgbWFzayk7XG59XG5jb25zdCBkZWNvZGVycyA9IE9iamVjdC52YWx1ZXMoYmFzZXMpLm1hcCgoYykgPT4gYy5kZWNvZGVyKTtcbmNvbnN0IGFueWJhc2VEZWNvZGVyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgYWNjID0gZGVjb2RlcnNbMF0ub3IoZGVjb2RlcnNbMV0pO1xuICAgIGRlY29kZXJzLnNsaWNlKDIpLmZvckVhY2goKGQpID0+IChhY2MgPSBhY2Mub3IoZCkpKTtcbiAgICByZXR1cm4gYWNjO1xufSkoKTtcbmZ1bmN0aW9uIGlwMmJ5dGVzKGlwU3RyaW5nKSB7XG4gICAgaWYgKCFpcC5pc0lQKGlwU3RyaW5nKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgaXAgYWRkcmVzcycpO1xuICAgIH1cbiAgICByZXR1cm4gaXAudG9CeXRlcyhpcFN0cmluZyk7XG59XG5mdW5jdGlvbiBieXRlczJpcChpcEJ1ZmYpIHtcbiAgICBjb25zdCBpcFN0cmluZyA9IGlwLnRvU3RyaW5nKGlwQnVmZiwgMCwgaXBCdWZmLmxlbmd0aCk7XG4gICAgaWYgKGlwU3RyaW5nID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpcEJ1ZmYgaXMgcmVxdWlyZWQnKTtcbiAgICB9XG4gICAgaWYgKCFpcC5pc0lQKGlwU3RyaW5nKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgaXAgYWRkcmVzcycpO1xuICAgIH1cbiAgICByZXR1cm4gaXBTdHJpbmc7XG59XG5mdW5jdGlvbiBwb3J0MmJ5dGVzKHBvcnQpIHtcbiAgICBjb25zdCBidWYgPSBuZXcgQXJyYXlCdWZmZXIoMik7XG4gICAgY29uc3QgdmlldyA9IG5ldyBEYXRhVmlldyhidWYpO1xuICAgIHZpZXcuc2V0VWludDE2KDAsIHBvcnQpO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWYpO1xufVxuZnVuY3Rpb24gYnl0ZXMycG9ydChidWYpIHtcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1Zi5idWZmZXIpO1xuICAgIHJldHVybiB2aWV3LmdldFVpbnQxNihidWYuYnl0ZU9mZnNldCk7XG59XG5mdW5jdGlvbiBzdHIyYnl0ZXMoc3RyKSB7XG4gICAgY29uc3QgYnVmID0gdWludDhBcnJheUZyb21TdHJpbmcoc3RyKTtcbiAgICBjb25zdCBzaXplID0gVWludDhBcnJheS5mcm9tKHZhcmludC5lbmNvZGUoYnVmLmxlbmd0aCkpO1xuICAgIHJldHVybiB1aW50OEFycmF5Q29uY2F0KFtzaXplLCBidWZdLCBzaXplLmxlbmd0aCArIGJ1Zi5sZW5ndGgpO1xufVxuZnVuY3Rpb24gYnl0ZXMyc3RyKGJ1Zikge1xuICAgIGNvbnN0IHNpemUgPSB2YXJpbnQuZGVjb2RlKGJ1Zik7XG4gICAgYnVmID0gYnVmLnNsaWNlKHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKSk7XG4gICAgaWYgKGJ1Zi5sZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbmNvbnNpc3RlbnQgbGVuZ3RocycpO1xuICAgIH1cbiAgICByZXR1cm4gdWludDhBcnJheVRvU3RyaW5nKGJ1Zik7XG59XG5mdW5jdGlvbiBtaDJieXRlcyhoYXNoKSB7XG4gICAgbGV0IG1oO1xuICAgIGlmIChoYXNoWzBdID09PSAnUScgfHwgaGFzaFswXSA9PT0gJzEnKSB7XG4gICAgICAgIG1oID0gRGlnZXN0LmRlY29kZShiYXNlNThidGMuZGVjb2RlKGB6JHtoYXNofWApKS5ieXRlcztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG1oID0gQ0lELnBhcnNlKGhhc2gpLm11bHRpaGFzaC5ieXRlcztcbiAgICB9XG4gICAgLy8gdGhlIGFkZHJlc3MgaXMgYSB2YXJpbnQgcHJlZml4ZWQgbXVsdGloYXNoIHN0cmluZyByZXByZXNlbnRhdGlvblxuICAgIGNvbnN0IHNpemUgPSBVaW50OEFycmF5LmZyb20odmFyaW50LmVuY29kZShtaC5sZW5ndGgpKTtcbiAgICByZXR1cm4gdWludDhBcnJheUNvbmNhdChbc2l6ZSwgbWhdLCBzaXplLmxlbmd0aCArIG1oLmxlbmd0aCk7XG59XG5mdW5jdGlvbiBtYjJieXRlcyhtYnN0cikge1xuICAgIGNvbnN0IG1iID0gYW55YmFzZURlY29kZXIuZGVjb2RlKG1ic3RyKTtcbiAgICBjb25zdCBzaXplID0gVWludDhBcnJheS5mcm9tKHZhcmludC5lbmNvZGUobWIubGVuZ3RoKSk7XG4gICAgcmV0dXJuIHVpbnQ4QXJyYXlDb25jYXQoW3NpemUsIG1iXSwgc2l6ZS5sZW5ndGggKyBtYi5sZW5ndGgpO1xufVxuZnVuY3Rpb24gYnl0ZXMybWIoYnVmKSB7XG4gICAgY29uc3Qgc2l6ZSA9IHZhcmludC5kZWNvZGUoYnVmKTtcbiAgICBjb25zdCBoYXNoID0gYnVmLnNsaWNlKHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKSk7XG4gICAgaWYgKGhhc2gubGVuZ3RoICE9PSBzaXplKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW5jb25zaXN0ZW50IGxlbmd0aHMnKTtcbiAgICB9XG4gICAgcmV0dXJuICd1JyArIHVpbnQ4QXJyYXlUb1N0cmluZyhoYXNoLCAnYmFzZTY0dXJsJyk7XG59XG4vKipcbiAqIENvbnZlcnRzIGJ5dGVzIHRvIGJhczU4YnRjIHN0cmluZ1xuICovXG5mdW5jdGlvbiBieXRlczJtaChidWYpIHtcbiAgICBjb25zdCBzaXplID0gdmFyaW50LmRlY29kZShidWYpO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBidWYuc2xpY2UodmFyaW50LmVuY29kaW5nTGVuZ3RoKHNpemUpKTtcbiAgICBpZiAoYWRkcmVzcy5sZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbmNvbnNpc3RlbnQgbGVuZ3RocycpO1xuICAgIH1cbiAgICByZXR1cm4gdWludDhBcnJheVRvU3RyaW5nKGFkZHJlc3MsICdiYXNlNThidGMnKTtcbn1cbmZ1bmN0aW9uIG9uaW9uMmJ5dGVzKHN0cikge1xuICAgIGNvbnN0IGFkZHIgPSBzdHIuc3BsaXQoJzonKTtcbiAgICBpZiAoYWRkci5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgdG8gcGFyc2Ugb25pb24gYWRkcjogW1wiJyR7YWRkci5qb2luKCdcIiwgXCInKX0nXCJdJyBkb2VzIG5vdCBjb250YWluIGEgcG9ydCBudW1iZXJgKTtcbiAgICB9XG4gICAgaWYgKGFkZHJbMF0ubGVuZ3RoICE9PSAxNikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGZhaWxlZCB0byBwYXJzZSBvbmlvbiBhZGRyOiAke2FkZHJbMF19IG5vdCBhIFRvciBvbmlvbiBhZGRyZXNzLmApO1xuICAgIH1cbiAgICAvLyBvbmlvbiBhZGRyZXNzZXMgZG8gbm90IGluY2x1ZGUgdGhlIG11bHRpYmFzZSBwcmVmaXgsIGFkZCBpdCBiZWZvcmUgZGVjb2RpbmdcbiAgICBjb25zdCBidWYgPSBiYXNlMzIuZGVjb2RlKCdiJyArIGFkZHJbMF0pO1xuICAgIC8vIG9uaW9uIHBvcnQgbnVtYmVyXG4gICAgY29uc3QgcG9ydCA9IHBhcnNlSW50KGFkZHJbMV0sIDEwKTtcbiAgICBpZiAocG9ydCA8IDEgfHwgcG9ydCA+IDY1NTM2KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUG9ydCBudW1iZXIgaXMgbm90IGluIHJhbmdlKDEsIDY1NTM2KScpO1xuICAgIH1cbiAgICBjb25zdCBwb3J0QnVmID0gcG9ydDJieXRlcyhwb3J0KTtcbiAgICByZXR1cm4gdWludDhBcnJheUNvbmNhdChbYnVmLCBwb3J0QnVmXSwgYnVmLmxlbmd0aCArIHBvcnRCdWYubGVuZ3RoKTtcbn1cbmZ1bmN0aW9uIG9uaW9uMzJieXRlcyhzdHIpIHtcbiAgICBjb25zdCBhZGRyID0gc3RyLnNwbGl0KCc6Jyk7XG4gICAgaWYgKGFkZHIubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgZmFpbGVkIHRvIHBhcnNlIG9uaW9uIGFkZHI6IFtcIicke2FkZHIuam9pbignXCIsIFwiJyl9J1wiXScgZG9lcyBub3QgY29udGFpbiBhIHBvcnQgbnVtYmVyYCk7XG4gICAgfVxuICAgIGlmIChhZGRyWzBdLmxlbmd0aCAhPT0gNTYpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmYWlsZWQgdG8gcGFyc2Ugb25pb24gYWRkcjogJHthZGRyWzBdfSBub3QgYSBUb3Igb25pb24zIGFkZHJlc3MuYCk7XG4gICAgfVxuICAgIC8vIG9uaW9uIGFkZHJlc3NlcyBkbyBub3QgaW5jbHVkZSB0aGUgbXVsdGliYXNlIHByZWZpeCwgYWRkIGl0IGJlZm9yZSBkZWNvZGluZ1xuICAgIGNvbnN0IGJ1ZiA9IGJhc2UzMi5kZWNvZGUoYGIke2FkZHJbMF19YCk7XG4gICAgLy8gb25pb24gcG9ydCBudW1iZXJcbiAgICBjb25zdCBwb3J0ID0gcGFyc2VJbnQoYWRkclsxXSwgMTApO1xuICAgIGlmIChwb3J0IDwgMSB8fCBwb3J0ID4gNjU1MzYpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQb3J0IG51bWJlciBpcyBub3QgaW4gcmFuZ2UoMSwgNjU1MzYpJyk7XG4gICAgfVxuICAgIGNvbnN0IHBvcnRCdWYgPSBwb3J0MmJ5dGVzKHBvcnQpO1xuICAgIHJldHVybiB1aW50OEFycmF5Q29uY2F0KFtidWYsIHBvcnRCdWZdLCBidWYubGVuZ3RoICsgcG9ydEJ1Zi5sZW5ndGgpO1xufVxuZnVuY3Rpb24gYnl0ZXMyb25pb24oYnVmKSB7XG4gICAgY29uc3QgYWRkckJ5dGVzID0gYnVmLnNsaWNlKDAsIGJ1Zi5sZW5ndGggLSAyKTtcbiAgICBjb25zdCBwb3J0Qnl0ZXMgPSBidWYuc2xpY2UoYnVmLmxlbmd0aCAtIDIpO1xuICAgIGNvbnN0IGFkZHIgPSB1aW50OEFycmF5VG9TdHJpbmcoYWRkckJ5dGVzLCAnYmFzZTMyJyk7XG4gICAgY29uc3QgcG9ydCA9IGJ5dGVzMnBvcnQocG9ydEJ5dGVzKTtcbiAgICByZXR1cm4gYCR7YWRkcn06JHtwb3J0fWA7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb252ZXJ0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/convert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MultiaddrFilter: () => (/* binding */ MultiaddrFilter)\n/* harmony export */ });\n/* harmony import */ var _convert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../convert.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/convert.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/index.js\");\n\n\n/**\n * A utility class to determine if a Multiaddr contains another\n * multiaddr.\n *\n * This can be used with ipcidr ranges to determine if a given\n * multiaddr is in a ipcidr range.\n *\n * @example\n *\n * ```js\n * import { multiaddr, MultiaddrFilter } from '@multiformats/multiaddr'\n *\n * const range = multiaddr('/ip4/192.168.10.10/ipcidr/24')\n * const filter = new MultiaddrFilter(range)\n *\n * const input = multiaddr('/ip4/192.168.10.2/udp/60')\n * console.info(filter.contains(input)) // true\n * ```\n */\nclass MultiaddrFilter {\n    multiaddr;\n    netmask;\n    constructor(input) {\n        this.multiaddr = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.multiaddr)(input);\n        this.netmask = (0,_convert_js__WEBPACK_IMPORTED_MODULE_0__.convertToIpNet)(this.multiaddr);\n    }\n    contains(input) {\n        if (input == null)\n            return false;\n        const m = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.multiaddr)(input);\n        let ip;\n        for (const [code, value] of m.stringTuples()) {\n            if (code === 4 || code === 41) {\n                ip = value;\n                break;\n            }\n        }\n        if (ip === undefined)\n            return false;\n        return this.netmask.contains(ip);\n    }\n}\n//# sourceMappingURL=multiaddr-filter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci9kaXN0L3NyYy9maWx0ZXIvbXVsdGlhZGRyLWZpbHRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0M7QUFDUDtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvREFBUztBQUNsQyx1QkFBdUIsMkRBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isb0RBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci9kaXN0L3NyYy9maWx0ZXIvbXVsdGlhZGRyLWZpbHRlci5qcz83ZDM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnZlcnRUb0lwTmV0IH0gZnJvbSAnLi4vY29udmVydC5qcyc7XG5pbXBvcnQgeyBtdWx0aWFkZHIgfSBmcm9tICcuLi9pbmRleC5qcyc7XG4vKipcbiAqIEEgdXRpbGl0eSBjbGFzcyB0byBkZXRlcm1pbmUgaWYgYSBNdWx0aWFkZHIgY29udGFpbnMgYW5vdGhlclxuICogbXVsdGlhZGRyLlxuICpcbiAqIFRoaXMgY2FuIGJlIHVzZWQgd2l0aCBpcGNpZHIgcmFuZ2VzIHRvIGRldGVybWluZSBpZiBhIGdpdmVuXG4gKiBtdWx0aWFkZHIgaXMgaW4gYSBpcGNpZHIgcmFuZ2UuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBgYGBqc1xuICogaW1wb3J0IHsgbXVsdGlhZGRyLCBNdWx0aWFkZHJGaWx0ZXIgfSBmcm9tICdAbXVsdGlmb3JtYXRzL211bHRpYWRkcidcbiAqXG4gKiBjb25zdCByYW5nZSA9IG11bHRpYWRkcignL2lwNC8xOTIuMTY4LjEwLjEwL2lwY2lkci8yNCcpXG4gKiBjb25zdCBmaWx0ZXIgPSBuZXcgTXVsdGlhZGRyRmlsdGVyKHJhbmdlKVxuICpcbiAqIGNvbnN0IGlucHV0ID0gbXVsdGlhZGRyKCcvaXA0LzE5Mi4xNjguMTAuMi91ZHAvNjAnKVxuICogY29uc29sZS5pbmZvKGZpbHRlci5jb250YWlucyhpbnB1dCkpIC8vIHRydWVcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgTXVsdGlhZGRyRmlsdGVyIHtcbiAgICBtdWx0aWFkZHI7XG4gICAgbmV0bWFzaztcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCkge1xuICAgICAgICB0aGlzLm11bHRpYWRkciA9IG11bHRpYWRkcihpbnB1dCk7XG4gICAgICAgIHRoaXMubmV0bWFzayA9IGNvbnZlcnRUb0lwTmV0KHRoaXMubXVsdGlhZGRyKTtcbiAgICB9XG4gICAgY29udGFpbnMoaW5wdXQpIHtcbiAgICAgICAgaWYgKGlucHV0ID09IG51bGwpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGNvbnN0IG0gPSBtdWx0aWFkZHIoaW5wdXQpO1xuICAgICAgICBsZXQgaXA7XG4gICAgICAgIGZvciAoY29uc3QgW2NvZGUsIHZhbHVlXSBvZiBtLnN0cmluZ1R1cGxlcygpKSB7XG4gICAgICAgICAgICBpZiAoY29kZSA9PT0gNCB8fCBjb2RlID09PSA0MSkge1xuICAgICAgICAgICAgICAgIGlwID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlwID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHJldHVybiB0aGlzLm5ldG1hc2suY29udGFpbnMoaXApO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11bHRpYWRkci1maWx0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/index.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/index.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MultiaddrFilter: () => (/* reexport safe */ _filter_multiaddr_filter_js__WEBPACK_IMPORTED_MODULE_2__.MultiaddrFilter),\n/* harmony export */   fromNodeAddress: () => (/* binding */ fromNodeAddress),\n/* harmony export */   isMultiaddr: () => (/* binding */ isMultiaddr),\n/* harmony export */   isName: () => (/* binding */ isName),\n/* harmony export */   multiaddr: () => (/* binding */ multiaddr),\n/* harmony export */   protocols: () => (/* reexport safe */ _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol),\n/* harmony export */   resolvers: () => (/* binding */ resolvers)\n/* harmony export */ });\n/* harmony import */ var _multiaddr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multiaddr.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/multiaddr.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocols-table.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/* harmony import */ var _filter_multiaddr_filter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter/multiaddr-filter.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.js\");\n/**\n * @packageDocumentation\n *\n * A standard way to represent addresses that\n *\n * - support any standard network protocol\n * - are self-describing\n * - have a binary packed format\n * - have a nice string representation\n * - encapsulate well\n *\n * @example\n *\n * ```TypeScript\n * import { multiaddr } from '@multiformats/multiaddr'\n * const addr =  multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n * // Multiaddr(/ip4/127.0.0.1/udp/1234)\n *\n * const addr = multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n * // Multiaddr(/ip4/127.0.0.1/udp/1234)\n *\n * addr.bytes\n * // <Uint8Array 04 7f 00 00 01 11 04 d2>\n *\n * addr.toString()\n * // '/ip4/127.0.0.1/udp/1234'\n *\n * addr.protos()\n * // [\n * //   {code: 4, name: 'ip4', size: 32},\n * //   {code: 273, name: 'udp', size: 16}\n * // ]\n *\n * // gives you an object that is friendly with what Node.js core modules expect for addresses\n * addr.nodeAddress()\n * // {\n * //   family: 4,\n * //   port: 1234,\n * //   address: \"127.0.0.1\"\n * // }\n *\n * addr.encapsulate('/sctp/5678')\n * // Multiaddr(/ip4/127.0.0.1/udp/1234/sctp/5678)\n * ```\n *\n * ## Resolving DNSADDR addresses\n *\n * [DNSADDR](https://github.com/multiformats/multiaddr/blob/master/protocols/DNSADDR.md) is a spec that allows storing a TXT DNS record that contains a Multiaddr.\n *\n * To resolve DNSADDR addresses, call the `.resolve()` function the multiaddr, optionally passing a `DNS` resolver.\n *\n * DNSADDR addresses can resolve to multiple multiaddrs, since there is no limit to the number of TXT records that can be stored.\n *\n * @example Resolving DNSADDR Multiaddrs\n *\n * ```TypeScript\n * import { multiaddr, resolvers } from '@multiformats/multiaddr'\n * import { dnsaddr } from '@multiformats/multiaddr/resolvers'\n *\n * resolvers.set('dnsaddr', dnsaddr)\n *\n * const ma = multiaddr('/dnsaddr/bootstrap.libp2p.io')\n *\n * // resolve with a 5s timeout\n * const resolved = await ma.resolve({\n *   signal: AbortSignal.timeout(5000)\n * })\n *\n * console.info(await ma.resolve(resolved)\n * // [Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...')...]\n * ```\n *\n * @example Using a custom DNS resolver to resolve DNSADDR Multiaddrs\n *\n * See the docs for [@multiformats/dns](https://www.npmjs.com/package/@multiformats/dns) for a full breakdown of how to specify multiple resolvers or resolvers that can be used for specific TLDs.\n *\n * ```TypeScript\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { dns } from '@multiformats/dns'\n * import { dnsJsonOverHttps } from '@multiformats/dns/resolvers'\n *\n * const resolver = dns({\n *   '.': dnsJsonOverHttps('https://cloudflare-dns.com/dns-query')\n * })\n *\n * const ma = multiaddr('/dnsaddr/bootstrap.libp2p.io')\n * const resolved = await ma.resolve({\n *  dns: resolver\n * })\n *\n * console.info(resolved)\n * // [Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...')...]\n * ```\n */\n\n\n/**\n * All configured {@link Resolver}s\n */\nconst resolvers = new Map();\n\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nfunction fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new _multiaddr_js__WEBPACK_IMPORTED_MODULE_0__.Multiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nfunction isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nfunction isMultiaddr(value) {\n    return Boolean(value?.[_multiaddr_js__WEBPACK_IMPORTED_MODULE_0__.symbol]);\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nfunction multiaddr(addr) {\n    return new _multiaddr_js__WEBPACK_IMPORTED_MODULE_0__.Multiaddr(addr);\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/ip.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/ip.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isIP: () => (/* reexport safe */ _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIP),\n/* harmony export */   isV4: () => (/* binding */ isV4),\n/* harmony export */   isV6: () => (/* binding */ isV6),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chainsafe/is-ip */ \"(ssr)/./node_modules/@chainsafe/is-ip/lib/is-ip.node.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/to-string.node.js\");\n\n\n\nconst isV4 = _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIPv4;\nconst isV6 = _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nconst toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nconst toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci9kaXN0L3NyYy9pcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQ3FCO0FBQy9CO0FBQ2pDLGFBQWEsb0RBQU07QUFDbkIsYUFBYSxvREFBTTtBQUMxQjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0RBQWtCO0FBQ2hEO0FBQ0E7QUFDQSxzQ0FBc0MsK0RBQWtCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkNBQTJDO0FBQ25FO0FBQ0E7QUFDQSwwQ0FBMEMsT0FBTztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixZQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsSUFBSTtBQUM1QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyL2Rpc3Qvc3JjL2lwLmpzPzA5N2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNJUHY0LCBpc0lQdjYgfSBmcm9tICdAY2hhaW5zYWZlL2lzLWlwJztcbmltcG9ydCB7IHRvU3RyaW5nIGFzIHVpbnQ4QXJyYXlUb1N0cmluZyB9IGZyb20gJ3VpbnQ4YXJyYXlzL3RvLXN0cmluZyc7XG5leHBvcnQgeyBpc0lQIH0gZnJvbSAnQGNoYWluc2FmZS9pcy1pcCc7XG5leHBvcnQgY29uc3QgaXNWNCA9IGlzSVB2NDtcbmV4cG9ydCBjb25zdCBpc1Y2ID0gaXNJUHY2O1xuLy8gQ29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvbm9kZS1pcC9ibG9iL21hc3Rlci9saWIvaXAuanMjTDdcbi8vIGJ1dCB3aXRoIGJ1Zi9vZmZzZXQgYXJncyByZW1vdmVkIGJlY2F1c2Ugd2UgZG9uJ3QgdXNlIHRoZW1cbmV4cG9ydCBjb25zdCB0b0J5dGVzID0gZnVuY3Rpb24gKGlwKSB7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgaXAgPSBpcC50b1N0cmluZygpLnRyaW0oKTtcbiAgICBpZiAoaXNWNChpcCkpIHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShvZmZzZXQgKyA0KTtcbiAgICAgICAgaXAuc3BsaXQoL1xcLi9nKS5mb3JFYWNoKChieXRlKSA9PiB7XG4gICAgICAgICAgICBieXRlc1tvZmZzZXQrK10gPSBwYXJzZUludChieXRlLCAxMCkgJiAweGZmO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH1cbiAgICBpZiAoaXNWNihpcCkpIHtcbiAgICAgICAgY29uc3Qgc2VjdGlvbnMgPSBpcC5zcGxpdCgnOicsIDgpO1xuICAgICAgICBsZXQgaTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHNlY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBpc3Y0ID0gaXNWNChzZWN0aW9uc1tpXSk7XG4gICAgICAgICAgICBsZXQgdjRCdWZmZXI7XG4gICAgICAgICAgICBpZiAoaXN2NCkge1xuICAgICAgICAgICAgICAgIHY0QnVmZmVyID0gdG9CeXRlcyhzZWN0aW9uc1tpXSk7XG4gICAgICAgICAgICAgICAgc2VjdGlvbnNbaV0gPSB1aW50OEFycmF5VG9TdHJpbmcodjRCdWZmZXIuc2xpY2UoMCwgMiksICdiYXNlMTYnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2NEJ1ZmZlciAhPSBudWxsICYmICsraSA8IDgpIHtcbiAgICAgICAgICAgICAgICBzZWN0aW9ucy5zcGxpY2UoaSwgMCwgdWludDhBcnJheVRvU3RyaW5nKHY0QnVmZmVyLnNsaWNlKDIsIDQpLCAnYmFzZTE2JykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChzZWN0aW9uc1swXSA9PT0gJycpIHtcbiAgICAgICAgICAgIHdoaWxlIChzZWN0aW9ucy5sZW5ndGggPCA4KVxuICAgICAgICAgICAgICAgIHNlY3Rpb25zLnVuc2hpZnQoJzAnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWN0aW9uc1tzZWN0aW9ucy5sZW5ndGggLSAxXSA9PT0gJycpIHtcbiAgICAgICAgICAgIHdoaWxlIChzZWN0aW9ucy5sZW5ndGggPCA4KVxuICAgICAgICAgICAgICAgIHNlY3Rpb25zLnB1c2goJzAnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWN0aW9ucy5sZW5ndGggPCA4KSB7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc2VjdGlvbnMubGVuZ3RoICYmIHNlY3Rpb25zW2ldICE9PSAnJzsgaSsrKVxuICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgIGNvbnN0IGFyZ3YgPSBbaSwgMV07XG4gICAgICAgICAgICBmb3IgKGkgPSA5IC0gc2VjdGlvbnMubGVuZ3RoOyBpID4gMDsgaS0tKSB7XG4gICAgICAgICAgICAgICAgYXJndi5wdXNoKCcwJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWN0aW9ucy5zcGxpY2UuYXBwbHkoc2VjdGlvbnMsIGFyZ3YpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkob2Zmc2V0ICsgMTYpO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc2VjdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHdvcmQgPSBwYXJzZUludChzZWN0aW9uc1tpXSwgMTYpO1xuICAgICAgICAgICAgYnl0ZXNbb2Zmc2V0KytdID0gKHdvcmQgPj4gOCkgJiAweGZmO1xuICAgICAgICAgICAgYnl0ZXNbb2Zmc2V0KytdID0gd29yZCAmIDB4ZmY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgaXAgYWRkcmVzcycpO1xufTtcbi8vIENvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9pbmR1dG55L25vZGUtaXAvYmxvYi9tYXN0ZXIvbGliL2lwLmpzI0w2M1xuZXhwb3J0IGNvbnN0IHRvU3RyaW5nID0gZnVuY3Rpb24gKGJ1Ziwgb2Zmc2V0ID0gMCwgbGVuZ3RoKSB7XG4gICAgb2Zmc2V0ID0gfn5vZmZzZXQ7XG4gICAgbGVuZ3RoID0gbGVuZ3RoID8/IChidWYubGVuZ3RoIC0gb2Zmc2V0KTtcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1Zi5idWZmZXIpO1xuICAgIGlmIChsZW5ndGggPT09IDQpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgICAgIC8vIElQdjRcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goYnVmW29mZnNldCArIGldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0LmpvaW4oJy4nKTtcbiAgICB9XG4gICAgaWYgKGxlbmd0aCA9PT0gMTYpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgICAgIC8vIElQdjZcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMikge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2godmlldy5nZXRVaW50MTYob2Zmc2V0ICsgaSkudG9TdHJpbmcoMTYpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0LmpvaW4oJzonKVxuICAgICAgICAgICAgLnJlcGxhY2UoLyhefDopMCg6MCkqOjAoOnwkKS8sICckMTo6JDMnKVxuICAgICAgICAgICAgLnJlcGxhY2UoLzp7Myw0fS8sICc6OicpO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/ip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/multiaddr.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/multiaddr.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multiaddr: () => (/* binding */ Multiaddr),\n/* harmony export */   symbol: () => (/* binding */ symbol)\n/* harmony export */ });\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/errors.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var uint8arrays_equals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/equals */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/equals.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/to-string.node.js\");\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/codec.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./protocols-table.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/index.js\");\n/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\n\n\n\n\n\n\n\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\nconst DNS_CODES = [\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('dns').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('dns4').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('dns6').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('dnsaddr').code\n];\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass Multiaddr {\n    bytes;\n    #string;\n    #tuples;\n    #stringTuples;\n    #path;\n    [symbol] = true;\n    constructor(addr) {\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        let parts;\n        if (addr instanceof Uint8Array) {\n            parts = (0,_codec_js__WEBPACK_IMPORTED_MODULE_4__.bytesToMultiaddrParts)(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            parts = (0,_codec_js__WEBPACK_IMPORTED_MODULE_4__.stringToMultiaddrParts)(addr);\n        }\n        else if ((0,_index_js__WEBPACK_IMPORTED_MODULE_6__.isMultiaddr)(addr)) { // Multiaddr\n            parts = (0,_codec_js__WEBPACK_IMPORTED_MODULE_4__.bytesToMultiaddrParts)(addr.bytes);\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n        this.bytes = parts.bytes;\n        this.#string = parts.string;\n        this.#tuples = parts.tuples;\n        this.#stringTuples = parts.stringTuples;\n        this.#path = parts.path;\n    }\n    toString() {\n        return this.#string;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('tcp');\n        const udp = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('udp');\n        const ip4 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('ip4');\n        const ip6 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('ip6');\n        const dns6 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('dns6');\n        const ip6zone = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.#tuples.map(([code]) => Object.assign({}, (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)(code)));\n    }\n    protoCodes() {\n        return this.#tuples.map(([code]) => code);\n    }\n    protoNames() {\n        return this.#tuples.map(([code]) => (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.getProtocol)(code).name);\n    }\n    tuples() {\n        return this.#tuples;\n    }\n    stringTuples() {\n        return this.#stringTuples;\n    }\n    encapsulate(addr) {\n        addr = new Multiaddr(addr);\n        return new Multiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new Multiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new Multiaddr((0,_codec_js__WEBPACK_IMPORTED_MODULE_4__.tuplesToBytes)(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            let tuples = [];\n            this.stringTuples().forEach(([code, name]) => {\n                if (code === _protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.names.p2p.code) {\n                    tuples.push([code, name]);\n                }\n                // if this is a p2p-circuit address, return the target peer id if present\n                // not the peer id of the relay\n                if (code === _protocols_table_js__WEBPACK_IMPORTED_MODULE_5__.names['p2p-circuit'].code) {\n                    tuples = [];\n                }\n            });\n            // Get the last ipfs tuple ['p2p', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_3__.toString)(multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_0__.base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_3__.toString)(multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        return this.#path;\n    }\n    equals(addr) {\n        return (0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_2__.equals)(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = _index_js__WEBPACK_IMPORTED_MODULE_6__.resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw new _libp2p_interface__WEBPACK_IMPORTED_MODULE_7__.CodeError(`no available resolver for ${resolvableProto.name}`, 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const result = await resolver(this, options);\n        return result.map(str => (0,_index_js__WEBPACK_IMPORTED_MODULE_6__.multiaddr)(str));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [inspect]() {\n        return `Multiaddr(${this.#string})`;\n    }\n}\n//# sourceMappingURL=multiaddr.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/multiaddr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codes: () => (/* binding */ codes),\n/* harmony export */   createProtocol: () => (/* binding */ createProtocol),\n/* harmony export */   getProtocol: () => (/* binding */ getProtocol),\n/* harmony export */   names: () => (/* binding */ names),\n/* harmony export */   table: () => (/* binding */ table)\n/* harmony export */ });\nconst V = -1;\nconst names = {};\nconst codes = {};\nconst table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [481, V, 'http-path'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nfunction createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nfunction getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci9kaXN0L3NyYy9wcm90b2NvbHMtdGFibGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNPO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELE1BQU07QUFDeEQ7QUFDQSxpREFBaUQsYUFBYTtBQUM5RDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHIvZGlzdC9zcmMvcHJvdG9jb2xzLXRhYmxlLmpzPzY5ZTciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgViA9IC0xO1xuZXhwb3J0IGNvbnN0IG5hbWVzID0ge307XG5leHBvcnQgY29uc3QgY29kZXMgPSB7fTtcbmV4cG9ydCBjb25zdCB0YWJsZSA9IFtcbiAgICBbNCwgMzIsICdpcDQnXSxcbiAgICBbNiwgMTYsICd0Y3AnXSxcbiAgICBbMzMsIDE2LCAnZGNjcCddLFxuICAgIFs0MSwgMTI4LCAnaXA2J10sXG4gICAgWzQyLCBWLCAnaXA2em9uZSddLFxuICAgIFs0MywgOCwgJ2lwY2lkciddLFxuICAgIFs1MywgViwgJ2RucycsIHRydWVdLFxuICAgIFs1NCwgViwgJ2RuczQnLCB0cnVlXSxcbiAgICBbNTUsIFYsICdkbnM2JywgdHJ1ZV0sXG4gICAgWzU2LCBWLCAnZG5zYWRkcicsIHRydWVdLFxuICAgIFsxMzIsIDE2LCAnc2N0cCddLFxuICAgIFsyNzMsIDE2LCAndWRwJ10sXG4gICAgWzI3NSwgMCwgJ3AycC13ZWJydGMtc3RhciddLFxuICAgIFsyNzYsIDAsICdwMnAtd2VicnRjLWRpcmVjdCddLFxuICAgIFsyNzcsIDAsICdwMnAtc3RhcmR1c3QnXSxcbiAgICBbMjgwLCAwLCAnd2VicnRjLWRpcmVjdCddLFxuICAgIFsyODEsIDAsICd3ZWJydGMnXSxcbiAgICBbMjkwLCAwLCAncDJwLWNpcmN1aXQnXSxcbiAgICBbMzAxLCAwLCAndWR0J10sXG4gICAgWzMwMiwgMCwgJ3V0cCddLFxuICAgIFs0MDAsIFYsICd1bml4JywgZmFsc2UsIHRydWVdLFxuICAgIC8vIGBpcGZzYCBpcyBhZGRlZCBiZWZvcmUgYHAycGAgZm9yIGxlZ2FjeSBzdXBwb3J0LlxuICAgIC8vIEFsbCB0ZXh0IHJlcHJlc2VudGF0aW9ucyB3aWxsIGRlZmF1bHQgdG8gYHAycGAsIGJ1dCBgaXBmc2Agd2lsbFxuICAgIC8vIHN0aWxsIGJlIHN1cHBvcnRlZFxuICAgIFs0MjEsIFYsICdpcGZzJ10sXG4gICAgLy8gYHAycGAgaXMgdGhlIHByZWZlcnJlZCBuYW1lIGZvciA0MjEsIGFuZCBpcyBub3cgdGhlIGRlZmF1bHRcbiAgICBbNDIxLCBWLCAncDJwJ10sXG4gICAgWzQ0MywgMCwgJ2h0dHBzJ10sXG4gICAgWzQ0NCwgOTYsICdvbmlvbiddLFxuICAgIFs0NDUsIDI5NiwgJ29uaW9uMyddLFxuICAgIFs0NDYsIFYsICdnYXJsaWM2NCddLFxuICAgIFs0NDgsIDAsICd0bHMnXSxcbiAgICBbNDQ5LCBWLCAnc25pJ10sXG4gICAgWzQ2MCwgMCwgJ3F1aWMnXSxcbiAgICBbNDYxLCAwLCAncXVpYy12MSddLFxuICAgIFs0NjUsIDAsICd3ZWJ0cmFuc3BvcnQnXSxcbiAgICBbNDY2LCBWLCAnY2VydGhhc2gnXSxcbiAgICBbNDc3LCAwLCAnd3MnXSxcbiAgICBbNDc4LCAwLCAnd3NzJ10sXG4gICAgWzQ3OSwgMCwgJ3AycC13ZWJzb2NrZXQtc3RhciddLFxuICAgIFs0ODAsIDAsICdodHRwJ10sXG4gICAgWzQ4MSwgViwgJ2h0dHAtcGF0aCddLFxuICAgIFs3NzcsIFYsICdtZW1vcnknXVxuXTtcbi8vIHBvcHVsYXRlIHRhYmxlc1xudGFibGUuZm9yRWFjaChyb3cgPT4ge1xuICAgIGNvbnN0IHByb3RvID0gY3JlYXRlUHJvdG9jb2woLi4ucm93KTtcbiAgICBjb2Rlc1twcm90by5jb2RlXSA9IHByb3RvO1xuICAgIG5hbWVzW3Byb3RvLm5hbWVdID0gcHJvdG87XG59KTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm90b2NvbChjb2RlLCBzaXplLCBuYW1lLCByZXNvbHZhYmxlLCBwYXRoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY29kZSxcbiAgICAgICAgc2l6ZSxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgcmVzb2x2YWJsZTogQm9vbGVhbihyZXNvbHZhYmxlKSxcbiAgICAgICAgcGF0aDogQm9vbGVhbihwYXRoKVxuICAgIH07XG59XG4vKipcbiAqIEZvciB0aGUgcGFzc2VkIHByb3RvIHN0cmluZyBvciBudW1iZXIsIHJldHVybiBhIHtAbGluayBQcm90b2NvbH1cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgeyBwcm90b2NvbCB9IGZyb20gJ0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyJ1xuICpcbiAqIGNvbnNvbGUuaW5mbyhwcm90b2NvbCg0KSlcbiAqIC8vIHsgY29kZTogNCwgc2l6ZTogMzIsIG5hbWU6ICdpcDQnLCByZXNvbHZhYmxlOiBmYWxzZSwgcGF0aDogZmFsc2UgfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcm90b2NvbChwcm90bykge1xuICAgIGlmICh0eXBlb2YgcHJvdG8gPT09ICdudW1iZXInKSB7XG4gICAgICAgIGlmIChjb2Rlc1twcm90b10gIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvZGVzW3Byb3RvXTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYG5vIHByb3RvY29sIHdpdGggY29kZTogJHtwcm90b31gKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHByb3RvID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAobmFtZXNbcHJvdG9dICE9IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBuYW1lc1twcm90b107XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBubyBwcm90b2NvbCB3aXRoIG5hbWU6ICR7cHJvdG99YCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBwcm90b2NvbCBpZCB0eXBlOiAke3R5cGVvZiBwcm90b31gKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3RvY29scy10YWJsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        /* c8 ignore next 3 */\n        if (prefix.codePointAt(0) === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefix.codePointAt(0);\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nclass Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabet, bitsPerChar, name) {\n    // Build the character lookup table:\n    const codes = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        codes[alphabet[i]] = i;\n    }\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\n/**\n * RFC4648 Factory\n */\nfunction rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base10.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base10.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base10: () => (/* binding */ base10)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: '9',\n    name: 'base10',\n    alphabet: '0123456789'\n});\n//# sourceMappingURL=base10.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTEwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQzNCLGVBQWUsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UxMC5qcz8yYTE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMTAgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnOScsXG4gICAgbmFtZTogJ2Jhc2UxMCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5J1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMTAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base16.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base16.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base16: () => (/* binding */ base16),\n/* harmony export */   base16upper: () => (/* binding */ base16upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'f',\n    name: 'base16',\n    alphabet: '0123456789abcdef',\n    bitsPerChar: 4\n});\nconst base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'F',\n    name: 'base16upper',\n    alphabet: '0123456789ABCDEF',\n    bitsPerChar: 4\n});\n//# sourceMappingURL=base16.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTE2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUM3QixlQUFlLGlEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLG9CQUFvQixpREFBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMTYuanM/YmY4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMTYgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdmJyxcbiAgICBuYW1lOiAnYmFzZTE2JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWYnLFxuICAgIGJpdHNQZXJDaGFyOiA0XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMTZ1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0YnLFxuICAgIG5hbWU6ICdiYXNlMTZ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGJyxcbiAgICBiaXRzUGVyQ2hhcjogNFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMTYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base2.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base2.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base2: () => (/* binding */ base2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: '0',\n    name: 'base2',\n    alphabet: '01',\n    bitsPerChar: 1\n});\n//# sourceMappingURL=base2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsY0FBYyxpREFBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMi5qcz9hNWY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnMCcsXG4gICAgbmFtZTogJ2Jhc2UyJyxcbiAgICBhbHBoYWJldDogJzAxJyxcbiAgICBiaXRzUGVyQ2hhcjogMVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base256emoji.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base256emoji.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base256emoji: () => (/* binding */ base256emoji)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂');\nconst alphabetBytesToChars = (alphabet.reduce((p, c, i) => { p[i] = c; return p; }, ([])));\nconst alphabetCharsToBytes = (alphabet.reduce((p, c, i) => { p[c.codePointAt(0)] = i; return p; }, ([])));\nfunction encode(data) {\n    return data.reduce((p, c) => {\n        p += alphabetBytesToChars[c];\n        return p;\n    }, '');\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str) {\n        const byt = alphabetCharsToBytes[char.codePointAt(0)];\n        if (byt === undefined) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nconst base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: '🚀',\n    name: 'base256emoji',\n    encode,\n    decode\n});\n//# sourceMappingURL=base256emoji.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTI1NmVtb2ppLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlDO0FBQ2pDO0FBQ0EsNkRBQTZELFVBQVUsV0FBVztBQUNsRiw2REFBNkQseUJBQXlCLFdBQVc7QUFDakc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELEtBQUs7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFCQUFxQiw4Q0FBSTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMjU2ZW1vamkuanM/NDA0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tIH0gZnJvbSAnLi9iYXNlLmpzJztcbmNvbnN0IGFscGhhYmV0ID0gQXJyYXkuZnJvbSgn8J+agPCfqpDimITwn5uw8J+MjPCfjJHwn4yS8J+Mk/CfjJTwn4yV8J+MlvCfjJfwn4yY8J+MjfCfjI/wn4yO8J+QieKYgPCfkrvwn5al8J+SvvCfkr/wn5iC4p2k8J+YjfCfpKPwn5iK8J+Zj/CfkpXwn5it8J+YmPCfkY3wn5iF8J+Rj/CfmIHwn5Sl8J+lsPCfkpTwn5KW8J+SmfCfmKLwn6SU8J+YhvCfmYTwn5Kq8J+YieKYuvCfkYzwn6SX8J+SnPCfmJTwn5iO8J+Yh/CfjLnwn6Sm8J+OifCfkp7inIzinKjwn6S38J+YsfCfmIzwn4y48J+ZjPCfmIvwn5KX8J+SmvCfmI/wn5Kb8J+ZgvCfkpPwn6Sp8J+YhPCfmIDwn5ak8J+Yg/Cfkq/wn5mI8J+Rh/Cfjrbwn5iS8J+kreKdo/CfmJzwn5KL8J+RgPCfmKrwn5iR8J+SpfCfmYvwn5ie8J+YqfCfmKHwn6Sq8J+RivCfpbPwn5il8J+kpPCfkYnwn5KD8J+Ys+Kci/CfmJrwn5id8J+YtPCfjJ/wn5is8J+Zg/CfjYDwn4y38J+Yu/CfmJPirZDinIXwn6W68J+MiPCfmIjwn6SY8J+SpuKclPCfmKPwn4+D8J+SkOKYufCfjorwn5KY8J+YoOKYnfCfmJXwn4y68J+OgvCfjLvwn5iQ8J+WlfCfkp3wn5mK8J+YufCfl6Pwn5Kr8J+SgPCfkZHwn4618J+knvCfmJvwn5S08J+YpPCfjLzwn5ir4pq98J+kmeKYlfCfj4bwn6Sr8J+RiPCfmK7wn5mG8J+Nu/CfjYPwn5C28J+SgfCfmLLwn4y/8J+nofCfjoHimqHwn4ye8J+OiOKdjOKcivCfkYvwn5iw8J+kqPCfmLbwn6Sd8J+atvCfkrDwn42T8J+SovCfpJ/wn5mB8J+aqPCfkqjwn6Ss4pyI8J+OgPCfjbrwn6ST8J+YmfCfkp/wn4yx8J+YlvCfkbbwn6W04pa24p6h4p2T8J+SjvCfkrjirIfwn5io8J+MmvCfpovwn5i38J+VuuKaoPCfmYXwn5if8J+YtfCfkY7wn6Sy8J+koPCfpKfwn5OM8J+UtfCfkoXwn6eQ8J+QvvCfjZLwn5iX8J+kkfCfjIrwn6Sv8J+Qt+KYjvCfkqfwn5iv8J+ShvCfkYbwn46k8J+Zh/CfjZHinYTwn4y08J+So/CfkLjwn5KM8J+TjfCfpYDwn6Si8J+RhfCfkqHwn5Kp8J+RkPCfk7jwn5G78J+kkPCfpK7wn4688J+ltfCfmqnwn42O8J+NivCfkbzwn5KN8J+To/CfpYInKTtcbmNvbnN0IGFscGhhYmV0Qnl0ZXNUb0NoYXJzID0gKGFscGhhYmV0LnJlZHVjZSgocCwgYywgaSkgPT4geyBwW2ldID0gYzsgcmV0dXJuIHA7IH0sIChbXSkpKTtcbmNvbnN0IGFscGhhYmV0Q2hhcnNUb0J5dGVzID0gKGFscGhhYmV0LnJlZHVjZSgocCwgYywgaSkgPT4geyBwW2MuY29kZVBvaW50QXQoMCldID0gaTsgcmV0dXJuIHA7IH0sIChbXSkpKTtcbmZ1bmN0aW9uIGVuY29kZShkYXRhKSB7XG4gICAgcmV0dXJuIGRhdGEucmVkdWNlKChwLCBjKSA9PiB7XG4gICAgICAgIHAgKz0gYWxwaGFiZXRCeXRlc1RvQ2hhcnNbY107XG4gICAgICAgIHJldHVybiBwO1xuICAgIH0sICcnKTtcbn1cbmZ1bmN0aW9uIGRlY29kZShzdHIpIHtcbiAgICBjb25zdCBieXRzID0gW107XG4gICAgZm9yIChjb25zdCBjaGFyIG9mIHN0cikge1xuICAgICAgICBjb25zdCBieXQgPSBhbHBoYWJldENoYXJzVG9CeXRlc1tjaGFyLmNvZGVQb2ludEF0KDApXTtcbiAgICAgICAgaWYgKGJ5dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vbi1iYXNlMjU2ZW1vamkgY2hhcmFjdGVyOiAke2NoYXJ9YCk7XG4gICAgICAgIH1cbiAgICAgICAgYnl0cy5wdXNoKGJ5dCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShieXRzKTtcbn1cbmV4cG9ydCBjb25zdCBiYXNlMjU2ZW1vamkgPSBmcm9tKHtcbiAgICBwcmVmaXg6ICfwn5qAJyxcbiAgICBuYW1lOiAnYmFzZTI1NmVtb2ppJyxcbiAgICBlbmNvZGUsXG4gICAgZGVjb2RlXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UyNTZlbW9qaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base256emoji.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base32.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base32.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTMyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDN0IsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsaURBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHVCQUF1QixpREFBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLGlEQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSwwQkFBMEIsaURBQU87QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sZ0JBQWdCLGlEQUFPO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzMi5qcz8yMjE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2InLFxuICAgIG5hbWU6ICdiYXNlMzInLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ0InLFxuICAgIG5hbWU6ICdiYXNlMzJ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2MnLFxuICAgIG5hbWU6ICdiYXNlMzJwYWQnLFxuICAgIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdDJyxcbiAgICBuYW1lOiAnYmFzZTMycGFkdXBwZXInLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dicsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnVicsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHVwcGVyJyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAndCcsXG4gICAgbmFtZTogJ2Jhc2UzMmhleHBhZCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXhwYWR1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1QnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXhwYWR1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVj0nLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ6ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnaCcsXG4gICAgbmFtZTogJ2Jhc2UzMnonLFxuICAgIGFscGhhYmV0OiAneWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjknLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base36.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base36.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixlQUFlLCtDQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxvQkFBb0IsK0NBQUs7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzNi5qcz9kNzgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzYgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnaycsXG4gICAgbmFtZTogJ2Jhc2UzNicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzZ1cHBlciA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdLJyxcbiAgICBuYW1lOiAnYmFzZTM2dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMzYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base58.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base58.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixrQkFBa0IsK0NBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQiwrQ0FBSztBQUNqQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzP2M4MTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgICBwcmVmaXg6ICd6JyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gICAgbmFtZTogJ2Jhc2U1OGZsaWNrcicsXG4gICAgcHJlZml4OiAnWicsXG4gICAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNTguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base64.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base64.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'm',\n    name: 'base64',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'M',\n    name: 'base64pad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'u',\n    name: 'base64url',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: 'U',\n    name: 'base64urlpad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n    bitsPerChar: 6\n});\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9DO0FBQzdCLGVBQWUsaURBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLGtCQUFrQixpREFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxxQkFBcUIsaURBQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTY0LmpzPzM2YzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTY0ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnbScsXG4gICAgbmFtZTogJ2Jhc2U2NCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJyxcbiAgICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0cGFkID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnTScsXG4gICAgbmFtZTogJ2Jhc2U2NHBhZCcsXG4gICAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPScsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ3UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmwnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXycsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybHBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1UnLFxuICAgIG5hbWU6ICdiYXNlNjR1cmxwYWQnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXz0nLFxuICAgIGJpdHNQZXJDaGFyOiA2XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base8.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base8.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base8: () => (/* binding */ base8)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: '7',\n    name: 'base8',\n    alphabet: '01234567',\n    bitsPerChar: 3\n});\n//# sourceMappingURL=base8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsY0FBYyxpREFBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlOC5qcz9lNjVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U4ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnNycsXG4gICAgbmFtZTogJ2Jhc2U4JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3JyxcbiAgICBiaXRzUGVyQ2hhcjogM1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlOC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/identity.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/identity.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base.js\");\n\n\nconst identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    prefix: '\\x00',\n    name: 'identity',\n    encode: (buf) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.toString)(buf),\n    decode: (str) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.fromString)(str)\n});\n//# sourceMappingURL=identity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvaWRlbnRpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1EO0FBQ2xCO0FBQzFCLGlCQUFpQiw4Q0FBSTtBQUM1QjtBQUNBO0FBQ0EscUJBQXFCLG1EQUFRO0FBQzdCLHFCQUFxQixxREFBVTtBQUMvQixDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvaWRlbnRpdHkuanM/NTM0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tU3RyaW5nLCB0b1N0cmluZyB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCB7IGZyb20gfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGlkZW50aXR5ID0gZnJvbSh7XG4gICAgcHJlZml4OiAnXFx4MDAnLFxuICAgIG5hbWU6ICdpZGVudGl0eScsXG4gICAgZW5jb2RlOiAoYnVmKSA9PiB0b1N0cmluZyhidWYpLFxuICAgIGRlY29kZTogKHN0cikgPT4gZnJvbVN0cmluZyhzdHIpXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlkZW50aXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/interface.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/interface.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ1U7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanM/NDcxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlIGVuY29kZXJzIC8gZGVjb2RlcnMganVzdCBiYXNlIGVuY29kZSAvIGRlY29kZSBiZXR3ZWVuIGJpbmFyeSBhbmRcbi8vIHRleHR1YWwgcmVwcmVzZW50YXRpb24uIFRoZXkgYXJlIHVuYXdhcmUgb2YgbXVsdGliYXNlLlxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/basics.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/basics.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),\n/* harmony export */   bases: () => (/* binding */ bases),\n/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),\n/* harmony export */   codecs: () => (/* binding */ codecs),\n/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),\n/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),\n/* harmony export */   hashes: () => (/* binding */ hashes),\n/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)\n/* harmony export */ });\n/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base10.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base10.js\");\n/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base16.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base16.js\");\n/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base2.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base2.js\");\n/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base256emoji.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base256emoji.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base64.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base8.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base8.js\");\n/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/identity.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/identity.js\");\n/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./codecs/json.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/json.js\");\n/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./codecs/raw.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/raw.js\");\n/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hashes/identity.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/identity.js\");\n/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hashes/sha2.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst bases = { ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_9__, ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_2__, ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_8__, ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_0__, ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_1__, ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_4__, ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_5__, ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_6__, ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_7__, ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ };\nconst hashes = { ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__, ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ };\nconst codecs = { raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__, json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ };\n\n//# sourceMappingURL=basics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ0E7QUFDRjtBQUNjO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDRjtBQUNVO0FBQ1g7QUFDRjtBQUNVO0FBQ1I7QUFDdUI7QUFDekQsZ0JBQWdCLEdBQUcsK0NBQVksS0FBSyw0Q0FBSyxLQUFLLDRDQUFLLEtBQUssNkNBQU0sS0FBSyw2Q0FBTSxLQUFLLDZDQUFNLEtBQUssNkNBQU0sS0FBSyw2Q0FBTSxLQUFLLDZDQUFNLEtBQUssbURBQVk7QUFDdEksaUJBQWlCLEdBQUcsNkNBQUksS0FBSyxpREFBUTtBQUNyQyxpQkFBaUIsR0FBRyxvREFBTTtBQUNhO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2ljcy5qcz8wODVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGJhc2UxMCBmcm9tICcuL2Jhc2VzL2Jhc2UxMC5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMTYgZnJvbSAnLi9iYXNlcy9iYXNlMTYuanMnO1xuaW1wb3J0ICogYXMgYmFzZTIgZnJvbSAnLi9iYXNlcy9iYXNlMi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMjU2ZW1vamkgZnJvbSAnLi9iYXNlcy9iYXNlMjU2ZW1vamkuanMnO1xuaW1wb3J0ICogYXMgYmFzZTMyIGZyb20gJy4vYmFzZXMvYmFzZTMyLmpzJztcbmltcG9ydCAqIGFzIGJhc2UzNiBmcm9tICcuL2Jhc2VzL2Jhc2UzNi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlNTggZnJvbSAnLi9iYXNlcy9iYXNlNTguanMnO1xuaW1wb3J0ICogYXMgYmFzZTY0IGZyb20gJy4vYmFzZXMvYmFzZTY0LmpzJztcbmltcG9ydCAqIGFzIGJhc2U4IGZyb20gJy4vYmFzZXMvYmFzZTguanMnO1xuaW1wb3J0ICogYXMgaWRlbnRpdHlCYXNlIGZyb20gJy4vYmFzZXMvaWRlbnRpdHkuanMnO1xuaW1wb3J0ICogYXMganNvbiBmcm9tICcuL2NvZGVjcy9qc29uLmpzJztcbmltcG9ydCAqIGFzIHJhdyBmcm9tICcuL2NvZGVjcy9yYXcuanMnO1xuaW1wb3J0ICogYXMgaWRlbnRpdHkgZnJvbSAnLi9oYXNoZXMvaWRlbnRpdHkuanMnO1xuaW1wb3J0ICogYXMgc2hhMiBmcm9tICcuL2hhc2hlcy9zaGEyLmpzJztcbmltcG9ydCB7IENJRCwgaGFzaGVyLCBkaWdlc3QsIHZhcmludCwgYnl0ZXMgfSBmcm9tICcuL2luZGV4LmpzJztcbmV4cG9ydCBjb25zdCBiYXNlcyA9IHsgLi4uaWRlbnRpdHlCYXNlLCAuLi5iYXNlMiwgLi4uYmFzZTgsIC4uLmJhc2UxMCwgLi4uYmFzZTE2LCAuLi5iYXNlMzIsIC4uLmJhc2UzNiwgLi4uYmFzZTU4LCAuLi5iYXNlNjQsIC4uLmJhc2UyNTZlbW9qaSB9O1xuZXhwb3J0IGNvbnN0IGhhc2hlcyA9IHsgLi4uc2hhMiwgLi4uaWRlbnRpdHkgfTtcbmV4cG9ydCBjb25zdCBjb2RlY3MgPSB7IHJhdywganNvbiB9O1xuZXhwb3J0IHsgQ0lELCBoYXNoZXIsIGRpZ2VzdCwgdmFyaW50LCBieXRlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzaWNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/basics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/block/interface.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/block/interface.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmxvY2svaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jsb2NrL2ludGVyZmFjZS5qcz9mODZlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb)\n        return true;\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n        return o;\n    if (o instanceof ArrayBuffer)\n        return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG9CQUFvQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2J5dGVzLmpzP2Q5NjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVtcHR5ID0gbmV3IFVpbnQ4QXJyYXkoMCk7XG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoZCkge1xuICAgIHJldHVybiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChoZXgpIHtcbiAgICBjb25zdCBoZXhlcyA9IGhleC5tYXRjaCgvLi4vZyk7XG4gICAgcmV0dXJuIGhleGVzICE9IG51bGwgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhYSwgYmIpIHtcbiAgICBpZiAoYWEgPT09IGJiKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoYWEuYnl0ZUxlbmd0aCAhPT0gYmIuYnl0ZUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGlpID0gMDsgaWkgPCBhYS5ieXRlTGVuZ3RoOyBpaSsrKSB7XG4gICAgICAgIGlmIChhYVtpaV0gIT09IGJiW2lpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvZXJjZShvKSB7XG4gICAgaWYgKG8gaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIG8uY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKVxuICAgICAgICByZXR1cm4gbztcbiAgICBpZiAobyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKVxuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobyk7XG4gICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhvKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0JpbmFyeShvKSB7XG4gICAgcmV0dXJuIG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcobyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbVN0cmluZyhzdHIpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYikge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/cid.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/cid.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder));\n    }\n}\nfunction toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nclass CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_4__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc;\n            return [\n                _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix,\n                decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix}${source}`)\n            ];\n        }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix: {\n            const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc;\n            return [_bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix, decoder.decode(source)];\n        }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n            const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n            return [_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_4__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_4__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_4__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_4__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/interface.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/interface.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9jb2RlY3MvaW50ZXJmYWNlLmpzP2RmYjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/json.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/json.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = 'json';\nconst code = 0x0200;\nfunction encode(node) {\n    return textEncoder.encode(JSON.stringify(node));\n}\nfunction decode(data) {\n    return JSON.parse(textDecoder.decode(data));\n}\n//# sourceMappingURL=json.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL2pzb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL2pzb24uanM/ODU0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0ZXh0RW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuY29uc3QgdGV4dERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbmV4cG9ydCBjb25zdCBuYW1lID0gJ2pzb24nO1xuZXhwb3J0IGNvbnN0IGNvZGUgPSAweDAyMDA7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKG5vZGUpIHtcbiAgICByZXR1cm4gdGV4dEVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KG5vZGUpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHRleHREZWNvZGVyLmRlY29kZShkYXRhKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/raw.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/raw.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\");\n\nconst name = 'raw';\nconst code = 0x55;\nfunction encode(node) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\n}\nfunction decode(data) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n}\n//# sourceMappingURL=raw.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL3Jhdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxQztBQUM5QjtBQUNBO0FBQ0E7QUFDUCxXQUFXLGlEQUFNO0FBQ2pCO0FBQ087QUFDUCxXQUFXLGlEQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvY29kZWNzL3Jhdy5qcz9iMjJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmV4cG9ydCBjb25zdCBuYW1lID0gJ3Jhdyc7XG5leHBvcnQgY29uc3QgY29kZSA9IDB4NTU7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKG5vZGUpIHtcbiAgICByZXR1cm4gY29lcmNlKG5vZGUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhKSB7XG4gICAgcmV0dXJuIGNvZXJjZShkYXRhKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhdy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/digest.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/digest.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */\nfunction create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nfunction decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nclass Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkQ7QUFDcEI7QUFDdkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHVCQUF1QixzREFBcUI7QUFDNUMsc0NBQXNDLHNEQUFxQjtBQUMzRDtBQUNBLElBQUksZ0RBQWU7QUFDbkIsSUFBSSxnREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtCQUFrQixpREFBTTtBQUN4QiwrQkFBK0IsOENBQWE7QUFDNUMsaUNBQWlDLDhDQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2RpZ2VzdC5qcz9kNTYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSwgZXF1YWxzIGFzIGVxdWFsQnl0ZXMgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJztcbi8qKlxuICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoY29kZSwgZGlnZXN0KSB7XG4gICAgY29uc3Qgc2l6ZSA9IGRpZ2VzdC5ieXRlTGVuZ3RoO1xuICAgIGNvbnN0IHNpemVPZmZzZXQgPSB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoY29kZSk7XG4gICAgY29uc3QgZGlnZXN0T2Zmc2V0ID0gc2l6ZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGRpZ2VzdE9mZnNldCArIHNpemUpO1xuICAgIHZhcmludC5lbmNvZGVUbyhjb2RlLCBieXRlcywgMCk7XG4gICAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KTtcbiAgICBieXRlcy5zZXQoZGlnZXN0LCBkaWdlc3RPZmZzZXQpO1xuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuLyoqXG4gKiBUdXJucyBieXRlcyByZXByZXNlbnRhdGlvbiBvZiBtdWx0aWhhc2ggZGlnZXN0IGludG8gYW4gaW5zdGFuY2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUobXVsdGloYXNoKSB7XG4gICAgY29uc3QgYnl0ZXMgPSBjb2VyY2UobXVsdGloYXNoKTtcbiAgICBjb25zdCBbY29kZSwgc2l6ZU9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzKTtcbiAgICBjb25zdCBbc2l6ZSwgZGlnZXN0T2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoc2l6ZU9mZnNldCkpO1xuICAgIGNvbnN0IGRpZ2VzdCA9IGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQgKyBkaWdlc3RPZmZzZXQpO1xuICAgIGlmIChkaWdlc3QuYnl0ZUxlbmd0aCAhPT0gc2l6ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luY29ycmVjdCBsZW5ndGgnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBiO1xuICAgICAgICByZXR1cm4gKGEuY29kZSA9PT0gZGF0YS5jb2RlICYmXG4gICAgICAgICAgICBhLnNpemUgPT09IGRhdGEuc2l6ZSAmJlxuICAgICAgICAgICAgZGF0YS5ieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICAgICAgICAgIGVxdWFsQnl0ZXMoYS5ieXRlcywgZGF0YS5ieXRlcykpO1xuICAgIH1cbn1cbi8qKlxuICogUmVwcmVzZW50cyBhIG11bHRpaGFzaCBkaWdlc3Qgd2hpY2ggY2FycmllcyBpbmZvcm1hdGlvbiBhYm91dCB0aGVcbiAqIGhhc2hpbmcgYWxnb3JpdGhtIGFuZCBhbiBhY3R1YWwgaGFzaCBkaWdlc3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBEaWdlc3Qge1xuICAgIGNvZGU7XG4gICAgc2l6ZTtcbiAgICBkaWdlc3Q7XG4gICAgYnl0ZXM7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG11bHRpaGFzaCBkaWdlc3QuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLmRpZ2VzdCA9IGRpZ2VzdDtcbiAgICAgICAgdGhpcy5ieXRlcyA9IGJ5dGVzO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpZ2VzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/hasher.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/digest.js\");\n\nfunction from({ name, code, encode }) {\n    return new Hasher(name, code, encode);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nclass Hasher {\n    name;\n    code;\n    encode;\n    constructor(name, code, encode) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n    }\n    digest(input) {\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            return result instanceof Uint8Array\n                ? _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, result)\n                /* c8 ignore next 1 */\n                : result.then(digest => _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, digest));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDL0IsZ0JBQWdCLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4Q0FBYTtBQUMvQjtBQUNBLHdDQUF3Qyw4Q0FBYTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9oYXNoZXIuanM/N2ZhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGZyb20oeyBuYW1lLCBjb2RlLCBlbmNvZGUgfSkge1xuICAgIHJldHVybiBuZXcgSGFzaGVyKG5hbWUsIGNvZGUsIGVuY29kZSk7XG59XG4vKipcbiAqIEhhc2hlciByZXByZXNlbnRzIGEgaGFzaGluZyBhbGdvcml0aG0gaW1wbGVtZW50YXRpb24gdGhhdCBwcm9kdWNlcyBhc1xuICogYE11bHRpaGFzaERpZ2VzdGAuXG4gKi9cbmV4cG9ydCBjbGFzcyBIYXNoZXIge1xuICAgIG5hbWU7XG4gICAgY29kZTtcbiAgICBlbmNvZGU7XG4gICAgY29uc3RydWN0b3IobmFtZSwgY29kZSwgZW5jb2RlKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgICAgIHRoaXMuZW5jb2RlID0gZW5jb2RlO1xuICAgIH1cbiAgICBkaWdlc3QoaW5wdXQpIHtcbiAgICAgICAgaWYgKGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5lbmNvZGUoaW5wdXQpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXlcbiAgICAgICAgICAgICAgICA/IERpZ2VzdC5jcmVhdGUodGhpcy5jb2RlLCByZXN1bHQpXG4gICAgICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgICAgICAgICAgICAgIDogcmVzdWx0LnRoZW4oZGlnZXN0ID0+IERpZ2VzdC5jcmVhdGUodGhpcy5jb2RlLCBkaWdlc3QpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbiAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDEgKi9cbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/identity.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/identity.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/digest.js\");\n\n\nconst code = 0x0;\nconst name = 'identity';\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nfunction digest(input) {\n    return _digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\n}\nconst identity = { code, name, encode, digest };\n//# sourceMappingURL=identity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2lkZW50aXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ3RDO0FBQ0E7QUFDQSxlQUFlLDZDQUFNO0FBQ3JCO0FBQ0EsV0FBVyw4Q0FBYTtBQUN4QjtBQUNPLG1CQUFtQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaWRlbnRpdHkuanM/NGJhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgY29kZSA9IDB4MDtcbmNvbnN0IG5hbWUgPSAnaWRlbnRpdHknO1xuY29uc3QgZW5jb2RlID0gY29lcmNlO1xuZnVuY3Rpb24gZGlnZXN0KGlucHV0KSB7XG4gICAgcmV0dXJuIERpZ2VzdC5jcmVhdGUoY29kZSwgZW5jb2RlKGlucHV0KSk7XG59XG5leHBvcnQgY29uc3QgaWRlbnRpdHkgPSB7IGNvZGUsIG5hbWUsIGVuY29kZSwgZGlnZXN0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZGVudGl0eS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/interface.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/interface.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pbnRlcmZhY2UuanM/NDcxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjIE11bHRpaGFzaFxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/sha2.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/sha2.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/hasher.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: (input) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256').update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: input => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha512').update(input).digest())\n});\n//# sourceMappingURL=sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL3NoYTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEI7QUFDUztBQUNGO0FBQzVCLGVBQWUsZ0RBQUk7QUFDMUI7QUFDQTtBQUNBLHVCQUF1QixpREFBTSxDQUFDLDhDQUFpQjtBQUMvQyxDQUFDO0FBQ00sZUFBZSxnREFBSTtBQUMxQjtBQUNBO0FBQ0EscUJBQXFCLGlEQUFNLENBQUMsOENBQWlCO0FBQzdDLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvc2hhMi5qcz9lMzVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbmltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCB7IGZyb20gfSBmcm9tICcuL2hhc2hlci5qcyc7XG5leHBvcnQgY29uc3Qgc2hhMjU2ID0gZnJvbSh7XG4gICAgbmFtZTogJ3NoYTItMjU2JyxcbiAgICBjb2RlOiAweDEyLFxuICAgIGVuY29kZTogKGlucHV0KSA9PiBjb2VyY2UoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG59KTtcbmV4cG9ydCBjb25zdCBzaGE1MTIgPSBmcm9tKHtcbiAgICBuYW1lOiAnc2hhMi01MTInLFxuICAgIGNvZGU6IDB4MTMsXG4gICAgZW5jb2RlOiBpbnB1dCA9PiBjb2VyY2UoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTUxMicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/interface.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/interface.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ0E7QUFDRjtBQUNDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2ludGVyZmFjZS5qcz9iMzc1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYmFzZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaGFzaGVzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvZGVjcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9saW5rL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Jsb2NrL2ludGVyZmFjZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/link/interface.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/link/interface.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable @typescript-eslint/no-unnecessary-type-constraint */\n/* eslint-disable no-use-before-define */\n\n//# sourceMappingURL=interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvbGluay9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2xpbmsvaW50ZXJmYWNlLmpzPzZhMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVubmVjZXNzYXJ5LXR5cGUtY29uc3RyYWludCAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdXNlLWJlZm9yZS1kZWZpbmUgKi9cbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/varint.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/varint.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDakM7QUFDUCxpQkFBaUIseURBQU07QUFDdkIsa0JBQWtCLHlEQUFNO0FBQ3hCO0FBQ087QUFDUCxJQUFJLHlEQUFNO0FBQ1Y7QUFDQTtBQUNPO0FBQ1AsV0FBVyx5REFBTTtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZhcmludC5qcz9kN2JlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAnLi92ZW5kb3IvdmFyaW50LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb2Zmc2V0ID0gMCkge1xuICAgIGNvbnN0IGNvZGUgPSB2YXJpbnQuZGVjb2RlKGRhdGEsIG9mZnNldCk7XG4gICAgcmV0dXJuIFtjb2RlLCB2YXJpbnQuZGVjb2RlLmJ5dGVzXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUbyhpbnQsIHRhcmdldCwgb2Zmc2V0ID0gMCkge1xuICAgIHZhcmludC5lbmNvZGUoaW50LCB0YXJnZXQsIG9mZnNldCk7XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGluZ0xlbmd0aChpbnQpIHtcbiAgICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGludCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YXJpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/vendor/base-x.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceMappingURL=base-x.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL2Jhc2UteC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxLQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pELGtEQUFrRDtBQUNsRDtBQUNBLGVBQWUsMEJBQTBCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDZDQUE2QztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsNkNBQTZDO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQW1CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixNQUFNO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLCtCQUErQixFQUFDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZlbmRvci9iYXNlLXguanM/ODIxOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLy8gYmFzZS14IGVuY29kaW5nIC8gZGVjb2Rpbmdcbi8vIENvcHlyaWdodCAoYykgMjAxOCBiYXNlLXggY29udHJpYnV0b3JzXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxOCBUaGUgQml0Y29pbiBDb3JlIGRldmVsb3BlcnMgKGJhc2U1OC5jcHApXG4vLyBEaXN0cmlidXRlZCB1bmRlciB0aGUgTUlUIHNvZnR3YXJlIGxpY2Vuc2UsIHNlZSB0aGUgYWNjb21wYW55aW5nXG4vLyBmaWxlIExJQ0VOU0Ugb3IgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHAuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBBTFBIQUJFVFxuICogQHBhcmFtIHthbnl9IG5hbWVcbiAqL1xuZnVuY3Rpb24gYmFzZShBTFBIQUJFVCwgbmFtZSkge1xuICAgIGlmIChBTFBIQUJFVC5sZW5ndGggPj0gMjU1KSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FscGhhYmV0IHRvbyBsb25nJyk7XG4gICAgfVxuICAgIHZhciBCQVNFX01BUCA9IG5ldyBVaW50OEFycmF5KDI1Nik7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBCQVNFX01BUC5sZW5ndGg7IGorKykge1xuICAgICAgICBCQVNFX01BUFtqXSA9IDI1NTtcbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBBTFBIQUJFVC5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgeCA9IEFMUEhBQkVULmNoYXJBdChpKTtcbiAgICAgICAgdmFyIHhjID0geC5jaGFyQ29kZUF0KDApO1xuICAgICAgICBpZiAoQkFTRV9NQVBbeGNdICE9PSAyNTUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoeCArICcgaXMgYW1iaWd1b3VzJyk7XG4gICAgICAgIH1cbiAgICAgICAgQkFTRV9NQVBbeGNdID0gaTtcbiAgICB9XG4gICAgdmFyIEJBU0UgPSBBTFBIQUJFVC5sZW5ndGg7XG4gICAgdmFyIExFQURFUiA9IEFMUEhBQkVULmNoYXJBdCgwKTtcbiAgICB2YXIgRkFDVE9SID0gTWF0aC5sb2coQkFTRSkgLyBNYXRoLmxvZygyNTYpOyAvLyBsb2coQkFTRSkgLyBsb2coMjU2KSwgcm91bmRlZCB1cFxuICAgIHZhciBpRkFDVE9SID0gTWF0aC5sb2coMjU2KSAvIE1hdGgubG9nKEJBU0UpOyAvLyBsb2coMjU2KSAvIGxvZyhCQVNFKSwgcm91bmRlZCB1cFxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7YW55W10gfCBJdGVyYWJsZTxudW1iZXI+fSBzb3VyY2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBlbmNvZGUoc291cmNlKSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaWYgKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpXG4gICAgICAgICAgICA7XG4gICAgICAgIGVsc2UgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhzb3VyY2UpKSB7XG4gICAgICAgICAgICBzb3VyY2UgPSBuZXcgVWludDhBcnJheShzb3VyY2UuYnVmZmVyLCBzb3VyY2UuYnl0ZU9mZnNldCwgc291cmNlLmJ5dGVMZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgICAgICAgc291cmNlID0gVWludDhBcnJheS5mcm9tKHNvdXJjZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEoc291cmNlIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFVpbnQ4QXJyYXknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc291cmNlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICAgIC8vIFNraXAgJiBjb3VudCBsZWFkaW5nIHplcm9lcy5cbiAgICAgICAgdmFyIHplcm9lcyA9IDA7XG4gICAgICAgIHZhciBsZW5ndGggPSAwO1xuICAgICAgICB2YXIgcGJlZ2luID0gMDtcbiAgICAgICAgdmFyIHBlbmQgPSBzb3VyY2UubGVuZ3RoO1xuICAgICAgICB3aGlsZSAocGJlZ2luICE9PSBwZW5kICYmIHNvdXJjZVtwYmVnaW5dID09PSAwKSB7XG4gICAgICAgICAgICBwYmVnaW4rKztcbiAgICAgICAgICAgIHplcm9lcysrO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFsbG9jYXRlIGVub3VnaCBzcGFjZSBpbiBiaWctZW5kaWFuIGJhc2U1OCByZXByZXNlbnRhdGlvbi5cbiAgICAgICAgdmFyIHNpemUgPSAoKHBlbmQgLSBwYmVnaW4pICogaUZBQ1RPUiArIDEpID4+PiAwO1xuICAgICAgICB2YXIgYjU4ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG4gICAgICAgIC8vIFByb2Nlc3MgdGhlIGJ5dGVzLlxuICAgICAgICB3aGlsZSAocGJlZ2luICE9PSBwZW5kKSB7XG4gICAgICAgICAgICB2YXIgY2FycnkgPSBzb3VyY2VbcGJlZ2luXTtcbiAgICAgICAgICAgIC8vIEFwcGx5IFwiYjU4ID0gYjU4ICogMjU2ICsgY2hcIi5cbiAgICAgICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgICAgIGZvciAodmFyIGl0MSA9IHNpemUgLSAxOyAoY2FycnkgIT09IDAgfHwgaSA8IGxlbmd0aCkgJiYgKGl0MSAhPT0gLTEpOyBpdDEtLSwgaSsrKSB7XG4gICAgICAgICAgICAgICAgY2FycnkgKz0gKDI1NiAqIGI1OFtpdDFdKSA+Pj4gMDtcbiAgICAgICAgICAgICAgICBiNThbaXQxXSA9IChjYXJyeSAlIEJBU0UpID4+PiAwO1xuICAgICAgICAgICAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gQkFTRSkgPj4+IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2FycnkgIT09IDApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vbi16ZXJvIGNhcnJ5Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZW5ndGggPSBpO1xuICAgICAgICAgICAgcGJlZ2luKys7XG4gICAgICAgIH1cbiAgICAgICAgLy8gU2tpcCBsZWFkaW5nIHplcm9lcyBpbiBiYXNlNTggcmVzdWx0LlxuICAgICAgICB2YXIgaXQyID0gc2l6ZSAtIGxlbmd0aDtcbiAgICAgICAgd2hpbGUgKGl0MiAhPT0gc2l6ZSAmJiBiNThbaXQyXSA9PT0gMCkge1xuICAgICAgICAgICAgaXQyKys7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVHJhbnNsYXRlIHRoZSByZXN1bHQgaW50byBhIHN0cmluZy5cbiAgICAgICAgdmFyIHN0ciA9IExFQURFUi5yZXBlYXQoemVyb2VzKTtcbiAgICAgICAgZm9yICg7IGl0MiA8IHNpemU7ICsraXQyKSB7XG4gICAgICAgICAgICBzdHIgKz0gQUxQSEFCRVQuY2hhckF0KGI1OFtpdDJdKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZyB8IHN0cmluZ1tdfSBzb3VyY2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBkZWNvZGVVbnNhZmUoc291cmNlKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc291cmNlICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgU3RyaW5nJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheSgpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBwc3ogPSAwO1xuICAgICAgICAvLyBTa2lwIGxlYWRpbmcgc3BhY2VzLlxuICAgICAgICBpZiAoc291cmNlW3Bzel0gPT09ICcgJykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIFNraXAgYW5kIGNvdW50IGxlYWRpbmcgJzEncy5cbiAgICAgICAgdmFyIHplcm9lcyA9IDA7XG4gICAgICAgIHZhciBsZW5ndGggPSAwO1xuICAgICAgICB3aGlsZSAoc291cmNlW3Bzel0gPT09IExFQURFUikge1xuICAgICAgICAgICAgemVyb2VzKys7XG4gICAgICAgICAgICBwc3orKztcbiAgICAgICAgfVxuICAgICAgICAvLyBBbGxvY2F0ZSBlbm91Z2ggc3BhY2UgaW4gYmlnLWVuZGlhbiBiYXNlMjU2IHJlcHJlc2VudGF0aW9uLlxuICAgICAgICB2YXIgc2l6ZSA9ICgoKHNvdXJjZS5sZW5ndGggLSBwc3opICogRkFDVE9SKSArIDEpID4+PiAwOyAvLyBsb2coNTgpIC8gbG9nKDI1NiksIHJvdW5kZWQgdXAuXG4gICAgICAgIHZhciBiMjU2ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG4gICAgICAgIC8vIFByb2Nlc3MgdGhlIGNoYXJhY3RlcnMuXG4gICAgICAgIHdoaWxlIChzb3VyY2VbcHN6XSkge1xuICAgICAgICAgICAgLy8gRGVjb2RlIGNoYXJhY3RlclxuICAgICAgICAgICAgdmFyIGNhcnJ5ID0gQkFTRV9NQVBbc291cmNlLmNoYXJDb2RlQXQocHN6KV07XG4gICAgICAgICAgICAvLyBJbnZhbGlkIGNoYXJhY3RlclxuICAgICAgICAgICAgaWYgKGNhcnJ5ID09PSAyNTUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgICAgICBmb3IgKHZhciBpdDMgPSBzaXplIC0gMTsgKGNhcnJ5ICE9PSAwIHx8IGkgPCBsZW5ndGgpICYmIChpdDMgIT09IC0xKTsgaXQzLS0sIGkrKykge1xuICAgICAgICAgICAgICAgIGNhcnJ5ICs9IChCQVNFICogYjI1NltpdDNdKSA+Pj4gMDtcbiAgICAgICAgICAgICAgICBiMjU2W2l0M10gPSAoY2FycnkgJSAyNTYpID4+PiAwO1xuICAgICAgICAgICAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gMjU2KSA+Pj4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm9uLXplcm8gY2FycnknKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxlbmd0aCA9IGk7XG4gICAgICAgICAgICBwc3orKztcbiAgICAgICAgfVxuICAgICAgICAvLyBTa2lwIHRyYWlsaW5nIHNwYWNlcy5cbiAgICAgICAgaWYgKHNvdXJjZVtwc3pdID09PSAnICcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBTa2lwIGxlYWRpbmcgemVyb2VzIGluIGIyNTYuXG4gICAgICAgIHZhciBpdDQgPSBzaXplIC0gbGVuZ3RoO1xuICAgICAgICB3aGlsZSAoaXQ0ICE9PSBzaXplICYmIGIyNTZbaXQ0XSA9PT0gMCkge1xuICAgICAgICAgICAgaXQ0Kys7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHZjaCA9IG5ldyBVaW50OEFycmF5KHplcm9lcyArIChzaXplIC0gaXQ0KSk7XG4gICAgICAgIHZhciBqID0gemVyb2VzO1xuICAgICAgICB3aGlsZSAoaXQ0ICE9PSBzaXplKSB7XG4gICAgICAgICAgICB2Y2hbaisrXSA9IGIyNTZbaXQ0KytdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2Y2g7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nIHwgc3RyaW5nW119IHN0cmluZ1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRlY29kZShzdHJpbmcpIHtcbiAgICAgICAgdmFyIGJ1ZmZlciA9IGRlY29kZVVuc2FmZShzdHJpbmcpO1xuICAgICAgICBpZiAoYnVmZmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gYnVmZmVyO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTm9uLSR7bmFtZX0gY2hhcmFjdGVyYCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGVuY29kZTogZW5jb2RlLFxuICAgICAgICBkZWNvZGVVbnNhZmU6IGRlY29kZVVuc2FmZSxcbiAgICAgICAgZGVjb2RlOiBkZWNvZGVcbiAgICB9O1xufVxudmFyIHNyYyA9IGJhc2U7XG52YXIgX2JycnBfX211bHRpZm9ybWF0c19zY29wZV9iYXNlWCA9IHNyYztcbmV4cG9ydCBkZWZhdWx0IF9icnJwX19tdWx0aWZvcm1hdHNfc2NvcGVfYmFzZVg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlLXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/vendor/varint.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/vendor/varint.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceMappingURL=varint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxZQUFZLEVBQUM7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmVuZG9yL3ZhcmludC5qcz9jZDBiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgZW5jb2RlXzEgPSBlbmNvZGU7XG52YXIgTVNCID0gMHg4MCwgUkVTVCA9IDB4N0YsIE1TQkFMTCA9IH5SRVNULCBJTlQgPSBNYXRoLnBvdygyLCAzMSk7XG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBudW1cbiAqIEBwYXJhbSB7bnVtYmVyW119IG91dFxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiBlbmNvZGUobnVtLCBvdXQsIG9mZnNldCkge1xuICAgIG91dCA9IG91dCB8fCBbXTtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcbiAgICB2YXIgb2xkT2Zmc2V0ID0gb2Zmc2V0O1xuICAgIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgICAgIG91dFtvZmZzZXQrK10gPSAobnVtICYgMHhGRikgfCBNU0I7XG4gICAgICAgIG51bSAvPSAxMjg7XG4gICAgfVxuICAgIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICAgICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICAgICAgbnVtID4+Pj0gNztcbiAgICB9XG4gICAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICAgIHJldHVybiBvdXQ7XG59XG52YXIgZGVjb2RlID0gcmVhZDtcbnZhciBNU0IkMSA9IDB4ODAsIFJFU1QkMSA9IDB4N0Y7XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nIHwgYW55W119IGJ1ZlxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICovXG5mdW5jdGlvbiByZWFkKGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICAgIGRvIHtcbiAgICAgICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICAgICAgfVxuICAgICAgICBiID0gYnVmW2NvdW50ZXIrK107XG4gICAgICAgIHJlcyArPSBzaGlmdCA8IDI4XG4gICAgICAgICAgICA/IChiICYgUkVTVCQxKSA8PCBzaGlmdFxuICAgICAgICAgICAgOiAoYiAmIFJFU1QkMSkgKiBNYXRoLnBvdygyLCBzaGlmdCk7XG4gICAgICAgIHNoaWZ0ICs9IDc7XG4gICAgfSB3aGlsZSAoYiA+PSBNU0IkMSk7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHJlYWQuYnl0ZXMgPSBjb3VudGVyIC0gb2Zmc2V0O1xuICAgIHJldHVybiByZXM7XG59XG52YXIgTjEgPSBNYXRoLnBvdygyLCA3KTtcbnZhciBOMiA9IE1hdGgucG93KDIsIDE0KTtcbnZhciBOMyA9IE1hdGgucG93KDIsIDIxKTtcbnZhciBONCA9IE1hdGgucG93KDIsIDI4KTtcbnZhciBONSA9IE1hdGgucG93KDIsIDM1KTtcbnZhciBONiA9IE1hdGgucG93KDIsIDQyKTtcbnZhciBONyA9IE1hdGgucG93KDIsIDQ5KTtcbnZhciBOOCA9IE1hdGgucG93KDIsIDU2KTtcbnZhciBOOSA9IE1hdGgucG93KDIsIDYzKTtcbnZhciBsZW5ndGggPSBmdW5jdGlvbiAoLyoqIEB0eXBlIHtudW1iZXJ9ICovIHZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSA8IE4xID8gMVxuICAgICAgICA6IHZhbHVlIDwgTjIgPyAyXG4gICAgICAgICAgICA6IHZhbHVlIDwgTjMgPyAzXG4gICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE40ID8gNFxuICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjUgPyA1XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjYgPyA2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE43ID8gN1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjggPyA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlIDwgTjkgPyA5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAxMCk7XG59O1xudmFyIHZhcmludCA9IHtcbiAgICBlbmNvZGU6IGVuY29kZV8xLFxuICAgIGRlY29kZTogZGVjb2RlLFxuICAgIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFyaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/alloc.node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/alloc.node.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nfunction alloc(size = 0) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(size));\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nfunction allocUnsafe(size = 0) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.allocUnsafe(size));\n}\n//# sourceMappingURL=alloc.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9hbGxvYy5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDYztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxpRUFBWSxDQUFDLCtDQUFNO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxpRUFBWSxDQUFDLCtDQUFNO0FBQzlCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9hbGxvYy5ub2RlLmpzPzBiNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSAnbm9kZTpidWZmZXInO1xuaW1wb3J0IHsgYXNVaW50OEFycmF5IH0gZnJvbSAnI3V0aWwvYXMtdWludDhhcnJheSc7XG4vKipcbiAqIFJldHVybnMgYSBgVWludDhBcnJheWAgb2YgdGhlIHJlcXVlc3RlZCBzaXplLiBSZWZlcmVuY2VkIG1lbW9yeSB3aWxsXG4gKiBiZSBpbml0aWFsaXplZCB0byAwLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYWxsb2Moc2l6ZSA9IDApIHtcbiAgICByZXR1cm4gYXNVaW50OEFycmF5KEJ1ZmZlci5hbGxvYyhzaXplKSk7XG59XG4vKipcbiAqIFdoZXJlIHBvc3NpYmxlIHJldHVybnMgYSBVaW50OEFycmF5IG9mIHRoZSByZXF1ZXN0ZWQgc2l6ZSB0aGF0IHJlZmVyZW5jZXNcbiAqIHVuaW5pdGlhbGl6ZWQgbWVtb3J5LiBPbmx5IHVzZSBpZiB5b3UgYXJlIGNlcnRhaW4geW91IHdpbGwgaW1tZWRpYXRlbHlcbiAqIG92ZXJ3cml0ZSBldmVyeSB2YWx1ZSBpbiB0aGUgcmV0dXJuZWQgYFVpbnQ4QXJyYXlgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYWxsb2NVbnNhZmUoc2l6ZSA9IDApIHtcbiAgICByZXR1cm4gYXNVaW50OEFycmF5KEJ1ZmZlci5hbGxvY1Vuc2FmZShzaXplKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbGxvYy5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/alloc.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/concat.node.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/concat.node.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Uint8Arrays\n */\nfunction concat(arrays, length) {\n    return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat(arrays, length));\n}\n//# sourceMappingURL=concat.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9jb25jYXQubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDYztBQUNuRDtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsaUVBQVksQ0FBQywrQ0FBTTtBQUM5QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvY29uY2F0Lm5vZGUuanM/YTk0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tICdub2RlOmJ1ZmZlcic7XG5pbXBvcnQgeyBhc1VpbnQ4QXJyYXkgfSBmcm9tICcjdXRpbC9hcy11aW50OGFycmF5Jztcbi8qKlxuICogUmV0dXJucyBhIG5ldyBVaW50OEFycmF5IGNyZWF0ZWQgYnkgY29uY2F0ZW5hdGluZyB0aGUgcGFzc2VkIFVpbnQ4QXJyYXlzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoYXJyYXlzLCBsZW5ndGgpIHtcbiAgICByZXR1cm4gYXNVaW50OEFycmF5KEJ1ZmZlci5jb25jYXQoYXJyYXlzLCBsZW5ndGgpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmNhdC5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/concat.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/equals.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/equals.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9lcXVhbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2VxdWFscy5qcz81NzNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSB0d28gcGFzc2VkIFVpbnQ4QXJyYXlzIGhhdmUgdGhlIHNhbWUgY29udGVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKGEuYnl0ZUxlbmd0aCAhPT0gYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXF1YWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/equals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/from-string.node.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/from-string.node.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromString: () => (/* binding */ fromString)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/bases.js\");\n/* harmony import */ var _util_as_uint8array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! #util/as-uint8array */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\");\n\n\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nfunction fromString(string, encoding = 'utf8') {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n        return (0,_util_as_uint8array__WEBPACK_IMPORTED_MODULE_2__.asUint8Array)(node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9mcm9tLXN0cmluZy5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDRztBQUNXO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQkFBaUIsc0RBQUs7QUFDdEI7QUFDQSxpREFBaUQsU0FBUztBQUMxRDtBQUNBO0FBQ0EsZUFBZSxpRUFBWSxDQUFDLCtDQUFNO0FBQ2xDO0FBQ0E7QUFDQSxrQ0FBa0MsWUFBWSxFQUFFLE9BQU8sSUFBSTtBQUMzRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvZnJvbS1zdHJpbmcubm9kZS5qcz9iZWYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gJ25vZGU6YnVmZmVyJztcbmltcG9ydCBiYXNlcywge30gZnJvbSAnLi91dGlsL2Jhc2VzLmpzJztcbmltcG9ydCB7IGFzVWludDhBcnJheSB9IGZyb20gJyN1dGlsL2FzLXVpbnQ4YXJyYXknO1xuLyoqXG4gKiBDcmVhdGUgYSBgVWludDhBcnJheWAgZnJvbSB0aGUgcGFzc2VkIHN0cmluZ1xuICpcbiAqIFN1cHBvcnRzIGB1dGY4YCwgYHV0Zi04YCwgYGhleGAsIGFuZCBhbnkgZW5jb2Rpbmcgc3VwcG9ydGVkIGJ5IHRoZSBtdWx0aWZvcm1hdHMgbW9kdWxlLlxuICpcbiAqIEFsc28gYGFzY2lpYCB3aGljaCBpcyBzaW1pbGFyIHRvIG5vZGUncyAnYmluYXJ5JyBlbmNvZGluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21TdHJpbmcoc3RyaW5nLCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICAgIGNvbnN0IGJhc2UgPSBiYXNlc1tlbmNvZGluZ107XG4gICAgaWYgKGJhc2UgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHtlbmNvZGluZ31cImApO1xuICAgIH1cbiAgICBpZiAoZW5jb2RpbmcgPT09ICd1dGY4JyB8fCBlbmNvZGluZyA9PT0gJ3V0Zi04Jykge1xuICAgICAgICByZXR1cm4gYXNVaW50OEFycmF5KEJ1ZmZlci5mcm9tKHN0cmluZywgJ3V0Zi04JykpO1xuICAgIH1cbiAgICAvLyBhZGQgbXVsdGliYXNlIHByZWZpeFxuICAgIHJldHVybiBiYXNlLmRlY29kZXIuZGVjb2RlKGAke2Jhc2UucHJlZml4fSR7c3RyaW5nfWApOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9yZXN0cmljdC10ZW1wbGF0ZS1leHByZXNzaW9uc1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnJvbS1zdHJpbmcubm9kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/from-string.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/to-string.node.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/to-string.node.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var node_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:buffer */ \"node:buffer\");\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/bases.js\");\n\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nfunction toString(array, encoding = 'utf8') {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n        return node_buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy90by1zdHJpbmcubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDRztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUJBQWlCLHNEQUFLO0FBQ3RCO0FBQ0EsaURBQWlELFNBQVM7QUFDMUQ7QUFDQTtBQUNBLGVBQWUsK0NBQU07QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3RvLXN0cmluZy5ub2RlLmpzPzI3NmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSAnbm9kZTpidWZmZXInO1xuaW1wb3J0IGJhc2VzLCB7fSBmcm9tICcuL3V0aWwvYmFzZXMuanMnO1xuLyoqXG4gKiBUdXJucyBhIGBVaW50OEFycmF5YCBpbnRvIGEgc3RyaW5nLlxuICpcbiAqIFN1cHBvcnRzIGB1dGY4YCwgYHV0Zi04YCBhbmQgYW55IGVuY29kaW5nIHN1cHBvcnRlZCBieSB0aGUgbXVsdGliYXNlIG1vZHVsZS5cbiAqXG4gKiBBbHNvIGBhc2NpaWAgd2hpY2ggaXMgc2ltaWxhciB0byBub2RlJ3MgJ2JpbmFyeScgZW5jb2RpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b1N0cmluZyhhcnJheSwgZW5jb2RpbmcgPSAndXRmOCcpIHtcbiAgICBjb25zdCBiYXNlID0gYmFzZXNbZW5jb2RpbmddO1xuICAgIGlmIChiYXNlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBlbmNvZGluZyBcIiR7ZW5jb2Rpbmd9XCJgKTtcbiAgICB9XG4gICAgaWYgKGVuY29kaW5nID09PSAndXRmOCcgfHwgZW5jb2RpbmcgPT09ICd1dGYtOCcpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFycmF5LmJ1ZmZlciwgYXJyYXkuYnl0ZU9mZnNldCwgYXJyYXkuYnl0ZUxlbmd0aCkudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgICB9XG4gICAgLy8gc3RyaXAgbXVsdGliYXNlIHByZWZpeFxuICAgIHJldHVybiBiYXNlLmVuY29kZXIuZW5jb2RlKGFycmF5KS5zdWJzdHJpbmcoMSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10by1zdHJpbmcubm9kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/to-string.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asUint8Array: () => (/* binding */ asUint8Array)\n/* harmony export */ });\n/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nfunction asUint8Array(buf) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n}\n//# sourceMappingURL=as-uint8array.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy91dGlsL2FzLXVpbnQ4YXJyYXkubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci10by11cmkvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL3V0aWwvYXMtdWludDhhcnJheS5ub2RlLmpzP2UwOTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUbyBndWFyYW50ZWUgVWludDhBcnJheSBzZW1hbnRpY3MsIGNvbnZlcnQgbm9kZWpzIEJ1ZmZlcnNcbiAqIGludG8gdmFuaWxsYSBVaW50OEFycmF5c1xuICovXG5leHBvcnQgZnVuY3Rpb24gYXNVaW50OEFycmF5KGJ1Zikge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWYuYnVmZmVyLCBidWYuYnl0ZU9mZnNldCwgYnVmLmJ5dGVMZW5ndGgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXMtdWludDhhcnJheS5ub2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/bases.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/bases.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/dist/src/basics.js\");\n/* harmony import */ var _alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #alloc */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/alloc.node.js\");\n\n\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = (0,_alloc__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);\n//# sourceMappingURL=bases.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHItdG8tdXJpL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy91dGlsL2Jhc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNQO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLGdCQUFnQixtREFBVztBQUMzQixvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFLO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsT0FBTyxzREFBSztBQUNaO0FBQ0EsaUVBQWUsS0FBSyxFQUFDO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvdXRpbC9iYXNlcy5qcz85YjQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VzIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2ljcyc7XG5pbXBvcnQgeyBhbGxvY1Vuc2FmZSB9IGZyb20gJyNhbGxvYyc7XG5mdW5jdGlvbiBjcmVhdGVDb2RlYyhuYW1lLCBwcmVmaXgsIGVuY29kZSwgZGVjb2RlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgcHJlZml4LFxuICAgICAgICBlbmNvZGVyOiB7XG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgcHJlZml4LFxuICAgICAgICAgICAgZW5jb2RlXG4gICAgICAgIH0sXG4gICAgICAgIGRlY29kZXI6IHtcbiAgICAgICAgICAgIGRlY29kZVxuICAgICAgICB9XG4gICAgfTtcbn1cbmNvbnN0IHN0cmluZyA9IGNyZWF0ZUNvZGVjKCd1dGY4JywgJ3UnLCAoYnVmKSA9PiB7XG4gICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigndXRmOCcpO1xuICAgIHJldHVybiAndScgKyBkZWNvZGVyLmRlY29kZShidWYpO1xufSwgKHN0cikgPT4ge1xuICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICByZXR1cm4gZW5jb2Rlci5lbmNvZGUoc3RyLnN1YnN0cmluZygxKSk7XG59KTtcbmNvbnN0IGFzY2lpID0gY3JlYXRlQ29kZWMoJ2FzY2lpJywgJ2EnLCAoYnVmKSA9PiB7XG4gICAgbGV0IHN0cmluZyA9ICdhJztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1Zi5sZW5ndGg7IGkrKykge1xuICAgICAgICBzdHJpbmcgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShidWZbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gc3RyaW5nO1xufSwgKHN0cikgPT4ge1xuICAgIHN0ciA9IHN0ci5zdWJzdHJpbmcoMSk7XG4gICAgY29uc3QgYnVmID0gYWxsb2NVbnNhZmUoc3RyLmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYnVmW2ldID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgfVxuICAgIHJldHVybiBidWY7XG59KTtcbmNvbnN0IEJBU0VTID0ge1xuICAgIHV0Zjg6IHN0cmluZyxcbiAgICAndXRmLTgnOiBzdHJpbmcsXG4gICAgaGV4OiBiYXNlcy5iYXNlMTYsXG4gICAgbGF0aW4xOiBhc2NpaSxcbiAgICBhc2NpaSxcbiAgICBiaW5hcnk6IGFzY2lpLFxuICAgIC4uLmJhc2VzXG59O1xuZXhwb3J0IGRlZmF1bHQgQkFTRVM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/dist/src/util/bases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr/dist/src/codec.js":
/*!****************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr/dist/src/codec.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParseError: () => (/* binding */ ParseError),\n/* harmony export */   bytesToString: () => (/* binding */ bytesToString),\n/* harmony export */   bytesToTuples: () => (/* binding */ bytesToTuples),\n/* harmony export */   cleanPath: () => (/* binding */ cleanPath),\n/* harmony export */   fromBytes: () => (/* binding */ fromBytes),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isValidBytes: () => (/* binding */ isValidBytes),\n/* harmony export */   protoFromTuple: () => (/* binding */ protoFromTuple),\n/* harmony export */   sizeForAddr: () => (/* binding */ sizeForAddr),\n/* harmony export */   stringToBytes: () => (/* binding */ stringToBytes),\n/* harmony export */   stringToStringTuples: () => (/* binding */ stringToStringTuples),\n/* harmony export */   stringTuplesToString: () => (/* binding */ stringTuplesToString),\n/* harmony export */   stringTuplesToTuples: () => (/* binding */ stringTuplesToTuples),\n/* harmony export */   tuplesToBytes: () => (/* binding */ tuplesToBytes),\n/* harmony export */   tuplesToStringTuples: () => (/* binding */ tuplesToStringTuples),\n/* harmony export */   validateBytes: () => (/* binding */ validateBytes)\n/* harmony export */ });\n/* harmony import */ var _convert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./convert.js */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/convert.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocols-table.js */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/./node_modules/uint8arrays/dist/src/concat.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/to-string.js\");\n\n\n\n\n\n/**\n * string -> [[str name, str addr]... ]\n */\nfunction stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nfunction stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nfunction stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, (0,_convert_js__WEBPACK_IMPORTED_MODULE_0__.convertToBytes)(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nfunction tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, (0,_convert_js__WEBPACK_IMPORTED_MODULE_0__.convertToString)(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nfunction tuplesToBytes(tuples) {\n    return fromBytes((0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_3__.concat)(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint__WEBPACK_IMPORTED_MODULE_2__.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_3__.concat)([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nfunction sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint__WEBPACK_IMPORTED_MODULE_2__.decode(addr);\n        return size + (varint__WEBPACK_IMPORTED_MODULE_2__.decode.bytes ?? 0);\n    }\n}\nfunction bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint__WEBPACK_IMPORTED_MODULE_2__.decode(buf, i);\n        const n = varint__WEBPACK_IMPORTED_MODULE_2__.decode.bytes ?? 0;\n        const p = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_4__.toString)(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nfunction bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nfunction stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nfunction fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nfunction fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nfunction validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nfunction isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nfunction cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nfunction ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nfunction protoFromTuple(tup) {\n    const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr/dist/src/codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr/dist/src/convert.js":
/*!******************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr/dist/src/convert.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convert: () => (/* binding */ convert),\n/* harmony export */   convertToBytes: () => (/* binding */ convertToBytes),\n/* harmony export */   convertToString: () => (/* binding */ convertToString)\n/* harmony export */ });\n/* harmony import */ var _ip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ip.js */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/ip.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocols-table.js */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/src/cid.js\");\n/* harmony import */ var multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/bases/base32 */ \"(ssr)/./node_modules/multiformats/src/bases/base32.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/multiformats/src/bases/base58.js\");\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/multiformats/src/basics.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(ssr)/./node_modules/multiformats/src/hashes/digest.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/to-string.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/from-string.js\");\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/./node_modules/uint8arrays/dist/src/concat.js\");\n/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\n\n\n\n\n\n\n\n\n\n\n\nfunction convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nfunction convertToString(proto, buf) {\n    const protocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(buf, 'base16'); // no clue. convert to hex\n    }\n}\nfunction convertToBytes(proto, str) {\n    const protocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_9__.fromString)(str, 'base16'); // no clue. convert from hex\n    }\n}\nconst decoders = Object.values(multiformats_basics__WEBPACK_IMPORTED_MODULE_5__.bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!_ip_js__WEBPACK_IMPORTED_MODULE_0__.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return _ip_js__WEBPACK_IMPORTED_MODULE_0__.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = _ip_js__WEBPACK_IMPORTED_MODULE_0__.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!_ip_js__WEBPACK_IMPORTED_MODULE_0__.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_9__.fromString)(str);\n    const size = Uint8Array.from(varint__WEBPACK_IMPORTED_MODULE_7__.encode(buf.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint__WEBPACK_IMPORTED_MODULE_7__.decode(buf);\n    buf = buf.slice(varint__WEBPACK_IMPORTED_MODULE_7__.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_6__.decode(multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_4__.base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = multiformats_cid__WEBPACK_IMPORTED_MODULE_2__.CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint__WEBPACK_IMPORTED_MODULE_7__.encode(mh.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint__WEBPACK_IMPORTED_MODULE_7__.encode(mb.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint__WEBPACK_IMPORTED_MODULE_7__.decode(buf);\n    const hash = buf.slice(varint__WEBPACK_IMPORTED_MODULE_7__.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint__WEBPACK_IMPORTED_MODULE_7__.decode(buf);\n    const address = buf.slice(varint__WEBPACK_IMPORTED_MODULE_7__.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__.base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__.base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr/dist/src/convert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr/dist/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr/dist/src/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeAddress: () => (/* binding */ fromNodeAddress),\n/* harmony export */   isMultiaddr: () => (/* binding */ isMultiaddr),\n/* harmony export */   isName: () => (/* binding */ isName),\n/* harmony export */   multiaddr: () => (/* binding */ multiaddr),\n/* harmony export */   protocols: () => (/* reexport safe */ _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol),\n/* harmony export */   resolvers: () => (/* binding */ resolvers)\n/* harmony export */ });\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codec.js */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/codec.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocols-table.js */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/src/cid.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/multiformats/src/bases/base58.js\");\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! err-code */ \"(ssr)/./node_modules/err-code/index.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/to-string.js\");\n/* harmony import */ var uint8arrays_equals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8arrays/equals */ \"(ssr)/./node_modules/uint8arrays/dist/src/equals.js\");\n/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\n\n\n\n\n\n\n\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dns').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dns4').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dns6').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nconst resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nfunction fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nfunction isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nfunction isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = _codec_js__WEBPACK_IMPORTED_MODULE_0__.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = _codec_js__WEBPACK_IMPORTED_MODULE_0__.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = _codec_js__WEBPACK_IMPORTED_MODULE_0__.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, _codec_js__WEBPACK_IMPORTED_MODULE_0__.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('tcp');\n        const udp = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('udp');\n        const ip4 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('ip4');\n        const ip6 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('ip6');\n        const dns6 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dns6');\n        const ip6zone = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint__WEBPACK_IMPORTED_MODULE_2__.decode(buf, i);\n            const n = varint__WEBPACK_IMPORTED_MODULE_2__.decode.bytes ?? 0;\n            const p = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code);\n            const size = _codec_js__WEBPACK_IMPORTED_MODULE_0__.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, _codec_js__WEBPACK_IMPORTED_MODULE_0__.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, _codec_js__WEBPACK_IMPORTED_MODULE_0__.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(_codec_js__WEBPACK_IMPORTED_MODULE_0__.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_6__.toString)(multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_4__.base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_6__.toString)(multiformats_cid__WEBPACK_IMPORTED_MODULE_3__.CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return (0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_7__.equals)(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw err_code__WEBPACK_IMPORTED_MODULE_5__(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${_codec_js__WEBPACK_IMPORTED_MODULE_0__.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nfunction multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr/dist/src/ip.js":
/*!*************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr/dist/src/ip.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isIP: () => (/* reexport safe */ _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIP),\n/* harmony export */   isV4: () => (/* binding */ isV4),\n/* harmony export */   isV6: () => (/* binding */ isV6),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chainsafe/is-ip */ \"(ssr)/./node_modules/@chainsafe/is-ip/lib/is-ip.node.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/to-string.js\");\n\n\n\nconst isV4 = _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIPv4;\nconst isV6 = _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nconst toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nconst toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHIvZGlzdC9zcmMvaXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrRDtBQUNxQjtBQUMvQjtBQUNqQyxhQUFhLG9EQUFNO0FBQ25CLGFBQWEsb0RBQU07QUFDMUI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLCtEQUFrQjtBQUNoRDtBQUNBO0FBQ0Esc0NBQXNDLCtEQUFrQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJDQUEyQztBQUNuRTtBQUNBO0FBQ0EsMENBQTBDLE9BQU87QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixZQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLElBQUk7QUFDNUI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHIvZGlzdC9zcmMvaXAuanM/Y2M5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0lQdjQsIGlzSVB2NiB9IGZyb20gJ0BjaGFpbnNhZmUvaXMtaXAnO1xuaW1wb3J0IHsgdG9TdHJpbmcgYXMgdWludDhBcnJheVRvU3RyaW5nIH0gZnJvbSAndWludDhhcnJheXMvdG8tc3RyaW5nJztcbmV4cG9ydCB7IGlzSVAgfSBmcm9tICdAY2hhaW5zYWZlL2lzLWlwJztcbmV4cG9ydCBjb25zdCBpc1Y0ID0gaXNJUHY0O1xuZXhwb3J0IGNvbnN0IGlzVjYgPSBpc0lQdjY7XG4vLyBDb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vaW5kdXRueS9ub2RlLWlwL2Jsb2IvbWFzdGVyL2xpYi9pcC5qcyNMN1xuLy8gYnV0IHdpdGggYnVmL29mZnNldCBhcmdzIHJlbW92ZWQgYmVjYXVzZSB3ZSBkb24ndCB1c2UgdGhlbVxuZXhwb3J0IGNvbnN0IHRvQnl0ZXMgPSBmdW5jdGlvbiAoaXApIHtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBpcCA9IGlwLnRvU3RyaW5nKCkudHJpbSgpO1xuICAgIGlmIChpc1Y0KGlwKSkge1xuICAgICAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KG9mZnNldCArIDQpO1xuICAgICAgICBpcC5zcGxpdCgvXFwuL2cpLmZvckVhY2goKGJ5dGUpID0+IHtcbiAgICAgICAgICAgIGJ5dGVzW29mZnNldCsrXSA9IHBhcnNlSW50KGJ5dGUsIDEwKSAmIDB4ZmY7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgfVxuICAgIGlmIChpc1Y2KGlwKSkge1xuICAgICAgICBjb25zdCBzZWN0aW9ucyA9IGlwLnNwbGl0KCc6JywgOCk7XG4gICAgICAgIGxldCBpO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc2VjdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGlzdjQgPSBpc1Y0KHNlY3Rpb25zW2ldKTtcbiAgICAgICAgICAgIGxldCB2NEJ1ZmZlcjtcbiAgICAgICAgICAgIGlmIChpc3Y0KSB7XG4gICAgICAgICAgICAgICAgdjRCdWZmZXIgPSB0b0J5dGVzKHNlY3Rpb25zW2ldKTtcbiAgICAgICAgICAgICAgICBzZWN0aW9uc1tpXSA9IHVpbnQ4QXJyYXlUb1N0cmluZyh2NEJ1ZmZlci5zbGljZSgwLCAyKSwgJ2Jhc2UxNicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHY0QnVmZmVyICE9IG51bGwgJiYgKytpIDwgOCkge1xuICAgICAgICAgICAgICAgIHNlY3Rpb25zLnNwbGljZShpLCAwLCB1aW50OEFycmF5VG9TdHJpbmcodjRCdWZmZXIuc2xpY2UoMiwgNCksICdiYXNlMTYnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlY3Rpb25zWzBdID09PSAnJykge1xuICAgICAgICAgICAgd2hpbGUgKHNlY3Rpb25zLmxlbmd0aCA8IDgpXG4gICAgICAgICAgICAgICAgc2VjdGlvbnMudW5zaGlmdCgnMCcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlY3Rpb25zW3NlY3Rpb25zLmxlbmd0aCAtIDFdID09PSAnJykge1xuICAgICAgICAgICAgd2hpbGUgKHNlY3Rpb25zLmxlbmd0aCA8IDgpXG4gICAgICAgICAgICAgICAgc2VjdGlvbnMucHVzaCgnMCcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlY3Rpb25zLmxlbmd0aCA8IDgpIHtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBzZWN0aW9ucy5sZW5ndGggJiYgc2VjdGlvbnNbaV0gIT09ICcnOyBpKyspXG4gICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgY29uc3QgYXJndiA9IFtpLCAxXTtcbiAgICAgICAgICAgIGZvciAoaSA9IDkgLSBzZWN0aW9ucy5sZW5ndGg7IGkgPiAwOyBpLS0pIHtcbiAgICAgICAgICAgICAgICBhcmd2LnB1c2goJzAnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlY3Rpb25zLnNwbGljZS5hcHBseShzZWN0aW9ucywgYXJndik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShvZmZzZXQgKyAxNik7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBzZWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3Qgd29yZCA9IHBhcnNlSW50KHNlY3Rpb25zW2ldLCAxNik7XG4gICAgICAgICAgICBieXRlc1tvZmZzZXQrK10gPSAod29yZCA+PiA4KSAmIDB4ZmY7XG4gICAgICAgICAgICBieXRlc1tvZmZzZXQrK10gPSB3b3JkICYgMHhmZjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBpcCBhZGRyZXNzJyk7XG59O1xuLy8gQ29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvbm9kZS1pcC9ibG9iL21hc3Rlci9saWIvaXAuanMjTDYzXG5leHBvcnQgY29uc3QgdG9TdHJpbmcgPSBmdW5jdGlvbiAoYnVmLCBvZmZzZXQgPSAwLCBsZW5ndGgpIHtcbiAgICBvZmZzZXQgPSB+fm9mZnNldDtcbiAgICBsZW5ndGggPSBsZW5ndGggPz8gKGJ1Zi5sZW5ndGggLSBvZmZzZXQpO1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmLmJ1ZmZlcik7XG4gICAgaWYgKGxlbmd0aCA9PT0gNCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgLy8gSVB2NFxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChidWZbb2Zmc2V0ICsgaV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQuam9pbignLicpO1xuICAgIH1cbiAgICBpZiAobGVuZ3RoID09PSAxNikge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgLy8gSVB2NlxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSArPSAyKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh2aWV3LmdldFVpbnQxNihvZmZzZXQgKyBpKS50b1N0cmluZygxNikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQuam9pbignOicpXG4gICAgICAgICAgICAucmVwbGFjZSgvKF58OikwKDowKSo6MCg6fCQpLywgJyQxOjokMycpXG4gICAgICAgICAgICAucmVwbGFjZSgvOnszLDR9LywgJzo6Jyk7XG4gICAgfVxuICAgIHJldHVybiAnJztcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr/dist/src/ip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codes: () => (/* binding */ codes),\n/* harmony export */   createProtocol: () => (/* binding */ createProtocol),\n/* harmony export */   getProtocol: () => (/* binding */ getProtocol),\n/* harmony export */   names: () => (/* binding */ names),\n/* harmony export */   table: () => (/* binding */ table)\n/* harmony export */ });\nconst V = -1;\nconst names = {};\nconst codes = {};\nconst table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc'],\n    [281, 0, 'webrtc-w3c'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nfunction createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nfunction getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHIvZGlzdC9zcmMvcHJvdG9jb2xzLXRhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDTztBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ007QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVc7QUFDdkI7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBLGlEQUFpRCxhQUFhO0FBQzlEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQG11bHRpZm9ybWF0cy9tdWx0aWFkZHIvZGlzdC9zcmMvcHJvdG9jb2xzLXRhYmxlLmpzPzMzYTEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgViA9IC0xO1xuZXhwb3J0IGNvbnN0IG5hbWVzID0ge307XG5leHBvcnQgY29uc3QgY29kZXMgPSB7fTtcbmV4cG9ydCBjb25zdCB0YWJsZSA9IFtcbiAgICBbNCwgMzIsICdpcDQnXSxcbiAgICBbNiwgMTYsICd0Y3AnXSxcbiAgICBbMzMsIDE2LCAnZGNjcCddLFxuICAgIFs0MSwgMTI4LCAnaXA2J10sXG4gICAgWzQyLCBWLCAnaXA2em9uZSddLFxuICAgIFs0MywgOCwgJ2lwY2lkciddLFxuICAgIFs1MywgViwgJ2RucycsIHRydWVdLFxuICAgIFs1NCwgViwgJ2RuczQnLCB0cnVlXSxcbiAgICBbNTUsIFYsICdkbnM2JywgdHJ1ZV0sXG4gICAgWzU2LCBWLCAnZG5zYWRkcicsIHRydWVdLFxuICAgIFsxMzIsIDE2LCAnc2N0cCddLFxuICAgIFsyNzMsIDE2LCAndWRwJ10sXG4gICAgWzI3NSwgMCwgJ3AycC13ZWJydGMtc3RhciddLFxuICAgIFsyNzYsIDAsICdwMnAtd2VicnRjLWRpcmVjdCddLFxuICAgIFsyNzcsIDAsICdwMnAtc3RhcmR1c3QnXSxcbiAgICBbMjgwLCAwLCAnd2VicnRjJ10sXG4gICAgWzI4MSwgMCwgJ3dlYnJ0Yy13M2MnXSxcbiAgICBbMjkwLCAwLCAncDJwLWNpcmN1aXQnXSxcbiAgICBbMzAxLCAwLCAndWR0J10sXG4gICAgWzMwMiwgMCwgJ3V0cCddLFxuICAgIFs0MDAsIFYsICd1bml4JywgZmFsc2UsIHRydWVdLFxuICAgIC8vIGBpcGZzYCBpcyBhZGRlZCBiZWZvcmUgYHAycGAgZm9yIGxlZ2FjeSBzdXBwb3J0LlxuICAgIC8vIEFsbCB0ZXh0IHJlcHJlc2VudGF0aW9ucyB3aWxsIGRlZmF1bHQgdG8gYHAycGAsIGJ1dCBgaXBmc2Agd2lsbFxuICAgIC8vIHN0aWxsIGJlIHN1cHBvcnRlZFxuICAgIFs0MjEsIFYsICdpcGZzJ10sXG4gICAgLy8gYHAycGAgaXMgdGhlIHByZWZlcnJlZCBuYW1lIGZvciA0MjEsIGFuZCBpcyBub3cgdGhlIGRlZmF1bHRcbiAgICBbNDIxLCBWLCAncDJwJ10sXG4gICAgWzQ0MywgMCwgJ2h0dHBzJ10sXG4gICAgWzQ0NCwgOTYsICdvbmlvbiddLFxuICAgIFs0NDUsIDI5NiwgJ29uaW9uMyddLFxuICAgIFs0NDYsIFYsICdnYXJsaWM2NCddLFxuICAgIFs0NDgsIDAsICd0bHMnXSxcbiAgICBbNDQ5LCBWLCAnc25pJ10sXG4gICAgWzQ2MCwgMCwgJ3F1aWMnXSxcbiAgICBbNDYxLCAwLCAncXVpYy12MSddLFxuICAgIFs0NjUsIDAsICd3ZWJ0cmFuc3BvcnQnXSxcbiAgICBbNDY2LCBWLCAnY2VydGhhc2gnXSxcbiAgICBbNDc3LCAwLCAnd3MnXSxcbiAgICBbNDc4LCAwLCAnd3NzJ10sXG4gICAgWzQ3OSwgMCwgJ3AycC13ZWJzb2NrZXQtc3RhciddLFxuICAgIFs0ODAsIDAsICdodHRwJ10sXG4gICAgWzc3NywgViwgJ21lbW9yeSddXG5dO1xuLy8gcG9wdWxhdGUgdGFibGVzXG50YWJsZS5mb3JFYWNoKHJvdyA9PiB7XG4gICAgY29uc3QgcHJvdG8gPSBjcmVhdGVQcm90b2NvbCguLi5yb3cpO1xuICAgIGNvZGVzW3Byb3RvLmNvZGVdID0gcHJvdG87XG4gICAgbmFtZXNbcHJvdG8ubmFtZV0gPSBwcm90bztcbn0pO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByb3RvY29sKGNvZGUsIHNpemUsIG5hbWUsIHJlc29sdmFibGUsIHBhdGgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBjb2RlLFxuICAgICAgICBzaXplLFxuICAgICAgICBuYW1lLFxuICAgICAgICByZXNvbHZhYmxlOiBCb29sZWFuKHJlc29sdmFibGUpLFxuICAgICAgICBwYXRoOiBCb29sZWFuKHBhdGgpXG4gICAgfTtcbn1cbi8qKlxuICogRm9yIHRoZSBwYXNzZWQgcHJvdG8gc3RyaW5nIG9yIG51bWJlciwgcmV0dXJuIGEge0BsaW5rIFByb3RvY29sfVxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBganNcbiAqIGltcG9ydCB7IHByb3RvY29sIH0gZnJvbSAnQG11bHRpZm9ybWF0cy9tdWx0aWFkZHInXG4gKlxuICogY29uc29sZS5pbmZvKHByb3RvY29sKDQpKVxuICogLy8geyBjb2RlOiA0LCBzaXplOiAzMiwgbmFtZTogJ2lwNCcsIHJlc29sdmFibGU6IGZhbHNlLCBwYXRoOiBmYWxzZSB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3RvY29sKHByb3RvKSB7XG4gICAgaWYgKHR5cGVvZiBwcm90byA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgaWYgKGNvZGVzW3Byb3RvXSAhPSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gY29kZXNbcHJvdG9dO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgbm8gcHJvdG9jb2wgd2l0aCBjb2RlOiAke3Byb3RvfWApO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgcHJvdG8gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmIChuYW1lc1twcm90b10gIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG5hbWVzW3Byb3RvXTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYG5vIHByb3RvY29sIHdpdGggbmFtZTogJHtwcm90b31gKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBpbnZhbGlkIHByb3RvY29sIGlkIHR5cGU6ICR7dHlwZW9mIHByb3RvfWApO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvdG9jb2xzLXRhYmxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\n");

/***/ })

};
;