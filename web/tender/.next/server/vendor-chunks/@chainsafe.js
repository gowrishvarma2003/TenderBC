"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@chainsafe";
exports.ids = ["vendor-chunks/@chainsafe"];
exports.modules = {

/***/ "(ssr)/./node_modules/@chainsafe/is-ip/lib/is-ip.node.js":
/*!*********************************************************!*\
  !*** ./node_modules/@chainsafe/is-ip/lib/is-ip.node.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ipVersion: () => (/* reexport safe */ node_net__WEBPACK_IMPORTED_MODULE_0__.isIP),\n/* harmony export */   isIP: () => (/* binding */ isIP),\n/* harmony export */   isIPv4: () => (/* reexport safe */ node_net__WEBPACK_IMPORTED_MODULE_0__.isIPv4),\n/* harmony export */   isIPv6: () => (/* reexport safe */ node_net__WEBPACK_IMPORTED_MODULE_0__.isIPv6)\n/* harmony export */ });\n/* harmony import */ var node_net__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:net */ \"node:net\");\n\n\n/** Check if `input` is IPv4 or IPv6. */\nfunction isIP(input) {\n    return Boolean((0,node_net__WEBPACK_IMPORTED_MODULE_0__.isIP)(input));\n}\n//# sourceMappingURL=is-ip.node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9pcy1pcC9saWIvaXMtaXAubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RDtBQUN4QjtBQUNyQztBQUNPO0FBQ1AsbUJBQW1CLDhDQUFTO0FBQzVCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9pcy1pcC9saWIvaXMtaXAubm9kZS5qcz80YzMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzSVB2NCwgaXNJUHY2LCBpc0lQIGFzIGlwVmVyc2lvbiB9IGZyb20gXCJub2RlOm5ldFwiO1xuZXhwb3J0IHsgaXNJUHY0LCBpc0lQdjYsIGlwVmVyc2lvbiB9O1xuLyoqIENoZWNrIGlmIGBpbnB1dGAgaXMgSVB2NCBvciBJUHY2LiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzSVAoaW5wdXQpIHtcbiAgICByZXR1cm4gQm9vbGVhbihpcFZlcnNpb24oaW5wdXQpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWlwLm5vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@chainsafe/is-ip/lib/is-ip.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@chainsafe/is-ip/lib/parse.js":
/*!****************************************************!*\
  !*** ./node_modules/@chainsafe/is-ip/lib/parse.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseIP: () => (/* binding */ parseIP),\n/* harmony export */   parseIPv4: () => (/* binding */ parseIPv4),\n/* harmony export */   parseIPv6: () => (/* binding */ parseIPv6)\n/* harmony export */ });\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser.js */ \"(ssr)/./node_modules/@chainsafe/is-ip/lib/parser.js\");\n\n// See https://stackoverflow.com/questions/166132/maximum-length-of-the-textual-representation-of-an-ipv6-address\nconst MAX_IPV6_LENGTH = 45;\nconst MAX_IPV4_LENGTH = 15;\nconst parser = new _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser();\n/** Parse `input` into IPv4 bytes. */\nfunction parseIPv4(input) {\n    if (input.length > MAX_IPV4_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv4Addr());\n}\n/** Parse `input` into IPv6 bytes. */\nfunction parseIPv6(input) {\n    // strip zone index if it is present\n    if (input.includes(\"%\")) {\n        input = input.split(\"%\")[0];\n    }\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv6Addr());\n}\n/** Parse `input` into IPv4 or IPv6 bytes. */\nfunction parseIP(input) {\n    // strip zone index if it is present\n    if (input.includes(\"%\")) {\n        input = input.split(\"%\")[0];\n    }\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPAddr());\n}\n//# sourceMappingURL=parse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9pcy1pcC9saWIvcGFyc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsOENBQU07QUFDekI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BjaGFpbnNhZmUvaXMtaXAvbGliL3BhcnNlLmpzPzJlMzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFyc2VyIH0gZnJvbSBcIi4vcGFyc2VyLmpzXCI7XG4vLyBTZWUgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTY2MTMyL21heGltdW0tbGVuZ3RoLW9mLXRoZS10ZXh0dWFsLXJlcHJlc2VudGF0aW9uLW9mLWFuLWlwdjYtYWRkcmVzc1xuY29uc3QgTUFYX0lQVjZfTEVOR1RIID0gNDU7XG5jb25zdCBNQVhfSVBWNF9MRU5HVEggPSAxNTtcbmNvbnN0IHBhcnNlciA9IG5ldyBQYXJzZXIoKTtcbi8qKiBQYXJzZSBgaW5wdXRgIGludG8gSVB2NCBieXRlcy4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUlQdjQoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQubGVuZ3RoID4gTUFYX0lQVjRfTEVOR1RIKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBwYXJzZXIubmV3KGlucHV0KS5wYXJzZVdpdGgoKCkgPT4gcGFyc2VyLnJlYWRJUHY0QWRkcigpKTtcbn1cbi8qKiBQYXJzZSBgaW5wdXRgIGludG8gSVB2NiBieXRlcy4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUlQdjYoaW5wdXQpIHtcbiAgICAvLyBzdHJpcCB6b25lIGluZGV4IGlmIGl0IGlzIHByZXNlbnRcbiAgICBpZiAoaW5wdXQuaW5jbHVkZXMoXCIlXCIpKSB7XG4gICAgICAgIGlucHV0ID0gaW5wdXQuc3BsaXQoXCIlXCIpWzBdO1xuICAgIH1cbiAgICBpZiAoaW5wdXQubGVuZ3RoID4gTUFYX0lQVjZfTEVOR1RIKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBwYXJzZXIubmV3KGlucHV0KS5wYXJzZVdpdGgoKCkgPT4gcGFyc2VyLnJlYWRJUHY2QWRkcigpKTtcbn1cbi8qKiBQYXJzZSBgaW5wdXRgIGludG8gSVB2NCBvciBJUHY2IGJ5dGVzLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSVAoaW5wdXQpIHtcbiAgICAvLyBzdHJpcCB6b25lIGluZGV4IGlmIGl0IGlzIHByZXNlbnRcbiAgICBpZiAoaW5wdXQuaW5jbHVkZXMoXCIlXCIpKSB7XG4gICAgICAgIGlucHV0ID0gaW5wdXQuc3BsaXQoXCIlXCIpWzBdO1xuICAgIH1cbiAgICBpZiAoaW5wdXQubGVuZ3RoID4gTUFYX0lQVjZfTEVOR1RIKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBwYXJzZXIubmV3KGlucHV0KS5wYXJzZVdpdGgoKCkgPT4gcGFyc2VyLnJlYWRJUEFkZHIoKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@chainsafe/is-ip/lib/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@chainsafe/is-ip/lib/parser.js":
/*!*****************************************************!*\
  !*** ./node_modules/@chainsafe/is-ip/lib/parser.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parser: () => (/* binding */ Parser)\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-unsafe-return */\nclass Parser {\n    index = 0;\n    input = \"\";\n    new(input) {\n        this.index = 0;\n        this.input = input;\n        return this;\n    }\n    /** Run a parser, and restore the pre-parse state if it fails. */\n    readAtomically(fn) {\n        const index = this.index;\n        const result = fn();\n        if (result === undefined) {\n            this.index = index;\n        }\n        return result;\n    }\n    /** Run a parser, but fail if the entire input wasn't consumed. Doesn't run atomically. */\n    parseWith(fn) {\n        const result = fn();\n        if (this.index !== this.input.length) {\n            return undefined;\n        }\n        return result;\n    }\n    /** Peek the next character from the input */\n    peekChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index];\n    }\n    /** Read the next character from the input */\n    readChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index++];\n    }\n    /** Read the next character from the input if it matches the target. */\n    readGivenChar(target) {\n        return this.readAtomically(() => {\n            const char = this.readChar();\n            if (char !== target) {\n                return undefined;\n            }\n            return char;\n        });\n    }\n    /**\n     * Helper for reading separators in an indexed loop. Reads the separator\n     * character iff index > 0, then runs the parser. When used in a loop,\n     * the separator character will only be read on index > 0 (see\n     * readIPv4Addr for an example)\n     */\n    readSeparator(sep, index, inner) {\n        return this.readAtomically(() => {\n            if (index > 0) {\n                if (this.readGivenChar(sep) === undefined) {\n                    return undefined;\n                }\n            }\n            return inner();\n        });\n    }\n    /**\n     * Read a number off the front of the input in the given radix, stopping\n     * at the first non-digit character or eof. Fails if the number has more\n     * digits than max_digits or if there is no number.\n     */\n    readNumber(radix, maxDigits, allowZeroPrefix, maxBytes) {\n        return this.readAtomically(() => {\n            let result = 0;\n            let digitCount = 0;\n            const leadingChar = this.peekChar();\n            if (leadingChar === undefined) {\n                return undefined;\n            }\n            const hasLeadingZero = leadingChar === \"0\";\n            const maxValue = 2 ** (8 * maxBytes) - 1;\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const digit = this.readAtomically(() => {\n                    const char = this.readChar();\n                    if (char === undefined) {\n                        return undefined;\n                    }\n                    const num = Number.parseInt(char, radix);\n                    if (Number.isNaN(num)) {\n                        return undefined;\n                    }\n                    return num;\n                });\n                if (digit === undefined) {\n                    break;\n                }\n                result *= radix;\n                result += digit;\n                if (result > maxValue) {\n                    return undefined;\n                }\n                digitCount += 1;\n                if (maxDigits !== undefined) {\n                    if (digitCount > maxDigits) {\n                        return undefined;\n                    }\n                }\n            }\n            if (digitCount === 0) {\n                return undefined;\n            }\n            else if (!allowZeroPrefix && hasLeadingZero && digitCount > 1) {\n                return undefined;\n            }\n            else {\n                return result;\n            }\n        });\n    }\n    /** Read an IPv4 address. */\n    readIPv4Addr() {\n        return this.readAtomically(() => {\n            const out = new Uint8Array(4);\n            for (let i = 0; i < out.length; i++) {\n                const ix = this.readSeparator(\".\", i, () => this.readNumber(10, 3, false, 1));\n                if (ix === undefined) {\n                    return undefined;\n                }\n                out[i] = ix;\n            }\n            return out;\n        });\n    }\n    /** Read an IPv6 Address. */\n    readIPv6Addr() {\n        /**\n         * Read a chunk of an IPv6 address into `groups`. Returns the number\n         * of groups read, along with a bool indicating if an embedded\n         * trailing IPv4 address was read. Specifically, read a series of\n         * colon-separated IPv6 groups (0x0000 - 0xFFFF), with an optional\n         * trailing embedded IPv4 address.\n         */\n        const readGroups = (groups) => {\n            for (let i = 0; i < groups.length / 2; i++) {\n                const ix = i * 2;\n                // Try to read a trailing embedded IPv4 address. There must be at least 4 groups left.\n                if (i < groups.length - 3) {\n                    const ipv4 = this.readSeparator(\":\", i, () => this.readIPv4Addr());\n                    if (ipv4 !== undefined) {\n                        groups[ix] = ipv4[0];\n                        groups[ix + 1] = ipv4[1];\n                        groups[ix + 2] = ipv4[2];\n                        groups[ix + 3] = ipv4[3];\n                        return [ix + 4, true];\n                    }\n                }\n                const group = this.readSeparator(\":\", i, () => this.readNumber(16, 4, true, 2));\n                if (group === undefined) {\n                    return [ix, false];\n                }\n                groups[ix] = group >> 8;\n                groups[ix + 1] = group & 255;\n            }\n            return [groups.length, false];\n        };\n        return this.readAtomically(() => {\n            // Read the front part of the address; either the whole thing, or up to the first ::\n            const head = new Uint8Array(16);\n            const [headSize, headIp4] = readGroups(head);\n            if (headSize === 16) {\n                return head;\n            }\n            // IPv4 part is not allowed before `::`\n            if (headIp4) {\n                return undefined;\n            }\n            // Read `::` if previous code parsed less than 8 groups.\n            // `::` indicates one or more groups of 16 bits of zeros.\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            // Read the back part of the address. The :: must contain at least one\n            // set of zeroes, so our max length is 7.\n            const tail = new Uint8Array(14);\n            const limit = 16 - (headSize + 2);\n            const [tailSize] = readGroups(tail.subarray(0, limit));\n            // Concat the head and tail of the IP address\n            head.set(tail.subarray(0, tailSize), 16 - tailSize);\n            return head;\n        });\n    }\n    /** Read an IP Address, either IPv4 or IPv6. */\n    readIPAddr() {\n        return this.readIPv4Addr() ?? this.readIPv6Addr();\n    }\n}\n//# sourceMappingURL=parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@chainsafe/is-ip/lib/parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@chainsafe/netmask/dist/src/cidr.js":
/*!**********************************************************!*\
  !*** ./node_modules/@chainsafe/netmask/dist/src/cidr.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cidrMask: () => (/* binding */ cidrMask),\n/* harmony export */   parseCidr: () => (/* binding */ parseCidr)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_is_ip_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chainsafe/is-ip/parse */ \"(ssr)/./node_modules/@chainsafe/is-ip/lib/parse.js\");\n/* harmony import */ var _ip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ip.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/ip.js\");\n\n\nfunction parseCidr(s) {\n    const [address, maskString] = s.split(\"/\");\n    if (!address || !maskString)\n        throw new Error(\"Failed to parse given CIDR: \" + s);\n    let ipLength = _ip_js__WEBPACK_IMPORTED_MODULE_1__.IPv4Len;\n    let ip = (0,_chainsafe_is_ip_parse__WEBPACK_IMPORTED_MODULE_0__.parseIPv4)(address);\n    if (ip == null) {\n        ipLength = _ip_js__WEBPACK_IMPORTED_MODULE_1__.IPv6Len;\n        ip = (0,_chainsafe_is_ip_parse__WEBPACK_IMPORTED_MODULE_0__.parseIPv6)(address);\n        if (ip == null)\n            throw new Error(\"Failed to parse given CIDR: \" + s);\n    }\n    const m = parseInt(maskString, 10);\n    if (Number.isNaN(m) ||\n        String(m).length !== maskString.length ||\n        m < 0 ||\n        m > ipLength * 8) {\n        throw new Error(\"Failed to parse given CIDR: \" + s);\n    }\n    const mask = cidrMask(m, 8 * ipLength);\n    return {\n        network: (0,_ip_js__WEBPACK_IMPORTED_MODULE_1__.maskIp)(ip, mask),\n        mask,\n    };\n}\nfunction cidrMask(ones, bits) {\n    if (bits !== 8 * _ip_js__WEBPACK_IMPORTED_MODULE_1__.IPv4Len && bits !== 8 * _ip_js__WEBPACK_IMPORTED_MODULE_1__.IPv6Len)\n        throw new Error(\"Invalid CIDR mask\");\n    if (ones < 0 || ones > bits)\n        throw new Error(\"Invalid CIDR mask\");\n    const l = bits / 8;\n    const m = new Uint8Array(l);\n    for (let i = 0; i < l; i++) {\n        if (ones >= 8) {\n            m[i] = 0xff;\n            ones -= 8;\n            continue;\n        }\n        m[i] = 255 - (0xff >> ones);\n        ones = 0;\n    }\n    return m;\n}\n//# sourceMappingURL=cidr.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9uZXRtYXNrL2Rpc3Qvc3JjL2NpZHIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4RDtBQUNYO0FBQzVDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDJDQUFPO0FBQzFCLGFBQWEsaUVBQVM7QUFDdEI7QUFDQSxtQkFBbUIsMkNBQU87QUFDMUIsYUFBYSxpRUFBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOENBQU07QUFDdkI7QUFDQTtBQUNBO0FBQ087QUFDUCxxQkFBcUIsMkNBQU8saUJBQWlCLDJDQUFPO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BjaGFpbnNhZmUvbmV0bWFzay9kaXN0L3NyYy9jaWRyLmpzPzhhNDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VJUHY0LCBwYXJzZUlQdjYgfSBmcm9tIFwiQGNoYWluc2FmZS9pcy1pcC9wYXJzZVwiO1xuaW1wb3J0IHsgSVB2NExlbiwgSVB2NkxlbiwgbWFza0lwIH0gZnJvbSBcIi4vaXAuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNpZHIocykge1xuICAgIGNvbnN0IFthZGRyZXNzLCBtYXNrU3RyaW5nXSA9IHMuc3BsaXQoXCIvXCIpO1xuICAgIGlmICghYWRkcmVzcyB8fCAhbWFza1N0cmluZylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHBhcnNlIGdpdmVuIENJRFI6IFwiICsgcyk7XG4gICAgbGV0IGlwTGVuZ3RoID0gSVB2NExlbjtcbiAgICBsZXQgaXAgPSBwYXJzZUlQdjQoYWRkcmVzcyk7XG4gICAgaWYgKGlwID09IG51bGwpIHtcbiAgICAgICAgaXBMZW5ndGggPSBJUHY2TGVuO1xuICAgICAgICBpcCA9IHBhcnNlSVB2NihhZGRyZXNzKTtcbiAgICAgICAgaWYgKGlwID09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gcGFyc2UgZ2l2ZW4gQ0lEUjogXCIgKyBzKTtcbiAgICB9XG4gICAgY29uc3QgbSA9IHBhcnNlSW50KG1hc2tTdHJpbmcsIDEwKTtcbiAgICBpZiAoTnVtYmVyLmlzTmFOKG0pIHx8XG4gICAgICAgIFN0cmluZyhtKS5sZW5ndGggIT09IG1hc2tTdHJpbmcubGVuZ3RoIHx8XG4gICAgICAgIG0gPCAwIHx8XG4gICAgICAgIG0gPiBpcExlbmd0aCAqIDgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHBhcnNlIGdpdmVuIENJRFI6IFwiICsgcyk7XG4gICAgfVxuICAgIGNvbnN0IG1hc2sgPSBjaWRyTWFzayhtLCA4ICogaXBMZW5ndGgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5ldHdvcms6IG1hc2tJcChpcCwgbWFzayksXG4gICAgICAgIG1hc2ssXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjaWRyTWFzayhvbmVzLCBiaXRzKSB7XG4gICAgaWYgKGJpdHMgIT09IDggKiBJUHY0TGVuICYmIGJpdHMgIT09IDggKiBJUHY2TGVuKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIENJRFIgbWFza1wiKTtcbiAgICBpZiAob25lcyA8IDAgfHwgb25lcyA+IGJpdHMpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgQ0lEUiBtYXNrXCIpO1xuICAgIGNvbnN0IGwgPSBiaXRzIC8gODtcbiAgICBjb25zdCBtID0gbmV3IFVpbnQ4QXJyYXkobCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaWYgKG9uZXMgPj0gOCkge1xuICAgICAgICAgICAgbVtpXSA9IDB4ZmY7XG4gICAgICAgICAgICBvbmVzIC09IDg7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBtW2ldID0gMjU1IC0gKDB4ZmYgPj4gb25lcyk7XG4gICAgICAgIG9uZXMgPSAwO1xuICAgIH1cbiAgICByZXR1cm4gbTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNpZHIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@chainsafe/netmask/dist/src/cidr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@chainsafe/netmask/dist/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@chainsafe/netmask/dist/src/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IpNet: () => (/* reexport safe */ _ipnet_js__WEBPACK_IMPORTED_MODULE_0__.IpNet),\n/* harmony export */   cidrContains: () => (/* binding */ cidrContains),\n/* harmony export */   iPv4FromIPv6: () => (/* reexport safe */ _ip_js__WEBPACK_IMPORTED_MODULE_2__.iPv4FromIPv6),\n/* harmony export */   ipToString: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_1__.ipToString),\n/* harmony export */   isIPv4mappedIPv6: () => (/* reexport safe */ _ip_js__WEBPACK_IMPORTED_MODULE_2__.isIPv4mappedIPv6),\n/* harmony export */   maskIp: () => (/* reexport safe */ _ip_js__WEBPACK_IMPORTED_MODULE_2__.maskIp),\n/* harmony export */   parseCidr: () => (/* reexport safe */ _cidr_js__WEBPACK_IMPORTED_MODULE_3__.parseCidr)\n/* harmony export */ });\n/* harmony import */ var _ipnet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ipnet.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/ipnet.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/util.js\");\n/* harmony import */ var _ip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ip.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/ip.js\");\n/* harmony import */ var _cidr_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cidr.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/cidr.js\");\n\n\n\n\n\n/**\n * Checks if cidr block contains ip address\n * @param cidr ipv4 or ipv6 formatted cidr . Example 198.51.100.14/24 or 2001:db8::/48\n * @param ip ipv4 or ipv6 address Example 198.51.100.14 or 2001:db8::\n *\n */\nfunction cidrContains(cidr, ip) {\n    const ipnet = new _ipnet_js__WEBPACK_IMPORTED_MODULE_0__.IpNet(cidr);\n    return ipnet.contains(ip);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9uZXRtYXNrL2Rpc3Qvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1DO0FBQ0k7QUFDMEI7QUFDOUI7QUFDRztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHNCQUFzQiw0Q0FBSztBQUMzQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9uZXRtYXNrL2Rpc3Qvc3JjL2luZGV4LmpzPzkwZjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSXBOZXQgfSBmcm9tIFwiLi9pcG5ldC5qc1wiO1xuZXhwb3J0IHsgaXBUb1N0cmluZyB9IGZyb20gXCIuL3V0aWwuanNcIjtcbmV4cG9ydCB7IG1hc2tJcCwgaVB2NEZyb21JUHY2LCBpc0lQdjRtYXBwZWRJUHY2IH0gZnJvbSBcIi4vaXAuanNcIjtcbmV4cG9ydCB7IElwTmV0IH0gZnJvbSBcIi4vaXBuZXQuanNcIjtcbmV4cG9ydCB7IHBhcnNlQ2lkciB9IGZyb20gXCIuL2NpZHIuanNcIjtcbi8qKlxuICogQ2hlY2tzIGlmIGNpZHIgYmxvY2sgY29udGFpbnMgaXAgYWRkcmVzc1xuICogQHBhcmFtIGNpZHIgaXB2NCBvciBpcHY2IGZvcm1hdHRlZCBjaWRyIC4gRXhhbXBsZSAxOTguNTEuMTAwLjE0LzI0IG9yIDIwMDE6ZGI4OjovNDhcbiAqIEBwYXJhbSBpcCBpcHY0IG9yIGlwdjYgYWRkcmVzcyBFeGFtcGxlIDE5OC41MS4xMDAuMTQgb3IgMjAwMTpkYjg6OlxuICpcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNpZHJDb250YWlucyhjaWRyLCBpcCkge1xuICAgIGNvbnN0IGlwbmV0ID0gbmV3IElwTmV0KGNpZHIpO1xuICAgIHJldHVybiBpcG5ldC5jb250YWlucyhpcCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@chainsafe/netmask/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@chainsafe/netmask/dist/src/ip.js":
/*!********************************************************!*\
  !*** ./node_modules/@chainsafe/netmask/dist/src/ip.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IPv4Len: () => (/* binding */ IPv4Len),\n/* harmony export */   IPv6Len: () => (/* binding */ IPv6Len),\n/* harmony export */   containsIp: () => (/* binding */ containsIp),\n/* harmony export */   iPv4FromIPv6: () => (/* binding */ iPv4FromIPv6),\n/* harmony export */   ipv4Prefix: () => (/* binding */ ipv4Prefix),\n/* harmony export */   isIPv4mappedIPv6: () => (/* binding */ isIPv4mappedIPv6),\n/* harmony export */   maskIp: () => (/* binding */ maskIp),\n/* harmony export */   maxIPv6Octet: () => (/* binding */ maxIPv6Octet)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_is_ip_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chainsafe/is-ip/parse */ \"(ssr)/./node_modules/@chainsafe/is-ip/lib/parse.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/util.js\");\n\n\nconst IPv4Len = 4;\nconst IPv6Len = 16;\nconst maxIPv6Octet = parseInt(\"0xFFFF\", 16);\nconst ipv4Prefix = new Uint8Array([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255,\n]);\nfunction maskIp(ip, mask) {\n    if (mask.length === IPv6Len && ip.length === IPv4Len && (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.allFF)(mask, 0, 11)) {\n        mask = mask.slice(12);\n    }\n    if (mask.length === IPv4Len &&\n        ip.length === IPv6Len &&\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.deepEqual)(ip, ipv4Prefix, 0, 11)) {\n        ip = ip.slice(12);\n    }\n    const n = ip.length;\n    if (n != mask.length) {\n        throw new Error(\"Failed to mask ip\");\n    }\n    const out = new Uint8Array(n);\n    for (let i = 0; i < n; i++) {\n        out[i] = ip[i] & mask[i];\n    }\n    return out;\n}\nfunction containsIp(net, ip) {\n    if (typeof ip === \"string\") {\n        ip = (0,_chainsafe_is_ip_parse__WEBPACK_IMPORTED_MODULE_0__.parseIP)(ip);\n    }\n    if (ip == null)\n        throw new Error(\"Invalid ip\");\n    if (ip.length !== net.network.length) {\n        return false;\n    }\n    for (let i = 0; i < ip.length; i++) {\n        if ((net.network[i] & net.mask[i]) !== (ip[i] & net.mask[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction iPv4FromIPv6(ip) {\n    if (!isIPv4mappedIPv6(ip)) {\n        throw new Error(\"Must have 0xffff prefix\");\n    }\n    return ip.slice(12);\n}\nfunction isIPv4mappedIPv6(ip) {\n    return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.deepEqual)(ip, ipv4Prefix, 0, 11);\n}\n//# sourceMappingURL=ip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9uZXRtYXNrL2Rpc3Qvc3JjL2lwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBaUQ7QUFDSjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDTztBQUNQLDREQUE0RCwrQ0FBSztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsbURBQVM7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLCtEQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixlQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxtREFBUztBQUNwQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL0BjaGFpbnNhZmUvbmV0bWFzay9kaXN0L3NyYy9pcC5qcz8yMGZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlSVAgfSBmcm9tIFwiQGNoYWluc2FmZS9pcy1pcC9wYXJzZVwiO1xuaW1wb3J0IHsgYWxsRkYsIGRlZXBFcXVhbCB9IGZyb20gXCIuL3V0aWwuanNcIjtcbmV4cG9ydCBjb25zdCBJUHY0TGVuID0gNDtcbmV4cG9ydCBjb25zdCBJUHY2TGVuID0gMTY7XG5leHBvcnQgY29uc3QgbWF4SVB2Nk9jdGV0ID0gcGFyc2VJbnQoXCIweEZGRkZcIiwgMTYpO1xuZXhwb3J0IGNvbnN0IGlwdjRQcmVmaXggPSBuZXcgVWludDhBcnJheShbXG4gICAgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMjU1LCAyNTUsXG5dKTtcbmV4cG9ydCBmdW5jdGlvbiBtYXNrSXAoaXAsIG1hc2spIHtcbiAgICBpZiAobWFzay5sZW5ndGggPT09IElQdjZMZW4gJiYgaXAubGVuZ3RoID09PSBJUHY0TGVuICYmIGFsbEZGKG1hc2ssIDAsIDExKSkge1xuICAgICAgICBtYXNrID0gbWFzay5zbGljZSgxMik7XG4gICAgfVxuICAgIGlmIChtYXNrLmxlbmd0aCA9PT0gSVB2NExlbiAmJlxuICAgICAgICBpcC5sZW5ndGggPT09IElQdjZMZW4gJiZcbiAgICAgICAgZGVlcEVxdWFsKGlwLCBpcHY0UHJlZml4LCAwLCAxMSkpIHtcbiAgICAgICAgaXAgPSBpcC5zbGljZSgxMik7XG4gICAgfVxuICAgIGNvbnN0IG4gPSBpcC5sZW5ndGg7XG4gICAgaWYgKG4gIT0gbWFzay5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIG1hc2sgaXBcIik7XG4gICAgfVxuICAgIGNvbnN0IG91dCA9IG5ldyBVaW50OEFycmF5KG4pO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIG91dFtpXSA9IGlwW2ldICYgbWFza1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb250YWluc0lwKG5ldCwgaXApIHtcbiAgICBpZiAodHlwZW9mIGlwID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlwID0gcGFyc2VJUChpcCk7XG4gICAgfVxuICAgIGlmIChpcCA9PSBudWxsKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlwXCIpO1xuICAgIGlmIChpcC5sZW5ndGggIT09IG5ldC5uZXR3b3JrLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKChuZXQubmV0d29ya1tpXSAmIG5ldC5tYXNrW2ldKSAhPT0gKGlwW2ldICYgbmV0Lm1hc2tbaV0pKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaVB2NEZyb21JUHY2KGlwKSB7XG4gICAgaWYgKCFpc0lQdjRtYXBwZWRJUHY2KGlwKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNdXN0IGhhdmUgMHhmZmZmIHByZWZpeFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGlwLnNsaWNlKDEyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0lQdjRtYXBwZWRJUHY2KGlwKSB7XG4gICAgcmV0dXJuIGRlZXBFcXVhbChpcCwgaXB2NFByZWZpeCwgMCwgMTEpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@chainsafe/netmask/dist/src/ip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@chainsafe/netmask/dist/src/ipnet.js":
/*!***********************************************************!*\
  !*** ./node_modules/@chainsafe/netmask/dist/src/ipnet.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IpNet: () => (/* binding */ IpNet)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_is_ip_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chainsafe/is-ip/parse */ \"(ssr)/./node_modules/@chainsafe/is-ip/lib/parse.js\");\n/* harmony import */ var _cidr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cidr.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/cidr.js\");\n/* harmony import */ var _ip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ip.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/ip.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/util.js\");\n\n\n\n\nclass IpNet {\n    /**\n     *\n     * @param ipOrCidr either network ip or full cidr address\n     * @param mask in case ipOrCidr is network this can be either mask in decimal format or as ip address\n     */\n    constructor(ipOrCidr, mask) {\n        if (mask == null) {\n            ({ network: this.network, mask: this.mask } = (0,_cidr_js__WEBPACK_IMPORTED_MODULE_1__.parseCidr)(ipOrCidr));\n        }\n        else {\n            const ipResult = (0,_chainsafe_is_ip_parse__WEBPACK_IMPORTED_MODULE_0__.parseIP)(ipOrCidr);\n            if (ipResult == null) {\n                throw new Error(\"Failed to parse network\");\n            }\n            mask = String(mask);\n            const m = parseInt(mask, 10);\n            if (Number.isNaN(m) ||\n                String(m).length !== mask.length ||\n                m < 0 ||\n                m > ipResult.length * 8) {\n                const maskResult = (0,_chainsafe_is_ip_parse__WEBPACK_IMPORTED_MODULE_0__.parseIP)(mask);\n                if (maskResult == null) {\n                    throw new Error(\"Failed to parse mask\");\n                }\n                this.mask = maskResult;\n            }\n            else {\n                this.mask = (0,_cidr_js__WEBPACK_IMPORTED_MODULE_1__.cidrMask)(m, 8 * ipResult.length);\n            }\n            this.network = (0,_ip_js__WEBPACK_IMPORTED_MODULE_2__.maskIp)(ipResult, this.mask);\n        }\n    }\n    /**\n     * Checks if netmask contains ip address\n     * @param ip\n     * @returns\n     */\n    contains(ip) {\n        return (0,_ip_js__WEBPACK_IMPORTED_MODULE_2__.containsIp)({ network: this.network, mask: this.mask }, ip);\n    }\n    /**Serializes back to string format */\n    toString() {\n        const l = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.simpleMaskLength)(this.mask);\n        const mask = l !== -1 ? String(l) : (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.maskToHex)(this.mask);\n        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.ipToString)(this.network) + \"/\" + mask;\n    }\n}\n//# sourceMappingURL=ipnet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9uZXRtYXNrL2Rpc3Qvc3JjL2lwbmV0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ0Q7QUFDSDtBQUN1QjtBQUM3RDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5Q0FBeUMsRUFBRSxtREFBUztBQUNuRTtBQUNBO0FBQ0EsNkJBQTZCLCtEQUFPO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQywrREFBTztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0RBQVE7QUFDcEM7QUFDQSwyQkFBMkIsOENBQU07QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQVUsR0FBRyx3Q0FBd0M7QUFDcEU7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDBEQUFnQjtBQUNsQyw0Q0FBNEMsbURBQVM7QUFDckQsZUFBZSxvREFBVTtBQUN6QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9uZXRtYXNrL2Rpc3Qvc3JjL2lwbmV0LmpzPzE5NTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VJUCB9IGZyb20gXCJAY2hhaW5zYWZlL2lzLWlwL3BhcnNlXCI7XG5pbXBvcnQgeyBjaWRyTWFzaywgcGFyc2VDaWRyIH0gZnJvbSBcIi4vY2lkci5qc1wiO1xuaW1wb3J0IHsgY29udGFpbnNJcCwgbWFza0lwIH0gZnJvbSBcIi4vaXAuanNcIjtcbmltcG9ydCB7IGlwVG9TdHJpbmcsIG1hc2tUb0hleCwgc2ltcGxlTWFza0xlbmd0aCB9IGZyb20gXCIuL3V0aWwuanNcIjtcbmV4cG9ydCBjbGFzcyBJcE5ldCB7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaXBPckNpZHIgZWl0aGVyIG5ldHdvcmsgaXAgb3IgZnVsbCBjaWRyIGFkZHJlc3NcbiAgICAgKiBAcGFyYW0gbWFzayBpbiBjYXNlIGlwT3JDaWRyIGlzIG5ldHdvcmsgdGhpcyBjYW4gYmUgZWl0aGVyIG1hc2sgaW4gZGVjaW1hbCBmb3JtYXQgb3IgYXMgaXAgYWRkcmVzc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGlwT3JDaWRyLCBtYXNrKSB7XG4gICAgICAgIGlmIChtYXNrID09IG51bGwpIHtcbiAgICAgICAgICAgICh7IG5ldHdvcms6IHRoaXMubmV0d29yaywgbWFzazogdGhpcy5tYXNrIH0gPSBwYXJzZUNpZHIoaXBPckNpZHIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGlwUmVzdWx0ID0gcGFyc2VJUChpcE9yQ2lkcik7XG4gICAgICAgICAgICBpZiAoaXBSZXN1bHQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBwYXJzZSBuZXR3b3JrXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWFzayA9IFN0cmluZyhtYXNrKTtcbiAgICAgICAgICAgIGNvbnN0IG0gPSBwYXJzZUludChtYXNrLCAxMCk7XG4gICAgICAgICAgICBpZiAoTnVtYmVyLmlzTmFOKG0pIHx8XG4gICAgICAgICAgICAgICAgU3RyaW5nKG0pLmxlbmd0aCAhPT0gbWFzay5sZW5ndGggfHxcbiAgICAgICAgICAgICAgICBtIDwgMCB8fFxuICAgICAgICAgICAgICAgIG0gPiBpcFJlc3VsdC5sZW5ndGggKiA4KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWFza1Jlc3VsdCA9IHBhcnNlSVAobWFzayk7XG4gICAgICAgICAgICAgICAgaWYgKG1hc2tSZXN1bHQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gcGFyc2UgbWFza1wiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5tYXNrID0gbWFza1Jlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMubWFzayA9IGNpZHJNYXNrKG0sIDggKiBpcFJlc3VsdC5sZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5uZXR3b3JrID0gbWFza0lwKGlwUmVzdWx0LCB0aGlzLm1hc2spO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiBuZXRtYXNrIGNvbnRhaW5zIGlwIGFkZHJlc3NcbiAgICAgKiBAcGFyYW0gaXBcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGNvbnRhaW5zKGlwKSB7XG4gICAgICAgIHJldHVybiBjb250YWluc0lwKHsgbmV0d29yazogdGhpcy5uZXR3b3JrLCBtYXNrOiB0aGlzLm1hc2sgfSwgaXApO1xuICAgIH1cbiAgICAvKipTZXJpYWxpemVzIGJhY2sgdG8gc3RyaW5nIGZvcm1hdCAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICBjb25zdCBsID0gc2ltcGxlTWFza0xlbmd0aCh0aGlzLm1hc2spO1xuICAgICAgICBjb25zdCBtYXNrID0gbCAhPT0gLTEgPyBTdHJpbmcobCkgOiBtYXNrVG9IZXgodGhpcy5tYXNrKTtcbiAgICAgICAgcmV0dXJuIGlwVG9TdHJpbmcodGhpcy5uZXR3b3JrKSArIFwiL1wiICsgbWFzaztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcG5ldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@chainsafe/netmask/dist/src/ipnet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@chainsafe/netmask/dist/src/util.js":
/*!**********************************************************!*\
  !*** ./node_modules/@chainsafe/netmask/dist/src/util.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allFF: () => (/* binding */ allFF),\n/* harmony export */   deepEqual: () => (/* binding */ deepEqual),\n/* harmony export */   ipToString: () => (/* binding */ ipToString),\n/* harmony export */   maskToHex: () => (/* binding */ maskToHex),\n/* harmony export */   simpleMaskLength: () => (/* binding */ simpleMaskLength)\n/* harmony export */ });\n/* harmony import */ var _ip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ip.js */ \"(ssr)/./node_modules/@chainsafe/netmask/dist/src/ip.js\");\n\nfunction allFF(a, from, to) {\n    let i = 0;\n    for (const e of a) {\n        if (i < from)\n            continue;\n        if (i > to)\n            break;\n        if (e !== 0xff)\n            return false;\n        i++;\n    }\n    return true;\n}\nfunction deepEqual(a, b, from, to) {\n    let i = 0;\n    for (const e of a) {\n        if (i < from)\n            continue;\n        if (i > to)\n            break;\n        if (e !== b[i])\n            return false;\n        i++;\n    }\n    return true;\n}\n/***\n * Returns long ip format\n */\nfunction ipToString(ip) {\n    switch (ip.length) {\n        case _ip_js__WEBPACK_IMPORTED_MODULE_0__.IPv4Len: {\n            return ip.join(\".\");\n        }\n        case _ip_js__WEBPACK_IMPORTED_MODULE_0__.IPv6Len: {\n            const result = [];\n            for (let i = 0; i < ip.length; i++) {\n                if (i % 2 === 0) {\n                    result.push(ip[i].toString(16).padStart(2, \"0\") +\n                        ip[i + 1].toString(16).padStart(2, \"0\"));\n                }\n            }\n            return result.join(\":\");\n        }\n        default: {\n            throw new Error(\"Invalid ip length\");\n        }\n    }\n}\n/**\n * If mask is a sequence of 1 bits followed by 0 bits, return number of 1 bits else -1\n */\nfunction simpleMaskLength(mask) {\n    let ones = 0;\n    // eslint-disable-next-line prefer-const\n    for (let [index, byte] of mask.entries()) {\n        if (byte === 0xff) {\n            ones += 8;\n            continue;\n        }\n        while ((byte & 0x80) != 0) {\n            ones++;\n            byte = byte << 1;\n        }\n        if ((byte & 0x80) != 0) {\n            return -1;\n        }\n        for (let i = index + 1; i < mask.length; i++) {\n            if (mask[i] != 0) {\n                return -1;\n            }\n        }\n        break;\n    }\n    return ones;\n}\nfunction maskToHex(mask) {\n    let hex = \"0x\";\n    for (const byte of mask) {\n        hex += (byte >> 4).toString(16) + (byte & 0x0f).toString(16);\n    }\n    return hex;\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9uZXRtYXNrL2Rpc3Qvc3JjL3V0aWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBQ3BDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSwyQ0FBTztBQUNwQjtBQUNBO0FBQ0EsYUFBYSwyQ0FBTztBQUNwQjtBQUNBLDRCQUE0QixlQUFlO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxpQkFBaUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvQGNoYWluc2FmZS9uZXRtYXNrL2Rpc3Qvc3JjL3V0aWwuanM/NTBjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUHY0TGVuLCBJUHY2TGVuIH0gZnJvbSBcIi4vaXAuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBhbGxGRihhLCBmcm9tLCB0bykge1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGNvbnN0IGUgb2YgYSkge1xuICAgICAgICBpZiAoaSA8IGZyb20pXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgaWYgKGkgPiB0bylcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBpZiAoZSAhPT0gMHhmZilcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaSsrO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWVwRXF1YWwoYSwgYiwgZnJvbSwgdG8pIHtcbiAgICBsZXQgaSA9IDA7XG4gICAgZm9yIChjb25zdCBlIG9mIGEpIHtcbiAgICAgICAgaWYgKGkgPCBmcm9tKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGlmIChpID4gdG8pXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgaWYgKGUgIT09IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vKioqXG4gKiBSZXR1cm5zIGxvbmcgaXAgZm9ybWF0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpcFRvU3RyaW5nKGlwKSB7XG4gICAgc3dpdGNoIChpcC5sZW5ndGgpIHtcbiAgICAgICAgY2FzZSBJUHY0TGVuOiB7XG4gICAgICAgICAgICByZXR1cm4gaXAuam9pbihcIi5cIik7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBJUHY2TGVuOiB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoaSAlIDIgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goaXBbaV0udG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKSArXG4gICAgICAgICAgICAgICAgICAgICAgICBpcFtpICsgMV0udG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKFwiOlwiKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlwIGxlbmd0aFwiKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogSWYgbWFzayBpcyBhIHNlcXVlbmNlIG9mIDEgYml0cyBmb2xsb3dlZCBieSAwIGJpdHMsIHJldHVybiBudW1iZXIgb2YgMSBiaXRzIGVsc2UgLTFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpbXBsZU1hc2tMZW5ndGgobWFzaykge1xuICAgIGxldCBvbmVzID0gMDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWNvbnN0XG4gICAgZm9yIChsZXQgW2luZGV4LCBieXRlXSBvZiBtYXNrLmVudHJpZXMoKSkge1xuICAgICAgICBpZiAoYnl0ZSA9PT0gMHhmZikge1xuICAgICAgICAgICAgb25lcyArPSA4O1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKChieXRlICYgMHg4MCkgIT0gMCkge1xuICAgICAgICAgICAgb25lcysrO1xuICAgICAgICAgICAgYnl0ZSA9IGJ5dGUgPDwgMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKGJ5dGUgJiAweDgwKSAhPSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IGluZGV4ICsgMTsgaSA8IG1hc2subGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChtYXNrW2ldICE9IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBvbmVzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1hc2tUb0hleChtYXNrKSB7XG4gICAgbGV0IGhleCA9IFwiMHhcIjtcbiAgICBmb3IgKGNvbnN0IGJ5dGUgb2YgbWFzaykge1xuICAgICAgICBoZXggKz0gKGJ5dGUgPj4gNCkudG9TdHJpbmcoMTYpICsgKGJ5dGUgJiAweDBmKS50b1N0cmluZygxNik7XG4gICAgfVxuICAgIHJldHVybiBoZXg7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@chainsafe/netmask/dist/src/util.js\n");

/***/ })

};
;