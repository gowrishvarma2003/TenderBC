"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ipfs-core-utils";
exports.ids = ["vendor-chunks/ipfs-core-utils"];
exports.modules = {

/***/ "(ssr)/./node_modules/ipfs-core-utils/node_modules/nanoid/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/nanoid/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customAlphabet: () => (/* binding */ customAlphabet),\n/* harmony export */   customRandom: () => (/* binding */ customRandom),\n/* harmony export */   nanoid: () => (/* binding */ nanoid),\n/* harmony export */   random: () => (/* binding */ random),\n/* harmony export */   urlAlphabet: () => (/* reexport safe */ _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_1__.urlAlphabet)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./url-alphabet/index.js */ \"(ssr)/./node_modules/ipfs-core-utils/node_modules/nanoid/url-alphabet/index.js\");\n\n\n\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nlet fillPool = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    ;(0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomFillSync)(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomFillSync)(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nlet random = bytes => {\n  fillPool((bytes -= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  fillPool((size -= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_1__.urlAlphabet[pool[i] & 63]\n  }\n  return id\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy9uYW5vaWQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF1QztBQUNjO0FBQy9CO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFjO0FBQ2xCO0FBQ0EsSUFBSTtBQUNKLElBQUksc0RBQWM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQSxrQ0FBa0MsZ0JBQWdCO0FBQ2xELFVBQVUsK0RBQVc7QUFDckI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvbmFub2lkL2luZGV4LmpzPzUxNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmFuZG9tRmlsbFN5bmMgfSBmcm9tICdjcnlwdG8nXG5pbXBvcnQgeyB1cmxBbHBoYWJldCB9IGZyb20gJy4vdXJsLWFscGhhYmV0L2luZGV4LmpzJ1xuZXhwb3J0IHsgdXJsQWxwaGFiZXQgfVxuY29uc3QgUE9PTF9TSVpFX01VTFRJUExJRVIgPSAxMjhcbmxldCBwb29sLCBwb29sT2Zmc2V0XG5sZXQgZmlsbFBvb2wgPSBieXRlcyA9PiB7XG4gIGlmICghcG9vbCB8fCBwb29sLmxlbmd0aCA8IGJ5dGVzKSB7XG4gICAgcG9vbCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShieXRlcyAqIFBPT0xfU0laRV9NVUxUSVBMSUVSKVxuICAgIHJhbmRvbUZpbGxTeW5jKHBvb2wpXG4gICAgcG9vbE9mZnNldCA9IDBcbiAgfSBlbHNlIGlmIChwb29sT2Zmc2V0ICsgYnl0ZXMgPiBwb29sLmxlbmd0aCkge1xuICAgIHJhbmRvbUZpbGxTeW5jKHBvb2wpXG4gICAgcG9vbE9mZnNldCA9IDBcbiAgfVxuICBwb29sT2Zmc2V0ICs9IGJ5dGVzXG59XG5leHBvcnQgbGV0IHJhbmRvbSA9IGJ5dGVzID0+IHtcbiAgZmlsbFBvb2woKGJ5dGVzIC09IDApKVxuICByZXR1cm4gcG9vbC5zdWJhcnJheShwb29sT2Zmc2V0IC0gYnl0ZXMsIHBvb2xPZmZzZXQpXG59XG5leHBvcnQgbGV0IGN1c3RvbVJhbmRvbSA9IChhbHBoYWJldCwgZGVmYXVsdFNpemUsIGdldFJhbmRvbSkgPT4ge1xuICBsZXQgbWFzayA9ICgyIDw8ICgzMSAtIE1hdGguY2x6MzIoKGFscGhhYmV0Lmxlbmd0aCAtIDEpIHwgMSkpKSAtIDFcbiAgbGV0IHN0ZXAgPSBNYXRoLmNlaWwoKDEuNiAqIG1hc2sgKiBkZWZhdWx0U2l6ZSkgLyBhbHBoYWJldC5sZW5ndGgpXG4gIHJldHVybiAoc2l6ZSA9IGRlZmF1bHRTaXplKSA9PiB7XG4gICAgbGV0IGlkID0gJydcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgbGV0IGJ5dGVzID0gZ2V0UmFuZG9tKHN0ZXApXG4gICAgICBsZXQgaSA9IHN0ZXBcbiAgICAgIHdoaWxlIChpLS0pIHtcbiAgICAgICAgaWQgKz0gYWxwaGFiZXRbYnl0ZXNbaV0gJiBtYXNrXSB8fCAnJ1xuICAgICAgICBpZiAoaWQubGVuZ3RoID09PSBzaXplKSByZXR1cm4gaWRcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbmV4cG9ydCBsZXQgY3VzdG9tQWxwaGFiZXQgPSAoYWxwaGFiZXQsIHNpemUgPSAyMSkgPT5cbiAgY3VzdG9tUmFuZG9tKGFscGhhYmV0LCBzaXplLCByYW5kb20pXG5leHBvcnQgbGV0IG5hbm9pZCA9IChzaXplID0gMjEpID0+IHtcbiAgZmlsbFBvb2woKHNpemUgLT0gMCkpXG4gIGxldCBpZCA9ICcnXG4gIGZvciAobGV0IGkgPSBwb29sT2Zmc2V0IC0gc2l6ZTsgaSA8IHBvb2xPZmZzZXQ7IGkrKykge1xuICAgIGlkICs9IHVybEFscGhhYmV0W3Bvb2xbaV0gJiA2M11cbiAgfVxuICByZXR1cm4gaWRcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/node_modules/nanoid/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/node_modules/nanoid/url-alphabet/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/nanoid/url-alphabet/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   urlAlphabet: () => (/* binding */ urlAlphabet)\n/* harmony export */ });\nconst urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy9uYW5vaWQvdXJsLWFscGhhYmV0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvbmFub2lkL3VybC1hbHBoYWJldC9pbmRleC5qcz9lNzY3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB1cmxBbHBoYWJldCA9XG4gICd1c2VhbmRvbS0yNlQxOTgzNDBQWDc1cHhKQUNLVkVSWU1JTkRCVVNIV09MRl9HUVpiZmdoamtscXZ3eXpyaWN0J1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/node_modules/nanoid/url-alphabet/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/agent.js":
/*!***************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/agent.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n\n\n\n/**\n * @param {URL} [url]\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((url) => {\n  if (!url) {\n    throw new Error('URL required')\n  }\n\n  return url.protocol.startsWith('https') ? https__WEBPACK_IMPORTED_MODULE_1__.Agent : http__WEBPACK_IMPORTED_MODULE_0__.Agent\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9hZ2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUI7QUFDRTs7QUFFekI7QUFDQSxXQUFXLEtBQUs7QUFDaEI7QUFDQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQSw0Q0FBNEMsd0NBQVcsR0FBRyx1Q0FBVTtBQUNwRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvYWdlbnQuanM/NDRmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHR0cCBmcm9tICdodHRwJ1xuaW1wb3J0IGh0dHBzIGZyb20gJ2h0dHBzJ1xuXG4vKipcbiAqIEBwYXJhbSB7VVJMfSBbdXJsXVxuICovXG5leHBvcnQgZGVmYXVsdCAodXJsKSA9PiB7XG4gIGlmICghdXJsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVUkwgcmVxdWlyZWQnKVxuICB9XG5cbiAgcmV0dXJuIHVybC5wcm90b2NvbC5zdGFydHNXaXRoKCdodHRwcycpID8gaHR0cHMuQWdlbnQgOiBodHRwLkFnZW50XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/agent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js":
/*!********************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseCandidateMultiple: () => (/* binding */ normaliseCandidateMultiple)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(ssr)/./node_modules/err-code/index.js\");\n/* harmony import */ var browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-readablestream-to-it */ \"(ssr)/./node_modules/browser-readablestream-to-it/dist/src/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! it-peekable */ \"(ssr)/./node_modules/it-peekable/dist/src/index.js\");\n/* harmony import */ var it_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-map */ \"(ssr)/./node_modules/it-map/dist/src/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/utils.js\");\n/* harmony import */ var ipfs_unixfs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ipfs-unixfs */ \"(ssr)/./node_modules/ipfs-unixfs/src/index.js\");\n\n\n\n\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nasync function * normaliseCandidateMultiple (input, normaliseContent) {\n  // String\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  // fs.ReadStream\n  // @ts-expect-error _readableState is a property of a node fs.ReadStream\n  if (typeof input === 'string' || input instanceof String || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(input) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBlob)(input) || input._readableState) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // Browser ReadableStream\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isReadableStream)(input)) {\n    input = (0,browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value)) {\n      throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n    }\n\n    // (Async)Iterable<fs.ReadStream>\n    // @ts-expect-error private field\n    if (value._readableState) {\n      // @ts-expect-error Node fs.ReadStreams have a `.path` property so we need to pass it as the content\n      yield * (0,it_map__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(peekable, (/** @type {ImportCandidate} */ value) => toFileObject({ content: value }, normaliseContent))\n      return\n    }\n\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(value)) {\n      // @ts-expect-error peekable is still an iterable of ImportCandidates\n      yield toFileObject({ content: peekable }, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isFileObject)(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isReadableStream)(value) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBlob)(value)) {\n      yield * (0,it_map__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isFileObject)(input)) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: (0,ipfs_unixfs__WEBPACK_IMPORTED_MODULE_5__.parseMode)(mode),\n    mtime: (0,ipfs_unixfs__WEBPACK_IMPORTED_MODULE_5__.parseMtime)(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY2FuZGlkYXRlLW11bHRpcGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBOEI7QUFDOEI7QUFDeEI7QUFDWjtBQU1MO0FBSUM7O0FBRXBCO0FBQ0EsYUFBYSxxREFBcUQ7QUFDbEUsYUFBYSwrQ0FBK0M7QUFDNUQsYUFBYSxnREFBZ0Q7QUFDN0QsYUFBYSwyREFBMkQ7QUFDeEU7O0FBRUE7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxXQUFXLDJEQUEyRDtBQUN0RTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELGtEQUFPLFdBQVcsaURBQU07QUFDdEYsVUFBVSxxQ0FBTztBQUNqQjs7QUFFQTtBQUNBLE1BQU0sMkRBQWdCO0FBQ3RCLFlBQVksd0VBQWlCO0FBQzdCOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUIsdURBQVU7QUFDL0IsWUFBWSxjQUFjOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscUNBQU87QUFDbkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGtEQUFHLHVCQUF1QixpQkFBaUIsNEJBQTRCLGdCQUFnQjtBQUNyRztBQUNBOztBQUVBLFFBQVEsa0RBQU87QUFDZjtBQUNBLDJCQUEyQixtQkFBbUI7QUFDOUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdURBQVksb0VBQW9FLDJEQUFnQixXQUFXLGlEQUFNO0FBQ3pILGNBQWMsa0RBQUcsdUJBQXVCLGlCQUFpQjtBQUN6RDtBQUNBO0FBQ0E7O0FBRUEsT0FBTztBQUNQO0FBQ0E7QUFDQSxNQUFNLHVEQUFZO0FBQ2xCLFVBQVUscUNBQU87QUFDakI7O0FBRUEsUUFBUSxxQ0FBTztBQUNmOztBQUVBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVywyREFBMkQ7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsVUFBVSw2QkFBNkI7O0FBRXZDLGFBQWEseUJBQXlCO0FBQ3RDO0FBQ0E7QUFDQSxVQUFVLHNEQUFTO0FBQ25CLFdBQVcsdURBQVU7QUFDckI7O0FBRUE7QUFDQTtBQUNBLElBQUksa0JBQWtCO0FBQ3RCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvZmlsZXMvbm9ybWFsaXNlLWNhbmRpZGF0ZS1tdWx0aXBsZS5qcz9hNTVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlcnJDb2RlIGZyb20gJ2Vyci1jb2RlJ1xuaW1wb3J0IGJyb3dzZXJTdHJlYW1Ub0l0IGZyb20gJ2Jyb3dzZXItcmVhZGFibGVzdHJlYW0tdG8taXQnXG5pbXBvcnQgaXRQZWVrYWJsZSBmcm9tICdpdC1wZWVrYWJsZSdcbmltcG9ydCBtYXAgZnJvbSAnaXQtbWFwJ1xuaW1wb3J0IHtcbiAgaXNCeXRlcyxcbiAgaXNCbG9iLFxuICBpc1JlYWRhYmxlU3RyZWFtLFxuICBpc0ZpbGVPYmplY3Rcbn0gZnJvbSAnLi91dGlscy5qcydcbmltcG9ydCB7XG4gIHBhcnNlTXRpbWUsXG4gIHBhcnNlTW9kZVxufSBmcm9tICdpcGZzLXVuaXhmcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlfSBJbXBvcnRDYW5kaWRhdGVcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5Ub0NvbnRlbnR9IFRvQ29udGVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy11bml4ZnMtaW1wb3J0ZXInKS5JbXBvcnRDYW5kaWRhdGV9IEltcG9ydGVySW1wb3J0Q2FuZGlkYXRlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBJbXBvcnRDYW5kaWRhdGVTdHJlYW1cbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBpbnB1dFxuICogQHBhcmFtIHsoY29udGVudDpUb0NvbnRlbnQpID0+IFByb21pc2U8QXN5bmNJdGVyYWJsZTxVaW50OEFycmF5Pj59IG5vcm1hbGlzZUNvbnRlbnRcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiAqIG5vcm1hbGlzZUNhbmRpZGF0ZU11bHRpcGxlIChpbnB1dCwgbm9ybWFsaXNlQ29udGVudCkge1xuICAvLyBTdHJpbmdcbiAgLy8gVWludDhBcnJheXxBcnJheUJ1ZmZlcnxUeXBlZEFycmF5XG4gIC8vIEJsb2J8RmlsZVxuICAvLyBmcy5SZWFkU3RyZWFtXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgX3JlYWRhYmxlU3RhdGUgaXMgYSBwcm9wZXJ0eSBvZiBhIG5vZGUgZnMuUmVhZFN0cmVhbVxuICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIFN0cmluZyB8fCBpc0J5dGVzKGlucHV0KSB8fCBpc0Jsb2IoaW5wdXQpIHx8IGlucHV0Ll9yZWFkYWJsZVN0YXRlKSB7XG4gICAgdGhyb3cgZXJyQ29kZShuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgaW5wdXQ6IHNpbmdsZSBpdGVtIHBhc3NlZCAtIGlmIHlvdSBhcmUgdXNpbmcgaXBmcy5hZGRBbGwsIHBsZWFzZSB1c2UgaXBmcy5hZGQgaW5zdGVhZCcpLCAnRVJSX1VORVhQRUNURURfSU5QVVQnKVxuICB9XG5cbiAgLy8gQnJvd3NlciBSZWFkYWJsZVN0cmVhbVxuICBpZiAoaXNSZWFkYWJsZVN0cmVhbShpbnB1dCkpIHtcbiAgICBpbnB1dCA9IGJyb3dzZXJTdHJlYW1Ub0l0KGlucHV0KVxuICB9XG5cbiAgLy8gSXRlcmFibGU8Pz5cbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBpbnB1dCB8fCBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiBpbnB1dCkge1xuICAgIGNvbnN0IHBlZWthYmxlID0gaXRQZWVrYWJsZShpbnB1dClcbiAgICBjb25zdCB7IHZhbHVlLCBkb25lIH0gPSBhd2FpdCBwZWVrYWJsZS5wZWVrKClcblxuICAgIGlmIChkb25lKSB7XG4gICAgICAvLyBtYWtlIHN1cmUgZW1wdHkgaXRlcmF0b3JzIHJlc3VsdCBpbiBlbXB0eSBmaWxlc1xuICAgICAgeWllbGQgKiBbXVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgcGVla2FibGUucHVzaCh2YWx1ZSlcblxuICAgIC8vIChBc3luYylJdGVyYWJsZTxOdW1iZXI+XG4gICAgLy8gKEFzeW5jKUl0ZXJhYmxlPEJ5dGVzPlxuICAgIGlmIChOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgdGhyb3cgZXJyQ29kZShuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgaW5wdXQ6IHNpbmdsZSBpdGVtIHBhc3NlZCAtIGlmIHlvdSBhcmUgdXNpbmcgaXBmcy5hZGRBbGwsIHBsZWFzZSB1c2UgaXBmcy5hZGQgaW5zdGVhZCcpLCAnRVJSX1VORVhQRUNURURfSU5QVVQnKVxuICAgIH1cblxuICAgIC8vIChBc3luYylJdGVyYWJsZTxmcy5SZWFkU3RyZWFtPlxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgcHJpdmF0ZSBmaWVsZFxuICAgIGlmICh2YWx1ZS5fcmVhZGFibGVTdGF0ZSkge1xuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBOb2RlIGZzLlJlYWRTdHJlYW1zIGhhdmUgYSBgLnBhdGhgIHByb3BlcnR5IHNvIHdlIG5lZWQgdG8gcGFzcyBpdCBhcyB0aGUgY29udGVudFxuICAgICAgeWllbGQgKiBtYXAocGVla2FibGUsICgvKiogQHR5cGUge0ltcG9ydENhbmRpZGF0ZX0gKi8gdmFsdWUpID0+IHRvRmlsZU9iamVjdCh7IGNvbnRlbnQ6IHZhbHVlIH0sIG5vcm1hbGlzZUNvbnRlbnQpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKGlzQnl0ZXModmFsdWUpKSB7XG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHBlZWthYmxlIGlzIHN0aWxsIGFuIGl0ZXJhYmxlIG9mIEltcG9ydENhbmRpZGF0ZXNcbiAgICAgIHlpZWxkIHRvRmlsZU9iamVjdCh7IGNvbnRlbnQ6IHBlZWthYmxlIH0sIG5vcm1hbGlzZUNvbnRlbnQpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyAoQXN5bmMpSXRlcmFibGU8KEFzeW5jKUl0ZXJhYmxlPD8+PlxuICAgIC8vIChBc3luYylJdGVyYWJsZTxSZWFkYWJsZVN0cmVhbTw/Pj5cbiAgICAvLyBSZWFkYWJsZVN0cmVhbTwoQXN5bmMpSXRlcmFibGU8Pz4+XG4gICAgLy8gUmVhZGFibGVTdHJlYW08UmVhZGFibGVTdHJlYW08Pz4+XG4gICAgaWYgKGlzRmlsZU9iamVjdCh2YWx1ZSkgfHwgdmFsdWVbU3ltYm9sLml0ZXJhdG9yXSB8fCB2YWx1ZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0gfHwgaXNSZWFkYWJsZVN0cmVhbSh2YWx1ZSkgfHwgaXNCbG9iKHZhbHVlKSkge1xuICAgICAgeWllbGQgKiBtYXAocGVla2FibGUsICgvKiogQHR5cGUge0ltcG9ydENhbmRpZGF0ZX0gKi8gdmFsdWUpID0+IHRvRmlsZU9iamVjdCh2YWx1ZSwgbm9ybWFsaXNlQ29udGVudCkpXG4gICAgICByZXR1cm5cbiAgICB9XG4gIH1cblxuICAvLyB7IHBhdGgsIGNvbnRlbnQ6ID8gfVxuICAvLyBOb3RlOiBEZXRlY3RlZCBfYWZ0ZXJfIChBc3luYylJdGVyYWJsZTw/PiBiZWNhdXNlIE5vZGUuanMgZnMuUmVhZFN0cmVhbXMgaGF2ZSBhXG4gIC8vIGBwYXRoYCBwcm9wZXJ0eSB0aGF0IHBhc3NlcyB0aGlzIGNoZWNrLlxuICBpZiAoaXNGaWxlT2JqZWN0KGlucHV0KSkge1xuICAgIHRocm93IGVyckNvZGUobmV3IEVycm9yKCdVbmV4cGVjdGVkIGlucHV0OiBzaW5nbGUgaXRlbSBwYXNzZWQgLSBpZiB5b3UgYXJlIHVzaW5nIGlwZnMuYWRkQWxsLCBwbGVhc2UgdXNlIGlwZnMuYWRkIGluc3RlYWQnKSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbiAgfVxuXG4gIHRocm93IGVyckNvZGUobmV3IEVycm9yKCdVbmV4cGVjdGVkIGlucHV0OiAnICsgdHlwZW9mIGlucHV0KSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0ltcG9ydENhbmRpZGF0ZX0gaW5wdXRcbiAqIEBwYXJhbSB7KGNvbnRlbnQ6VG9Db250ZW50KSA9PiBQcm9taXNlPEFzeW5jSXRlcmFibGU8VWludDhBcnJheT4+fSBub3JtYWxpc2VDb250ZW50XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHRvRmlsZU9iamVjdCAoaW5wdXQsIG5vcm1hbGlzZUNvbnRlbnQpIHtcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIFRob3NlIHByb3BlcnRpZXMgZG9uJ3QgZXhpc3Qgb24gbW9zdCBpbnB1dCB0eXBlc1xuICBjb25zdCB7IHBhdGgsIG1vZGUsIG10aW1lLCBjb250ZW50IH0gPSBpbnB1dFxuXG4gIC8qKiBAdHlwZSB7SW1wb3J0ZXJJbXBvcnRDYW5kaWRhdGV9ICovXG4gIGNvbnN0IGZpbGUgPSB7XG4gICAgcGF0aDogcGF0aCB8fCAnJyxcbiAgICBtb2RlOiBwYXJzZU1vZGUobW9kZSksXG4gICAgbXRpbWU6IHBhcnNlTXRpbWUobXRpbWUpXG4gIH1cblxuICBpZiAoY29udGVudCkge1xuICAgIGZpbGUuY29udGVudCA9IGF3YWl0IG5vcm1hbGlzZUNvbnRlbnQoY29udGVudClcbiAgfSBlbHNlIGlmICghcGF0aCkgeyAvLyBOb3QgYWxyZWFkeSBhIGZpbGUgb2JqZWN0IHdpdGggcGF0aCBvciBjb250ZW50IHByb3BcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gaW5wdXQgc3RpbGwgY2FuIGJlIGRpZmZlcmVudCBUb0NvbnRlbnRcbiAgICBmaWxlLmNvbnRlbnQgPSBhd2FpdCBub3JtYWxpc2VDb250ZW50KGlucHV0KVxuICB9XG5cbiAgcmV0dXJuIGZpbGVcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js":
/*!******************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseCandidateSingle: () => (/* binding */ normaliseCandidateSingle)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(ssr)/./node_modules/err-code/index.js\");\n/* harmony import */ var browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-readablestream-to-it */ \"(ssr)/./node_modules/browser-readablestream-to-it/dist/src/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! it-peekable */ \"(ssr)/./node_modules/it-peekable/dist/src/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/utils.js\");\n/* harmony import */ var ipfs_unixfs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ipfs-unixfs */ \"(ssr)/./node_modules/ipfs-unixfs/src/index.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nasync function * normaliseCandidateSingle (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isBytes)(input) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isBlob)(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isReadableStream)(input)) {\n    input = (0,browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield { content: [] }\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    // (Async)Iterable<String>\n    if (Number.isInteger(value) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isBytes)(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isFileObject)(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: (0,ipfs_unixfs__WEBPACK_IMPORTED_MODULE_4__.parseMode)(mode),\n    mtime: (0,ipfs_unixfs__WEBPACK_IMPORTED_MODULE_4__.parseMtime)(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY2FuZGlkYXRlLXNpbmdsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBOEI7QUFDOEI7QUFDeEI7QUFNakI7QUFJQzs7QUFFcEI7QUFDQSxhQUFhLCtDQUErQztBQUM1RCxhQUFhLGdEQUFnRDtBQUM3RCxhQUFhLHFEQUFxRDtBQUNsRSxhQUFhLDJEQUEyRDtBQUN4RTs7QUFFQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsMkRBQTJEO0FBQ3RFO0FBQ0E7QUFDTztBQUNQO0FBQ0EsVUFBVSxxQ0FBTyxnQ0FBZ0MsTUFBTTtBQUN2RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLGtEQUFPLFdBQVcsaURBQU07QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSwyREFBZ0I7QUFDdEIsWUFBWSx3RUFBaUI7QUFDN0I7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQix1REFBVTs7QUFFL0IsZUFBZSxLQUFLO0FBQ3BCLFlBQVksY0FBYzs7QUFFMUI7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrREFBTztBQUMxQztBQUNBO0FBQ0E7O0FBRUEsVUFBVSxxQ0FBTztBQUNqQjs7QUFFQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE1BQU0sdURBQVk7QUFDbEI7QUFDQTtBQUNBOztBQUVBLFFBQVEscUNBQU87QUFDZjs7QUFFQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsMkRBQTJEO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLFVBQVUsNkJBQTZCOztBQUV2QyxhQUFhLHlCQUF5QjtBQUN0QztBQUNBO0FBQ0EsVUFBVSxzREFBUztBQUNuQixXQUFXLHVEQUFVO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGtCQUFrQjtBQUN0QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvc3JjL2ZpbGVzL25vcm1hbGlzZS1jYW5kaWRhdGUtc2luZ2xlLmpzPzRhM2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVyckNvZGUgZnJvbSAnZXJyLWNvZGUnXG5pbXBvcnQgYnJvd3NlclN0cmVhbVRvSXQgZnJvbSAnYnJvd3Nlci1yZWFkYWJsZXN0cmVhbS10by1pdCdcbmltcG9ydCBpdFBlZWthYmxlIGZyb20gJ2l0LXBlZWthYmxlJ1xuaW1wb3J0IHtcbiAgaXNCeXRlcyxcbiAgaXNCbG9iLFxuICBpc1JlYWRhYmxlU3RyZWFtLFxuICBpc0ZpbGVPYmplY3Rcbn0gZnJvbSAnLi91dGlscy5qcydcbmltcG9ydCB7XG4gIHBhcnNlTXRpbWUsXG4gIHBhcnNlTW9kZVxufSBmcm9tICdpcGZzLXVuaXhmcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuVG9Db250ZW50fSBUb0NvbnRlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtdW5peGZzLWltcG9ydGVyJykuSW1wb3J0Q2FuZGlkYXRlfSBJbXBvcnRlckltcG9ydENhbmRpZGF0ZVxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkltcG9ydENhbmRpZGF0ZX0gSW1wb3J0Q2FuZGlkYXRlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBJbXBvcnRDYW5kaWRhdGVTdHJlYW1cbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlfSBpbnB1dFxuICogQHBhcmFtIHsoY29udGVudDpUb0NvbnRlbnQpID0+IFByb21pc2U8QXN5bmNJdGVyYWJsZTxVaW50OEFycmF5Pj59IG5vcm1hbGlzZUNvbnRlbnRcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiAqIG5vcm1hbGlzZUNhbmRpZGF0ZVNpbmdsZSAoaW5wdXQsIG5vcm1hbGlzZUNvbnRlbnQpIHtcbiAgaWYgKGlucHV0ID09PSBudWxsIHx8IGlucHV0ID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBlcnJDb2RlKG5ldyBFcnJvcihgVW5leHBlY3RlZCBpbnB1dDogJHtpbnB1dH1gKSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbiAgfVxuXG4gIC8vIFN0cmluZ1xuICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgIHlpZWxkIHRvRmlsZU9iamVjdChpbnB1dC50b1N0cmluZygpLCBub3JtYWxpc2VDb250ZW50KVxuICAgIHJldHVyblxuICB9XG5cbiAgLy8gVWludDhBcnJheXxBcnJheUJ1ZmZlcnxUeXBlZEFycmF5XG4gIC8vIEJsb2J8RmlsZVxuICBpZiAoaXNCeXRlcyhpbnB1dCkgfHwgaXNCbG9iKGlucHV0KSkge1xuICAgIHlpZWxkIHRvRmlsZU9iamVjdChpbnB1dCwgbm9ybWFsaXNlQ29udGVudClcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIEJyb3dzZXIgUmVhZGFibGVTdHJlYW1cbiAgaWYgKGlzUmVhZGFibGVTdHJlYW0oaW5wdXQpKSB7XG4gICAgaW5wdXQgPSBicm93c2VyU3RyZWFtVG9JdChpbnB1dClcbiAgfVxuXG4gIC8vIEl0ZXJhYmxlPD8+XG4gIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gaW5wdXQgfHwgU3ltYm9sLmFzeW5jSXRlcmF0b3IgaW4gaW5wdXQpIHtcbiAgICBjb25zdCBwZWVrYWJsZSA9IGl0UGVla2FibGUoaW5wdXQpXG5cbiAgICAvKiogQHR5cGUge2FueX0gdmFsdWUgKiovXG4gICAgY29uc3QgeyB2YWx1ZSwgZG9uZSB9ID0gYXdhaXQgcGVla2FibGUucGVlaygpXG5cbiAgICBpZiAoZG9uZSkge1xuICAgICAgLy8gbWFrZSBzdXJlIGVtcHR5IGl0ZXJhdG9ycyByZXN1bHQgaW4gZW1wdHkgZmlsZXNcbiAgICAgIHlpZWxkIHsgY29udGVudDogW10gfVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgcGVla2FibGUucHVzaCh2YWx1ZSlcblxuICAgIC8vIChBc3luYylJdGVyYWJsZTxOdW1iZXI+XG4gICAgLy8gKEFzeW5jKUl0ZXJhYmxlPEJ5dGVzPlxuICAgIC8vIChBc3luYylJdGVyYWJsZTxTdHJpbmc+XG4gICAgaWYgKE51bWJlci5pc0ludGVnZXIodmFsdWUpIHx8IGlzQnl0ZXModmFsdWUpIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdmFsdWUgaW5zdGFuY2VvZiBTdHJpbmcpIHtcbiAgICAgIHlpZWxkIHRvRmlsZU9iamVjdChwZWVrYWJsZSwgbm9ybWFsaXNlQ29udGVudClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHRocm93IGVyckNvZGUobmV3IEVycm9yKCdVbmV4cGVjdGVkIGlucHV0OiBtdWx0aXBsZSBpdGVtcyBwYXNzZWQgLSBpZiB5b3UgYXJlIHVzaW5nIGlwZnMuYWRkLCBwbGVhc2UgdXNlIGlwZnMuYWRkQWxsIGluc3RlYWQnKSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbiAgfVxuXG4gIC8vIHsgcGF0aCwgY29udGVudDogPyB9XG4gIC8vIE5vdGU6IERldGVjdGVkIF9hZnRlcl8gKEFzeW5jKUl0ZXJhYmxlPD8+IGJlY2F1c2UgTm9kZS5qcyBmcy5SZWFkU3RyZWFtcyBoYXZlIGFcbiAgLy8gYHBhdGhgIHByb3BlcnR5IHRoYXQgcGFzc2VzIHRoaXMgY2hlY2suXG4gIGlmIChpc0ZpbGVPYmplY3QoaW5wdXQpKSB7XG4gICAgeWllbGQgdG9GaWxlT2JqZWN0KGlucHV0LCBub3JtYWxpc2VDb250ZW50KVxuICAgIHJldHVyblxuICB9XG5cbiAgdGhyb3cgZXJyQ29kZShuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgaW5wdXQ6IGNhbm5vdCBjb252ZXJ0IFwiJyArIHR5cGVvZiBpbnB1dCArICdcIiBpbnRvIEltcG9ydENhbmRpZGF0ZScpLCAnRVJSX1VORVhQRUNURURfSU5QVVQnKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlfSBpbnB1dFxuICogQHBhcmFtIHsoY29udGVudDpUb0NvbnRlbnQpID0+IFByb21pc2U8QXN5bmNJdGVyYWJsZTxVaW50OEFycmF5Pj59IG5vcm1hbGlzZUNvbnRlbnRcbiAqL1xuYXN5bmMgZnVuY3Rpb24gdG9GaWxlT2JqZWN0IChpbnB1dCwgbm9ybWFsaXNlQ29udGVudCkge1xuICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gVGhvc2UgcHJvcGVydGllcyBkb24ndCBleGlzdCBvbiBtb3N0IGlucHV0IHR5cGVzXG4gIGNvbnN0IHsgcGF0aCwgbW9kZSwgbXRpbWUsIGNvbnRlbnQgfSA9IGlucHV0XG5cbiAgLyoqIEB0eXBlIHtJbXBvcnRlckltcG9ydENhbmRpZGF0ZX0gKi9cbiAgY29uc3QgZmlsZSA9IHtcbiAgICBwYXRoOiBwYXRoIHx8ICcnLFxuICAgIG1vZGU6IHBhcnNlTW9kZShtb2RlKSxcbiAgICBtdGltZTogcGFyc2VNdGltZShtdGltZSlcbiAgfVxuXG4gIGlmIChjb250ZW50KSB7XG4gICAgZmlsZS5jb250ZW50ID0gYXdhaXQgbm9ybWFsaXNlQ29udGVudChjb250ZW50KVxuICB9IGVsc2UgaWYgKCFwYXRoKSB7IC8vIE5vdCBhbHJlYWR5IGEgZmlsZSBvYmplY3Qgd2l0aCBwYXRoIG9yIGNvbnRlbnQgcHJvcFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBpbnB1dCBzdGlsbCBjYW4gYmUgZGlmZmVyZW50IFRvQ29udGVudFxuICAgIGZpbGUuY29udGVudCA9IGF3YWl0IG5vcm1hbGlzZUNvbnRlbnQoaW5wdXQpXG4gIH1cblxuICByZXR1cm4gZmlsZVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseContent: () => (/* binding */ normaliseContent)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(ssr)/./node_modules/err-code/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! it-peekable */ \"(ssr)/./node_modules/it-peekable/dist/src/index.js\");\n/* harmony import */ var browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! browser-readablestream-to-it */ \"(ssr)/./node_modules/browser-readablestream-to-it/dist/src/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-all */ \"(ssr)/./node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/utils.js\");\n\n\n\n\n\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nasync function normaliseContent (input) {\n  // Bytes\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBlob)(input)) {\n    return input\n  }\n\n  // Browser stream\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isReadableStream)(input)) {\n    input = (0,browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await (0,it_all__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY29udGVudC5icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4QjtBQUNNO0FBQ3dCO0FBQ3BDO0FBS0w7O0FBRW5CO0FBQ0EsV0FBVywrQ0FBK0M7QUFDMUQ7QUFDTztBQUNQO0FBQ0EsTUFBTSxrREFBTztBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLGlEQUFNO0FBQ1o7QUFDQTs7QUFFQTtBQUNBLE1BQU0sMkRBQWdCO0FBQ3RCLFlBQVksd0VBQWlCO0FBQzdCOztBQUVBO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEIscUJBQXFCLHVEQUFVOztBQUUvQixlQUFlLEtBQUs7QUFDcEIsWUFBWSxjQUFjOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsNkNBQTZDLGtEQUFHO0FBQ2hEOztBQUVBO0FBQ0EsUUFBUSxrREFBTztBQUNmO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLHFDQUFPLGdDQUFnQyxNQUFNO0FBQ3JEOztBQUVBO0FBQ0EsV0FBVyw0Q0FBNEM7QUFDdkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvZmlsZXMvbm9ybWFsaXNlLWNvbnRlbnQuYnJvd3Nlci5qcz9jY2RlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlcnJDb2RlIGZyb20gJ2Vyci1jb2RlJ1xuaW1wb3J0IGl0UGVla2FibGUgZnJvbSAnaXQtcGVla2FibGUnXG5pbXBvcnQgYnJvd3NlclN0cmVhbVRvSXQgZnJvbSAnYnJvd3Nlci1yZWFkYWJsZXN0cmVhbS10by1pdCdcbmltcG9ydCBhbGwgZnJvbSAnaXQtYWxsJ1xuaW1wb3J0IHtcbiAgaXNCeXRlcyxcbiAgaXNCbG9iLFxuICBpc1JlYWRhYmxlU3RyZWFtXG59IGZyb20gJy4vdXRpbHMuanMnXG5cbi8qKlxuICogQHBhcmFtIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5Ub0NvbnRlbnR9IGlucHV0XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBub3JtYWxpc2VDb250ZW50IChpbnB1dCkge1xuICAvLyBCeXRlc1xuICBpZiAoaXNCeXRlcyhpbnB1dCkpIHtcbiAgICByZXR1cm4gbmV3IEJsb2IoW2lucHV0XSlcbiAgfVxuXG4gIC8vIFN0cmluZ1xuICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgIHJldHVybiBuZXcgQmxvYihbaW5wdXQudG9TdHJpbmcoKV0pXG4gIH1cblxuICAvLyBCbG9iIHwgRmlsZVxuICBpZiAoaXNCbG9iKGlucHV0KSkge1xuICAgIHJldHVybiBpbnB1dFxuICB9XG5cbiAgLy8gQnJvd3NlciBzdHJlYW1cbiAgaWYgKGlzUmVhZGFibGVTdHJlYW0oaW5wdXQpKSB7XG4gICAgaW5wdXQgPSBicm93c2VyU3RyZWFtVG9JdChpbnB1dClcbiAgfVxuXG4gIC8vIChBc3luYylJdGVyYXRvcjw/PlxuICBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIGlucHV0IHx8IFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIGlucHV0KSB7XG4gICAgLyoqIEB0eXBlIHthbnl9IHBlZWthYmxlICovXG4gICAgY29uc3QgcGVla2FibGUgPSBpdFBlZWthYmxlKGlucHV0KVxuXG4gICAgLyoqIEB0eXBlIHthbnl9IHZhbHVlICoqL1xuICAgIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHBlZWthYmxlLnBlZWsoKVxuXG4gICAgaWYgKGRvbmUpIHtcbiAgICAgIC8vIG1ha2Ugc3VyZSBlbXB0eSBpdGVyYXRvcnMgcmVzdWx0IGluIGVtcHR5IGZpbGVzXG4gICAgICByZXR1cm4gaXRUb0Jsb2IocGVla2FibGUpXG4gICAgfVxuXG4gICAgcGVla2FibGUucHVzaCh2YWx1ZSlcblxuICAgIC8vIChBc3luYylJdGVyYWJsZTxOdW1iZXI+XG4gICAgaWYgKE51bWJlci5pc0ludGVnZXIodmFsdWUpKSB7XG4gICAgICByZXR1cm4gbmV3IEJsb2IoW1VpbnQ4QXJyYXkuZnJvbShhd2FpdCBhbGwocGVla2FibGUpKV0pXG4gICAgfVxuXG4gICAgLy8gKEFzeW5jKUl0ZXJhYmxlPEJ5dGVzfFN0cmluZz5cbiAgICBpZiAoaXNCeXRlcyh2YWx1ZSkgfHwgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyB8fCB2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgICAgcmV0dXJuIGl0VG9CbG9iKHBlZWthYmxlKVxuICAgIH1cbiAgfVxuXG4gIHRocm93IGVyckNvZGUobmV3IEVycm9yKGBVbmV4cGVjdGVkIGlucHV0OiAke2lucHV0fWApLCAnRVJSX1VORVhQRUNURURfSU5QVVQnKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7QXN5bmNJdGVyYWJsZTxCbG9iUGFydD58SXRlcmFibGU8QmxvYlBhcnQ+fSBzdHJlYW1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gaXRUb0Jsb2IgKHN0cmVhbSkge1xuICBjb25zdCBwYXJ0cyA9IFtdXG5cbiAgZm9yIGF3YWl0IChjb25zdCBjaHVuayBvZiBzdHJlYW0pIHtcbiAgICBwYXJ0cy5wdXNoKGNodW5rKVxuICB9XG5cbiAgcmV0dXJuIG5ldyBCbG9iKHBhcnRzKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-content.js":
/*!*********************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-content.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseContent: () => (/* binding */ normaliseContent)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(ssr)/./node_modules/err-code/index.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/from-string.js\");\n/* harmony import */ var browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! browser-readablestream-to-it */ \"(ssr)/./node_modules/browser-readablestream-to-it/dist/src/index.js\");\n/* harmony import */ var blob_to_it__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! blob-to-it */ \"(ssr)/./node_modules/blob-to-it/dist/src/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! it-peekable */ \"(ssr)/./node_modules/it-peekable/dist/src/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! it-all */ \"(ssr)/./node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var it_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! it-map */ \"(ssr)/./node_modules/it-map/dist/src/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/utils.js\");\n\n\n\n\n\n\n\n\n\n/**\n * @template T\n * @param {T} thing\n */\nasync function * toAsyncIterable (thing) {\n  yield thing\n}\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nasync function normaliseContent (input) {\n  // Bytes | String\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isBytes)(input)) {\n    return toAsyncIterable(toBytes(input))\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()))\n  }\n\n  // Blob\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isBlob)(input)) {\n    return (0,blob_to_it__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(input)\n  }\n\n  // Browser stream\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isReadableStream)(input)) {\n    input = (0,browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return toAsyncIterable(new Uint8Array(0))\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await (0,it_all__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(peekable)))\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isBytes)(value) || typeof value === 'string' || value instanceof String) {\n      return (0,it_map__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(peekable, toBytes)\n    }\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_1__.fromString)(chunk.toString())\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY29udGVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEI7QUFDOEM7QUFDaEI7QUFDM0I7QUFDRztBQUNaO0FBQ0E7QUFLTDs7QUFFbkI7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVywrQ0FBK0M7QUFDMUQ7QUFDTztBQUNQO0FBQ0EsTUFBTSxrREFBTztBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSxpREFBTTtBQUNaLFdBQVcsc0RBQVE7QUFDbkI7O0FBRUE7QUFDQSxNQUFNLDJEQUFnQjtBQUN0QixZQUFZLHdFQUFpQjtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCLHFCQUFxQix1REFBVTs7QUFFL0IsZUFBZSxLQUFLO0FBQ3BCLFlBQVksY0FBYzs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLG1EQUFtRCxrREFBRztBQUN0RDs7QUFFQTtBQUNBLFFBQVEsa0RBQU87QUFDZixhQUFhLGtEQUFHO0FBQ2hCO0FBQ0E7O0FBRUEsUUFBUSxxQ0FBTyxnQ0FBZ0MsTUFBTTtBQUNyRDs7QUFFQTtBQUNBLFdBQVcsd0ZBQXdGO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxtRUFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY29udGVudC5qcz81N2FkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlcnJDb2RlIGZyb20gJ2Vyci1jb2RlJ1xuaW1wb3J0IHsgZnJvbVN0cmluZyBhcyB1aW50OEFycmF5RnJvbVN0cmluZyB9IGZyb20gJ3VpbnQ4YXJyYXlzL2Zyb20tc3RyaW5nJ1xuaW1wb3J0IGJyb3dzZXJTdHJlYW1Ub0l0IGZyb20gJ2Jyb3dzZXItcmVhZGFibGVzdHJlYW0tdG8taXQnXG5pbXBvcnQgYmxvYlRvSXQgZnJvbSAnYmxvYi10by1pdCdcbmltcG9ydCBpdFBlZWthYmxlIGZyb20gJ2l0LXBlZWthYmxlJ1xuaW1wb3J0IGFsbCBmcm9tICdpdC1hbGwnXG5pbXBvcnQgbWFwIGZyb20gJ2l0LW1hcCdcbmltcG9ydCB7XG4gIGlzQnl0ZXMsXG4gIGlzUmVhZGFibGVTdHJlYW0sXG4gIGlzQmxvYlxufSBmcm9tICcuL3V0aWxzLmpzJ1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IHRoaW5nXG4gKi9cbmFzeW5jIGZ1bmN0aW9uICogdG9Bc3luY0l0ZXJhYmxlICh0aGluZykge1xuICB5aWVsZCB0aGluZ1xufVxuXG4vKipcbiAqIEBwYXJhbSB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuVG9Db250ZW50fSBpbnB1dFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbm9ybWFsaXNlQ29udGVudCAoaW5wdXQpIHtcbiAgLy8gQnl0ZXMgfCBTdHJpbmdcbiAgaWYgKGlzQnl0ZXMoaW5wdXQpKSB7XG4gICAgcmV0dXJuIHRvQXN5bmNJdGVyYWJsZSh0b0J5dGVzKGlucHV0KSlcbiAgfVxuXG4gIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnIHx8IGlucHV0IGluc3RhbmNlb2YgU3RyaW5nKSB7XG4gICAgcmV0dXJuIHRvQXN5bmNJdGVyYWJsZSh0b0J5dGVzKGlucHV0LnRvU3RyaW5nKCkpKVxuICB9XG5cbiAgLy8gQmxvYlxuICBpZiAoaXNCbG9iKGlucHV0KSkge1xuICAgIHJldHVybiBibG9iVG9JdChpbnB1dClcbiAgfVxuXG4gIC8vIEJyb3dzZXIgc3RyZWFtXG4gIGlmIChpc1JlYWRhYmxlU3RyZWFtKGlucHV0KSkge1xuICAgIGlucHV0ID0gYnJvd3NlclN0cmVhbVRvSXQoaW5wdXQpXG4gIH1cblxuICAvLyAoQXN5bmMpSXRlcmF0b3I8Pz5cbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBpbnB1dCB8fCBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiBpbnB1dCkge1xuICAgIC8qKiBAdHlwZSB7YW55fSBwZWVrYWJsZSAqL1xuICAgIGNvbnN0IHBlZWthYmxlID0gaXRQZWVrYWJsZShpbnB1dClcblxuICAgIC8qKiBAdHlwZSB7YW55fSB2YWx1ZSAqL1xuICAgIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHBlZWthYmxlLnBlZWsoKVxuXG4gICAgaWYgKGRvbmUpIHtcbiAgICAgIC8vIG1ha2Ugc3VyZSBlbXB0eSBpdGVyYXRvcnMgcmVzdWx0IGluIGVtcHR5IGZpbGVzXG4gICAgICByZXR1cm4gdG9Bc3luY0l0ZXJhYmxlKG5ldyBVaW50OEFycmF5KDApKVxuICAgIH1cblxuICAgIHBlZWthYmxlLnB1c2godmFsdWUpXG5cbiAgICAvLyAoQXN5bmMpSXRlcmFibGU8TnVtYmVyPlxuICAgIGlmIChOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIHRvQXN5bmNJdGVyYWJsZShVaW50OEFycmF5LmZyb20oYXdhaXQgYWxsKHBlZWthYmxlKSkpXG4gICAgfVxuXG4gICAgLy8gKEFzeW5jKUl0ZXJhYmxlPEJ5dGVzfFN0cmluZz5cbiAgICBpZiAoaXNCeXRlcyh2YWx1ZSkgfHwgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyB8fCB2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgICAgcmV0dXJuIG1hcChwZWVrYWJsZSwgdG9CeXRlcylcbiAgICB9XG4gIH1cblxuICB0aHJvdyBlcnJDb2RlKG5ldyBFcnJvcihgVW5leHBlY3RlZCBpbnB1dDogJHtpbnB1dH1gKSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FycmF5QnVmZmVyIHwgQXJyYXlCdWZmZXJWaWV3IHwgc3RyaW5nIHwgSW5zdGFuY2VUeXBlPHR5cGVvZiB3aW5kb3cuU3RyaW5nPiB8IG51bWJlcltdfSBjaHVua1xuICovXG5mdW5jdGlvbiB0b0J5dGVzIChjaHVuaykge1xuICBpZiAoY2h1bmsgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgcmV0dXJuIGNodW5rXG4gIH1cblxuICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KGNodW5rKSkge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShjaHVuay5idWZmZXIsIGNodW5rLmJ5dGVPZmZzZXQsIGNodW5rLmJ5dGVMZW5ndGgpXG4gIH1cblxuICBpZiAoY2h1bmsgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShjaHVuaylcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KGNodW5rKSkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oY2h1bmspXG4gIH1cblxuICByZXR1cm4gdWludDhBcnJheUZyb21TdHJpbmcoY2h1bmsudG9TdHJpbmcoKSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-content.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js":
/*!************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseInput: () => (/* binding */ normaliseInput)\n/* harmony export */ });\n/* harmony import */ var _normalise_content_browser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalise-content.browser.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js\");\n/* harmony import */ var _normalise_candidate_multiple_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalise-candidate-multiple.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js\");\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').BrowserImportCandidate} BrowserImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<BrowserImportCandidate, void, undefined>}\n */\nfunction normaliseInput (input) {\n  // @ts-expect-error browser normaliseContent returns a Blob not an AsyncIterable<Uint8Array>\n  return (0,_normalise_candidate_multiple_js__WEBPACK_IMPORTED_MODULE_1__.normaliseCandidateMultiple)(input, _normalise_content_browser_js__WEBPACK_IMPORTED_MODULE_0__.normaliseContent, true)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtbXVsdGlwbGUuYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUU7QUFDYTs7QUFFOUU7QUFDQSxhQUFhLDJEQUEyRDtBQUN4RSxhQUFhLDREQUE0RDtBQUN6RTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQ0FBa0M7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsU0FBUyw0RkFBMEIsUUFBUSwyRUFBZ0I7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtbXVsdGlwbGUuYnJvd3Nlci5qcz8xNmI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vcm1hbGlzZUNvbnRlbnQgfSBmcm9tICcuL25vcm1hbGlzZS1jb250ZW50LmJyb3dzZXIuanMnXG5pbXBvcnQgeyBub3JtYWxpc2VDYW5kaWRhdGVNdWx0aXBsZSB9IGZyb20gJy4vbm9ybWFsaXNlLWNhbmRpZGF0ZS1tdWx0aXBsZS5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBJbXBvcnRDYW5kaWRhdGVTdHJlYW1cbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5Ccm93c2VySW1wb3J0Q2FuZGlkYXRlfSBCcm93c2VySW1wb3J0Q2FuZGlkYXRlXG4gKi9cblxuLyoqXG4gKiBUcmFuc2Zvcm1zIGFueSBvZiB0aGUgYGlwZnMuYWRkQWxsYCBpbnB1dCB0eXBlcyBpbnRvXG4gKlxuICogYGBgXG4gKiBBc3luY0l0ZXJhYmxlPHsgcGF0aCwgbW9kZSwgbXRpbWUsIGNvbnRlbnQ6IEJsb2IgfT5cbiAqIGBgYFxuICpcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vaXBmcy9qcy1pcGZzL2Jsb2IvbWFzdGVyL2RvY3MvY29yZS1hcGkvRklMRVMubWQjaXBmc2FkZGRhdGEtb3B0aW9uc1xuICpcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBpbnB1dFxuICogQHJldHVybnMge0FzeW5jR2VuZXJhdG9yPEJyb3dzZXJJbXBvcnRDYW5kaWRhdGUsIHZvaWQsIHVuZGVmaW5lZD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpc2VJbnB1dCAoaW5wdXQpIHtcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciBicm93c2VyIG5vcm1hbGlzZUNvbnRlbnQgcmV0dXJucyBhIEJsb2Igbm90IGFuIEFzeW5jSXRlcmFibGU8VWludDhBcnJheT5cbiAgcmV0dXJuIG5vcm1hbGlzZUNhbmRpZGF0ZU11bHRpcGxlKGlucHV0LCBub3JtYWxpc2VDb250ZW50LCB0cnVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js":
/*!****************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseInput: () => (/* binding */ normaliseInput)\n/* harmony export */ });\n/* harmony import */ var _normalise_content_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalise-content.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-content.js\");\n/* harmony import */ var _normalise_candidate_multiple_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalise-candidate-multiple.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js\");\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n */\nfunction normaliseInput (input) {\n  return (0,_normalise_candidate_multiple_js__WEBPACK_IMPORTED_MODULE_1__.normaliseCandidateMultiple)(input, _normalise_content_js__WEBPACK_IMPORTED_MODULE_0__.normaliseContent)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtbXVsdGlwbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlEO0FBQ3FCOztBQUU5RTtBQUNBLGFBQWEsMkRBQTJEO0FBQ3hFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUF1RDtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdUJBQXVCO0FBQ2xDO0FBQ087QUFDUCxTQUFTLDRGQUEwQixRQUFRLG1FQUFnQjtBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvc3JjL2ZpbGVzL25vcm1hbGlzZS1pbnB1dC1tdWx0aXBsZS5qcz8yZjRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vcm1hbGlzZUNvbnRlbnQgfSBmcm9tICcuL25vcm1hbGlzZS1jb250ZW50LmpzJ1xuaW1wb3J0IHsgbm9ybWFsaXNlQ2FuZGlkYXRlTXVsdGlwbGUgfSBmcm9tICcuL25vcm1hbGlzZS1jYW5kaWRhdGUtbXVsdGlwbGUuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkltcG9ydENhbmRpZGF0ZVN0cmVhbX0gSW1wb3J0Q2FuZGlkYXRlU3RyZWFtXG4gKi9cblxuLyoqXG4gKiBUcmFuc2Zvcm1zIGFueSBvZiB0aGUgYGlwZnMuYWRkQWxsYCBpbnB1dCB0eXBlcyBpbnRvXG4gKlxuICogYGBgXG4gKiBBc3luY0l0ZXJhYmxlPHsgcGF0aCwgbW9kZSwgbXRpbWUsIGNvbnRlbnQ6IEFzeW5jSXRlcmFibGU8VWludDhBcnJheT4gfT5cbiAqIGBgYFxuICpcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vaXBmcy9qcy1pcGZzL2Jsb2IvbWFzdGVyL2RvY3MvY29yZS1hcGkvRklMRVMubWQjaXBmc2FkZGRhdGEtb3B0aW9uc1xuICpcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBpbnB1dFxuICovXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXNlSW5wdXQgKGlucHV0KSB7XG4gIHJldHVybiBub3JtYWxpc2VDYW5kaWRhdGVNdWx0aXBsZShpbnB1dCwgbm9ybWFsaXNlQ29udGVudClcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-input-single.js":
/*!**************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-input-single.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseInput: () => (/* binding */ normaliseInput)\n/* harmony export */ });\n/* harmony import */ var _normalise_content_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalise-content.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-content.js\");\n/* harmony import */ var _normalise_candidate_single_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalise-candidate-single.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js\");\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nfunction normaliseInput (input) {\n  return (0,_normalise_candidate_single_js__WEBPACK_IMPORTED_MODULE_1__.normaliseCandidateSingle)(input, _normalise_content_js__WEBPACK_IMPORTED_MODULE_0__.normaliseContent)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtc2luZ2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5RDtBQUNpQjs7QUFFMUU7QUFDQSxhQUFhLHFEQUFxRDtBQUNsRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1REFBdUQ7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNPO0FBQ1AsU0FBUyx3RkFBd0IsUUFBUSxtRUFBZ0I7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtc2luZ2xlLmpzPzUyNzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm9ybWFsaXNlQ29udGVudCB9IGZyb20gJy4vbm9ybWFsaXNlLWNvbnRlbnQuanMnXG5pbXBvcnQgeyBub3JtYWxpc2VDYW5kaWRhdGVTaW5nbGUgfSBmcm9tICcuL25vcm1hbGlzZS1jYW5kaWRhdGUtc2luZ2xlLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5JbXBvcnRDYW5kaWRhdGV9IEltcG9ydENhbmRpZGF0ZVxuICovXG5cbi8qKlxuICogVHJhbnNmb3JtcyBhbnkgb2YgdGhlIGBpcGZzLmFkZGAgaW5wdXQgdHlwZXMgaW50b1xuICpcbiAqIGBgYFxuICogQXN5bmNJdGVyYWJsZTx7IHBhdGgsIG1vZGUsIG10aW1lLCBjb250ZW50OiBBc3luY0l0ZXJhYmxlPFVpbnQ4QXJyYXk+IH0+XG4gKiBgYGBcbiAqXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2lwZnMvanMtaXBmcy9ibG9iL21hc3Rlci9kb2NzL2NvcmUtYXBpL0ZJTEVTLm1kI2lwZnNhZGRkYXRhLW9wdGlvbnNcbiAqXG4gKiBAcGFyYW0ge0ltcG9ydENhbmRpZGF0ZX0gaW5wdXRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGlzZUlucHV0IChpbnB1dCkge1xuICByZXR1cm4gbm9ybWFsaXNlQ2FuZGlkYXRlU2luZ2xlKGlucHV0LCBub3JtYWxpc2VDb250ZW50KVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-input-single.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/files/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBlob: () => (/* binding */ isBlob),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   isFileObject: () => (/* binding */ isFileObject),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream)\n/* harmony export */ });\n/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nfunction isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is globalThis.Blob}\n */\nfunction isBlob (obj) {\n  return obj.constructor &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nfunction isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvZmlsZXMvdXRpbHMuanM/MzkyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtvYmogaXMgQXJyYXlCdWZmZXJWaWV3fEFycmF5QnVmZmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCeXRlcyAob2JqKSB7XG4gIHJldHVybiBBcnJheUJ1ZmZlci5pc1ZpZXcob2JqKSB8fCBvYmogaW5zdGFuY2VvZiBBcnJheUJ1ZmZlclxufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtvYmogaXMgZ2xvYmFsVGhpcy5CbG9ifVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCbG9iIChvYmopIHtcbiAgcmV0dXJuIG9iai5jb25zdHJ1Y3RvciAmJlxuICAgIChvYmouY29uc3RydWN0b3IubmFtZSA9PT0gJ0Jsb2InIHx8IG9iai5jb25zdHJ1Y3Rvci5uYW1lID09PSAnRmlsZScpICYmXG4gICAgdHlwZW9mIG9iai5zdHJlYW0gPT09ICdmdW5jdGlvbidcbn1cblxuLyoqXG4gKiBBbiBvYmplY3Qgd2l0aCBhIHBhdGggb3IgY29udGVudCBwcm9wZXJ0eVxuICpcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtvYmogaXMgaW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNGaWxlT2JqZWN0IChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIChvYmoucGF0aCB8fCBvYmouY29udGVudClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHt2YWx1ZSBpcyBSZWFkYWJsZVN0cmVhbX1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzUmVhZGFibGVTdHJlYW0gPSAodmFsdWUpID0+XG4gIHZhbHVlICYmIHR5cGVvZiB2YWx1ZS5nZXRSZWFkZXIgPT09ICdmdW5jdGlvbidcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/files/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/mode-to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/mode-to-string.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   modeToString: () => (/* binding */ modeToString)\n/* harmony export */ });\n\n/**\n * @param {number | string | undefined} mode\n */\nfunction modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tb2RlLXRvLXN0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUNBO0FBQ0EsV0FBVyw2QkFBNkI7QUFDeEM7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvc3JjL21vZGUtdG8tc3RyaW5nLmpzPzhlYmUiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyIHwgc3RyaW5nIHwgdW5kZWZpbmVkfSBtb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtb2RlVG9TdHJpbmcgKG1vZGUpIHtcbiAgaWYgKG1vZGUgPT0gbnVsbCkge1xuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxuXG4gIGlmICh0eXBlb2YgbW9kZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbW9kZVxuICB9XG5cbiAgcmV0dXJuIG1vZGUudG9TdHJpbmcoOCkucGFkU3RhcnQoNCwgJzAnKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/mode-to-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/multibases.js":
/*!********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multibases.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multibases: () => (/* binding */ Multibases)\n/* harmony export */ });\n/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadBaseFn}\n */\nconst LOAD_BASE = (name) => Promise.reject(new Error(`No base found for \"${name}\"`))\n\nclass Multibases {\n  /**\n   * @param {object} options\n   * @param {LoadBaseFn} [options.loadBase]\n   * @param {MultibaseCodec[]} options.bases\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByPrefix = {}\n\n    this._loadBase = options.loadBase || LOAD_BASE\n\n    // Enable all supplied codecs\n    for (const base of options.bases) {\n      this.addBase(base)\n    }\n  }\n\n  /**\n   * Add support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  addBase (base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${base.name}\"`)\n    }\n\n    this._basesByName[base.name] = base\n    this._basesByPrefix[base.prefix] = base\n  }\n\n  /**\n   * Remove support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  removeBase (base) {\n    delete this._basesByName[base.name]\n    delete this._basesByPrefix[base.prefix]\n  }\n\n  /**\n   * @param {string} nameOrPrefix\n   */\n  async getBase (nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix]\n    }\n\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const base = await this._loadBase(nameOrPrefix)\n\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base)\n    }\n\n    return base\n  }\n\n  listBases () {\n    return Object.values(this._basesByName)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWJhc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsNERBQTREO0FBQ3pFLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsa0RBQWtEO0FBQy9EOztBQUVBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsMkVBQTJFLEtBQUs7O0FBRXpFO0FBQ1A7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxZQUFZO0FBQ3pCLGFBQWEsa0JBQWtCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUNBQWlDO0FBQ2hEOztBQUVBO0FBQ0EsZUFBZSxpQ0FBaUM7QUFDaEQ7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsVUFBVTtBQUNuRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvbXVsdGliYXNlcy5qcz85YWM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2Jhc2VzL2ludGVyZmFjZScpLk11bHRpYmFzZUNvZGVjPGFueT59IE11bHRpYmFzZUNvZGVjXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL3R5cGVzJykuTG9hZEJhc2VGbn0gTG9hZEJhc2VGblxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkFib3J0T3B0aW9uc30gQWJvcnRPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAdHlwZSB7TG9hZEJhc2VGbn1cbiAqL1xuY29uc3QgTE9BRF9CQVNFID0gKG5hbWUpID0+IFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihgTm8gYmFzZSBmb3VuZCBmb3IgXCIke25hbWV9XCJgKSlcblxuZXhwb3J0IGNsYXNzIE11bHRpYmFzZXMge1xuICAvKipcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtMb2FkQmFzZUZufSBbb3B0aW9ucy5sb2FkQmFzZV1cbiAgICogQHBhcmFtIHtNdWx0aWJhc2VDb2RlY1tdfSBvcHRpb25zLmJhc2VzXG4gICAqL1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIC8vIE9iamVjdCB3aXRoIGN1cnJlbnQgbGlzdCBvZiBhY3RpdmUgcmVzb2x2ZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBNdWx0aWJhc2VDb2RlYz59fSAqL1xuICAgIHRoaXMuX2Jhc2VzQnlOYW1lID0ge31cblxuICAgIC8vIE9iamVjdCB3aXRoIGN1cnJlbnQgbGlzdCBvZiBhY3RpdmUgcmVzb2x2ZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBNdWx0aWJhc2VDb2RlYz59fSAqL1xuICAgIHRoaXMuX2Jhc2VzQnlQcmVmaXggPSB7fVxuXG4gICAgdGhpcy5fbG9hZEJhc2UgPSBvcHRpb25zLmxvYWRCYXNlIHx8IExPQURfQkFTRVxuXG4gICAgLy8gRW5hYmxlIGFsbCBzdXBwbGllZCBjb2RlY3NcbiAgICBmb3IgKGNvbnN0IGJhc2Ugb2Ygb3B0aW9ucy5iYXNlcykge1xuICAgICAgdGhpcy5hZGRCYXNlKGJhc2UpXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBzdXBwb3J0IGZvciBhIG11bHRpYmFzZSBjb2RlY1xuICAgKlxuICAgKiBAcGFyYW0ge011bHRpYmFzZUNvZGVjfSBiYXNlXG4gICAqL1xuICBhZGRCYXNlIChiYXNlKSB7XG4gICAgaWYgKHRoaXMuX2Jhc2VzQnlOYW1lW2Jhc2UubmFtZV0gfHwgdGhpcy5fYmFzZXNCeVByZWZpeFtiYXNlLnByZWZpeF0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ29kZWMgYWxyZWFkeSBleGlzdHMgZm9yIGNvZGVjIFwiJHtiYXNlLm5hbWV9XCJgKVxuICAgIH1cblxuICAgIHRoaXMuX2Jhc2VzQnlOYW1lW2Jhc2UubmFtZV0gPSBiYXNlXG4gICAgdGhpcy5fYmFzZXNCeVByZWZpeFtiYXNlLnByZWZpeF0gPSBiYXNlXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHN1cHBvcnQgZm9yIGEgbXVsdGliYXNlIGNvZGVjXG4gICAqXG4gICAqIEBwYXJhbSB7TXVsdGliYXNlQ29kZWN9IGJhc2VcbiAgICovXG4gIHJlbW92ZUJhc2UgKGJhc2UpIHtcbiAgICBkZWxldGUgdGhpcy5fYmFzZXNCeU5hbWVbYmFzZS5uYW1lXVxuICAgIGRlbGV0ZSB0aGlzLl9iYXNlc0J5UHJlZml4W2Jhc2UucHJlZml4XVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lT3JQcmVmaXhcbiAgICovXG4gIGFzeW5jIGdldEJhc2UgKG5hbWVPclByZWZpeCkge1xuICAgIGlmICh0aGlzLl9iYXNlc0J5TmFtZVtuYW1lT3JQcmVmaXhdKSB7XG4gICAgICByZXR1cm4gdGhpcy5fYmFzZXNCeU5hbWVbbmFtZU9yUHJlZml4XVxuICAgIH1cblxuICAgIGlmICh0aGlzLl9iYXNlc0J5UHJlZml4W25hbWVPclByZWZpeF0pIHtcbiAgICAgIHJldHVybiB0aGlzLl9iYXNlc0J5UHJlZml4W25hbWVPclByZWZpeF1cbiAgICB9XG5cbiAgICAvLyBJZiBub3Qgc3VwcG9ydGVkLCBhdHRlbXB0IHRvIGR5bmFtaWNhbGx5IGxvYWQgdGhpcyBjb2RlY1xuICAgIGNvbnN0IGJhc2UgPSBhd2FpdCB0aGlzLl9sb2FkQmFzZShuYW1lT3JQcmVmaXgpXG5cbiAgICBpZiAodGhpcy5fYmFzZXNCeU5hbWVbYmFzZS5uYW1lXSA9PSBudWxsICYmIHRoaXMuX2Jhc2VzQnlQcmVmaXhbYmFzZS5wcmVmaXhdID09IG51bGwpIHtcbiAgICAgIHRoaXMuYWRkQmFzZShiYXNlKVxuICAgIH1cblxuICAgIHJldHVybiBiYXNlXG4gIH1cblxuICBsaXN0QmFzZXMgKCkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuX2Jhc2VzQnlOYW1lKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/multibases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/multicodecs.js":
/*!*********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multicodecs.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multicodecs: () => (/* binding */ Multicodecs)\n/* harmony export */ });\n/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadCodecFn}\n */\nconst LOAD_CODEC = (codeOrName) => Promise.reject(new Error(`No codec found for \"${codeOrName}\"`))\n\nclass Multicodecs {\n  /**\n   * @param {object} options\n   * @param {LoadCodecFn} [options.loadCodec]\n   * @param {BlockCodec[]} options.codecs\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, BlockCodec>}} */\n    this._codecsByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<number, BlockCodec>}} */\n    this._codecsByCode = {}\n\n    this._loadCodec = options.loadCodec || LOAD_CODEC\n\n    // Enable all supplied codecs\n    for (const codec of options.codecs) {\n      this.addCodec(codec)\n    }\n  }\n\n  /**\n   * Add support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  addCodec (codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${codec.name}\"`)\n    }\n\n    this._codecsByName[codec.name] = codec\n    this._codecsByCode[codec.code] = codec\n  }\n\n  /**\n   * Remove support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  removeCodec (codec) {\n    delete this._codecsByName[codec.name]\n    delete this._codecsByCode[codec.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getCodec (code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const codec = await this._loadCodec(code)\n\n    if (table[code] == null) {\n      this.addCodec(codec)\n    }\n\n    return codec\n  }\n\n  listCodecs () {\n    return Object.values(this._codecsByName)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWNvZGVjcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDhEQUE4RDtBQUMzRSxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLGtEQUFrRDtBQUMvRDs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBLG1GQUFtRixXQUFXOztBQUV2RjtBQUNQO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsYUFBYTtBQUMxQixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2QkFBNkI7QUFDNUM7O0FBRUE7QUFDQSxlQUFlLDZCQUE2QjtBQUM1Qzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsV0FBVztBQUN2RTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWNvZGVjcy5qcz9mNWQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NvZGVjcy9pbnRlcmZhY2UnKS5CbG9ja0NvZGVjPGFueSwgYW55Pn0gQmxvY2tDb2RlY1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi90eXBlcycpLkxvYWRDb2RlY0ZufSBMb2FkQ29kZWNGblxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkFib3J0T3B0aW9uc30gQWJvcnRPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAdHlwZSB7TG9hZENvZGVjRm59XG4gKi9cbmNvbnN0IExPQURfQ09ERUMgPSAoY29kZU9yTmFtZSkgPT4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKGBObyBjb2RlYyBmb3VuZCBmb3IgXCIke2NvZGVPck5hbWV9XCJgKSlcblxuZXhwb3J0IGNsYXNzIE11bHRpY29kZWNzIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7TG9hZENvZGVjRm59IFtvcHRpb25zLmxvYWRDb2RlY11cbiAgICogQHBhcmFtIHtCbG9ja0NvZGVjW119IG9wdGlvbnMuY29kZWNzXG4gICAqL1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIC8vIE9iamVjdCB3aXRoIGN1cnJlbnQgbGlzdCBvZiBhY3RpdmUgcmVzb2x2ZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBCbG9ja0NvZGVjPn19ICovXG4gICAgdGhpcy5fY29kZWNzQnlOYW1lID0ge31cblxuICAgIC8vIE9iamVjdCB3aXRoIGN1cnJlbnQgbGlzdCBvZiBhY3RpdmUgcmVzb2x2ZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8bnVtYmVyLCBCbG9ja0NvZGVjPn19ICovXG4gICAgdGhpcy5fY29kZWNzQnlDb2RlID0ge31cblxuICAgIHRoaXMuX2xvYWRDb2RlYyA9IG9wdGlvbnMubG9hZENvZGVjIHx8IExPQURfQ09ERUNcblxuICAgIC8vIEVuYWJsZSBhbGwgc3VwcGxpZWQgY29kZWNzXG4gICAgZm9yIChjb25zdCBjb2RlYyBvZiBvcHRpb25zLmNvZGVjcykge1xuICAgICAgdGhpcy5hZGRDb2RlYyhjb2RlYylcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQWRkIHN1cHBvcnQgZm9yIGEgYmxvY2sgY29kZWNcbiAgICpcbiAgICogQHBhcmFtIHtCbG9ja0NvZGVjfSBjb2RlY1xuICAgKi9cbiAgYWRkQ29kZWMgKGNvZGVjKSB7XG4gICAgaWYgKHRoaXMuX2NvZGVjc0J5TmFtZVtjb2RlYy5uYW1lXSB8fCB0aGlzLl9jb2RlY3NCeUNvZGVbY29kZWMuY29kZV0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgUmVzb2x2ZXIgYWxyZWFkeSBleGlzdHMgZm9yIGNvZGVjIFwiJHtjb2RlYy5uYW1lfVwiYClcbiAgICB9XG5cbiAgICB0aGlzLl9jb2RlY3NCeU5hbWVbY29kZWMubmFtZV0gPSBjb2RlY1xuICAgIHRoaXMuX2NvZGVjc0J5Q29kZVtjb2RlYy5jb2RlXSA9IGNvZGVjXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHN1cHBvcnQgZm9yIGEgYmxvY2sgY29kZWNcbiAgICpcbiAgICogQHBhcmFtIHtCbG9ja0NvZGVjfSBjb2RlY1xuICAgKi9cbiAgcmVtb3ZlQ29kZWMgKGNvZGVjKSB7XG4gICAgZGVsZXRlIHRoaXMuX2NvZGVjc0J5TmFtZVtjb2RlYy5uYW1lXVxuICAgIGRlbGV0ZSB0aGlzLl9jb2RlY3NCeUNvZGVbY29kZWMuY29kZV1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlciB8IHN0cmluZ30gY29kZVxuICAgKi9cbiAgYXN5bmMgZ2V0Q29kZWMgKGNvZGUpIHtcbiAgICBjb25zdCB0YWJsZSA9IHR5cGVvZiBjb2RlID09PSAnc3RyaW5nJyA/IHRoaXMuX2NvZGVjc0J5TmFtZSA6IHRoaXMuX2NvZGVjc0J5Q29kZVxuXG4gICAgaWYgKHRhYmxlW2NvZGVdKSB7XG4gICAgICByZXR1cm4gdGFibGVbY29kZV1cbiAgICB9XG5cbiAgICAvLyBJZiBub3Qgc3VwcG9ydGVkLCBhdHRlbXB0IHRvIGR5bmFtaWNhbGx5IGxvYWQgdGhpcyBjb2RlY1xuICAgIGNvbnN0IGNvZGVjID0gYXdhaXQgdGhpcy5fbG9hZENvZGVjKGNvZGUpXG5cbiAgICBpZiAodGFibGVbY29kZV0gPT0gbnVsbCkge1xuICAgICAgdGhpcy5hZGRDb2RlYyhjb2RlYylcbiAgICB9XG5cbiAgICByZXR1cm4gY29kZWNcbiAgfVxuXG4gIGxpc3RDb2RlY3MgKCkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuX2NvZGVjc0J5TmFtZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/multicodecs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/multihashes.js":
/*!*********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multihashes.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multihashes: () => (/* binding */ Multihashes)\n/* harmony export */ });\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadHasherFn}\n */\nconst LOAD_HASHER = (codeOrName) => Promise.reject(new Error(`No hasher found for \"${codeOrName}\"`))\n\nclass Multihashes {\n  /**\n   * @param {object} options\n   * @param {LoadHasherFn} [options.loadHasher]\n   * @param {MultihashHasher[]} options.hashers\n   */\n  constructor (options) {\n    // Object with current list of active hashers\n    /** @type {Record<string, MultihashHasher>}} */\n    this._hashersByName = {}\n\n    // Object with current list of active hashers\n    /** @type {Record<number, MultihashHasher>}} */\n    this._hashersByCode = {}\n\n    this._loadHasher = options.loadHasher || LOAD_HASHER\n\n    // Enable all supplied hashers\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher)\n    }\n  }\n\n  /**\n   * Add support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  addHasher (hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${hasher.name}\"`)\n    }\n\n    this._hashersByName[hasher.name] = hasher\n    this._hashersByCode[hasher.code] = hasher\n  }\n\n  /**\n   * Remove support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  removeHasher (hasher) {\n    delete this._hashersByName[hasher.name]\n    delete this._hashersByCode[hasher.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getHasher (code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this hasher\n    const hasher = await this._loadHasher(code)\n\n    if (table[code] == null) {\n      this.addHasher(hasher)\n    }\n\n    return hasher\n  }\n\n  listHashers () {\n    return Object.values(this._hashersByName)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWhhc2hlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLHlEQUF5RDtBQUN0RSxhQUFhLGdDQUFnQztBQUM3QyxhQUFhLGtEQUFrRDtBQUMvRDs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBLHFGQUFxRixXQUFXOztBQUV6RjtBQUNQO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsY0FBYztBQUMzQixhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQSxlQUFlLGtDQUFrQztBQUNqRDs7QUFFQTtBQUNBLGVBQWUsa0NBQWtDO0FBQ2pEOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFlBQVk7QUFDeEU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWhhc2hlcy5qcz82ZmM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2hhc2hlcy9pbnRlcmZhY2UnKS5NdWx0aWhhc2hIYXNoZXJ9IE11bHRpaGFzaEhhc2hlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi90eXBlcycpLkxvYWRIYXNoZXJGbn0gTG9hZEhhc2hlckZuXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuQWJvcnRPcHRpb25zfSBBYm9ydE9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEB0eXBlIHtMb2FkSGFzaGVyRm59XG4gKi9cbmNvbnN0IExPQURfSEFTSEVSID0gKGNvZGVPck5hbWUpID0+IFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihgTm8gaGFzaGVyIGZvdW5kIGZvciBcIiR7Y29kZU9yTmFtZX1cImApKVxuXG5leHBvcnQgY2xhc3MgTXVsdGloYXNoZXMge1xuICAvKipcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtMb2FkSGFzaGVyRm59IFtvcHRpb25zLmxvYWRIYXNoZXJdXG4gICAqIEBwYXJhbSB7TXVsdGloYXNoSGFzaGVyW119IG9wdGlvbnMuaGFzaGVyc1xuICAgKi9cbiAgY29uc3RydWN0b3IgKG9wdGlvbnMpIHtcbiAgICAvLyBPYmplY3Qgd2l0aCBjdXJyZW50IGxpc3Qgb2YgYWN0aXZlIGhhc2hlcnNcbiAgICAvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIE11bHRpaGFzaEhhc2hlcj59fSAqL1xuICAgIHRoaXMuX2hhc2hlcnNCeU5hbWUgPSB7fVxuXG4gICAgLy8gT2JqZWN0IHdpdGggY3VycmVudCBsaXN0IG9mIGFjdGl2ZSBoYXNoZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8bnVtYmVyLCBNdWx0aWhhc2hIYXNoZXI+fX0gKi9cbiAgICB0aGlzLl9oYXNoZXJzQnlDb2RlID0ge31cblxuICAgIHRoaXMuX2xvYWRIYXNoZXIgPSBvcHRpb25zLmxvYWRIYXNoZXIgfHwgTE9BRF9IQVNIRVJcblxuICAgIC8vIEVuYWJsZSBhbGwgc3VwcGxpZWQgaGFzaGVyc1xuICAgIGZvciAoY29uc3QgaGFzaGVyIG9mIG9wdGlvbnMuaGFzaGVycykge1xuICAgICAgdGhpcy5hZGRIYXNoZXIoaGFzaGVyKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgc3VwcG9ydCBmb3IgYSBtdWx0aWJhc2UgaGFzaGVyXG4gICAqXG4gICAqIEBwYXJhbSB7TXVsdGloYXNoSGFzaGVyfSBoYXNoZXJcbiAgICovXG4gIGFkZEhhc2hlciAoaGFzaGVyKSB7XG4gICAgaWYgKHRoaXMuX2hhc2hlcnNCeU5hbWVbaGFzaGVyLm5hbWVdIHx8IHRoaXMuX2hhc2hlcnNCeUNvZGVbaGFzaGVyLmNvZGVdKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlc29sdmVyIGFscmVhZHkgZXhpc3RzIGZvciBjb2RlYyBcIiR7aGFzaGVyLm5hbWV9XCJgKVxuICAgIH1cblxuICAgIHRoaXMuX2hhc2hlcnNCeU5hbWVbaGFzaGVyLm5hbWVdID0gaGFzaGVyXG4gICAgdGhpcy5faGFzaGVyc0J5Q29kZVtoYXNoZXIuY29kZV0gPSBoYXNoZXJcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgc3VwcG9ydCBmb3IgYSBtdWx0aWJhc2UgaGFzaGVyXG4gICAqXG4gICAqIEBwYXJhbSB7TXVsdGloYXNoSGFzaGVyfSBoYXNoZXJcbiAgICovXG4gIHJlbW92ZUhhc2hlciAoaGFzaGVyKSB7XG4gICAgZGVsZXRlIHRoaXMuX2hhc2hlcnNCeU5hbWVbaGFzaGVyLm5hbWVdXG4gICAgZGVsZXRlIHRoaXMuX2hhc2hlcnNCeUNvZGVbaGFzaGVyLmNvZGVdXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXIgfCBzdHJpbmd9IGNvZGVcbiAgICovXG4gIGFzeW5jIGdldEhhc2hlciAoY29kZSkge1xuICAgIGNvbnN0IHRhYmxlID0gdHlwZW9mIGNvZGUgPT09ICdzdHJpbmcnID8gdGhpcy5faGFzaGVyc0J5TmFtZSA6IHRoaXMuX2hhc2hlcnNCeUNvZGVcblxuICAgIGlmICh0YWJsZVtjb2RlXSkge1xuICAgICAgcmV0dXJuIHRhYmxlW2NvZGVdXG4gICAgfVxuXG4gICAgLy8gSWYgbm90IHN1cHBvcnRlZCwgYXR0ZW1wdCB0byBkeW5hbWljYWxseSBsb2FkIHRoaXMgaGFzaGVyXG4gICAgY29uc3QgaGFzaGVyID0gYXdhaXQgdGhpcy5fbG9hZEhhc2hlcihjb2RlKVxuXG4gICAgaWYgKHRhYmxlW2NvZGVdID09IG51bGwpIHtcbiAgICAgIHRoaXMuYWRkSGFzaGVyKGhhc2hlcilcbiAgICB9XG5cbiAgICByZXR1cm4gaGFzaGVyXG4gIH1cblxuICBsaXN0SGFzaGVycyAoKSB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcy5faGFzaGVyc0J5TmFtZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/multihashes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/multipart-request.browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multipart-request.browser.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartRequest: () => (/* binding */ multipartRequest)\n/* harmony export */ });\n/* harmony import */ var _files_normalise_input_multiple_browser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./files/normalise-input-multiple.browser.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js\");\n/* harmony import */ var _mode_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mode-to-string.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/mode-to-string.js\");\n\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nasync function multipartRequest (source, abortController, headers = {}) {\n  const parts = []\n  const formData = new FormData()\n  let index = 0\n  let total = 0\n\n  for await (const { content, path, mode, mtime } of (0,_files_normalise_input_multiple_browser_js__WEBPACK_IMPORTED_MODULE_0__.normaliseInput)(source)) {\n    let fileSuffix = ''\n    const type = content ? 'file' : 'dir'\n\n    if (index > 0) {\n      fileSuffix = `-${index}`\n    }\n\n    let fieldName = type + fileSuffix\n    const qs = []\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${(0,_mode_to_string_js__WEBPACK_IMPORTED_MODULE_1__.modeToString)(mode)}`)\n    }\n\n    if ((mtime) != null) {\n      const { secs, nsecs } = (mtime)\n\n      qs.push(`mtime=${secs}`)\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`)\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined)\n      const end = total + content.size\n      parts.push({ name: path, start: total, end })\n      total = end\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\n    } else {\n      throw new Error('path or content or both must be set')\n    }\n\n    index++\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aXBhcnQtcmVxdWVzdC5icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTtBQUNBO0FBQzRFO0FBQzFCOztBQUVsRDtBQUNBLGFBQWEsMkRBQTJEO0FBQ3hFOztBQUVBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxnQ0FBZ0M7QUFDM0M7QUFDTyxzRUFBc0U7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLDZCQUE2QixHQUFHLDBGQUFjO0FBQ25FO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUIsTUFBTTtBQUM3Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLGdFQUFZLE9BQU87QUFDekM7O0FBRUE7QUFDQSxjQUFjLGNBQWM7O0FBRTVCLHVCQUF1QixLQUFLOztBQUU1QjtBQUNBLCtCQUErQixNQUFNO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsVUFBVSxHQUFHLGFBQWE7QUFDL0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtCQUErQjtBQUNsRDtBQUNBLE1BQU07QUFDTix5RUFBeUUsaUNBQWlDO0FBQzFHLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aXBhcnQtcmVxdWVzdC5icm93c2VyLmpzPzgwNGMiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBJbXBvcnQgYnJvd3NlciB2ZXJzaW9uIG90aGVyd2lzZSBlbGVjdHJvbi1yZW5kZXJlciB3aWxsIGVuZCB1cCB3aXRoIG5vZGVcbi8vIHZlcnNpb24gYW5kIGZhaWwuXG5pbXBvcnQgeyBub3JtYWxpc2VJbnB1dCB9IGZyb20gJy4vZmlsZXMvbm9ybWFsaXNlLWlucHV0LW11bHRpcGxlLmJyb3dzZXIuanMnXG5pbXBvcnQgeyBtb2RlVG9TdHJpbmcgfSBmcm9tICcuL21vZGUtdG8tc3RyaW5nLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5JbXBvcnRDYW5kaWRhdGVTdHJlYW19IEltcG9ydENhbmRpZGF0ZVN0cmVhbVxuICovXG5cbi8qKlxuICogQHBhcmFtIHtJbXBvcnRDYW5kaWRhdGVTdHJlYW19IHNvdXJjZVxuICogQHBhcmFtIHtBYm9ydENvbnRyb2xsZXJ9IGFib3J0Q29udHJvbGxlclxuICogQHBhcmFtIHtIZWFkZXJzfFJlY29yZDxzdHJpbmcsIHN0cmluZz59IFtoZWFkZXJzXVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbXVsdGlwYXJ0UmVxdWVzdCAoc291cmNlLCBhYm9ydENvbnRyb2xsZXIsIGhlYWRlcnMgPSB7fSkge1xuICBjb25zdCBwYXJ0cyA9IFtdXG4gIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKClcbiAgbGV0IGluZGV4ID0gMFxuICBsZXQgdG90YWwgPSAwXG5cbiAgZm9yIGF3YWl0IChjb25zdCB7IGNvbnRlbnQsIHBhdGgsIG1vZGUsIG10aW1lIH0gb2Ygbm9ybWFsaXNlSW5wdXQoc291cmNlKSkge1xuICAgIGxldCBmaWxlU3VmZml4ID0gJydcbiAgICBjb25zdCB0eXBlID0gY29udGVudCA/ICdmaWxlJyA6ICdkaXInXG5cbiAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICBmaWxlU3VmZml4ID0gYC0ke2luZGV4fWBcbiAgICB9XG5cbiAgICBsZXQgZmllbGROYW1lID0gdHlwZSArIGZpbGVTdWZmaXhcbiAgICBjb25zdCBxcyA9IFtdXG5cbiAgICBpZiAobW9kZSAhPT0gbnVsbCAmJiBtb2RlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHFzLnB1c2goYG1vZGU9JHttb2RlVG9TdHJpbmcobW9kZSl9YClcbiAgICB9XG5cbiAgICBpZiAoKG10aW1lKSAhPSBudWxsKSB7XG4gICAgICBjb25zdCB7IHNlY3MsIG5zZWNzIH0gPSAobXRpbWUpXG5cbiAgICAgIHFzLnB1c2goYG10aW1lPSR7c2Vjc31gKVxuXG4gICAgICBpZiAobnNlY3MgIT0gbnVsbCkge1xuICAgICAgICBxcy5wdXNoKGBtdGltZS1uc2Vjcz0ke25zZWNzfWApXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHFzLmxlbmd0aCkge1xuICAgICAgZmllbGROYW1lID0gYCR7ZmllbGROYW1lfT8ke3FzLmpvaW4oJyYnKX1gXG4gICAgfVxuXG4gICAgaWYgKGNvbnRlbnQpIHtcbiAgICAgIGZvcm1EYXRhLnNldChmaWVsZE5hbWUsIGNvbnRlbnQsIHBhdGggIT0gbnVsbCA/IGVuY29kZVVSSUNvbXBvbmVudChwYXRoKSA6IHVuZGVmaW5lZClcbiAgICAgIGNvbnN0IGVuZCA9IHRvdGFsICsgY29udGVudC5zaXplXG4gICAgICBwYXJ0cy5wdXNoKHsgbmFtZTogcGF0aCwgc3RhcnQ6IHRvdGFsLCBlbmQgfSlcbiAgICAgIHRvdGFsID0gZW5kXG4gICAgfSBlbHNlIGlmIChwYXRoICE9IG51bGwpIHtcbiAgICAgIGZvcm1EYXRhLnNldChmaWVsZE5hbWUsIG5ldyBGaWxlKFsnJ10sIGVuY29kZVVSSUNvbXBvbmVudChwYXRoKSwgeyB0eXBlOiAnYXBwbGljYXRpb24veC1kaXJlY3RvcnknIH0pKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3BhdGggb3IgY29udGVudCBvciBib3RoIG11c3QgYmUgc2V0JylcbiAgICB9XG5cbiAgICBpbmRleCsrXG4gIH1cblxuICByZXR1cm4ge1xuICAgIHRvdGFsLFxuICAgIHBhcnRzLFxuICAgIGhlYWRlcnMsXG4gICAgYm9keTogZm9ybURhdGFcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/multipart-request.browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/multipart-request.js":
/*!***************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multipart-request.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartRequest: () => (/* binding */ multipartRequest)\n/* harmony export */ });\n/* harmony import */ var ipfs_utils_src_env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ipfs-utils/src/env.js */ \"(ssr)/./node_modules/ipfs-utils/src/env.js\");\n/* harmony import */ var _multipart_request_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multipart-request.node.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/multipart-request.node.js\");\n/* harmony import */ var _multipart_request_browser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multipart-request.browser.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/multipart-request.browser.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! nanoid */ \"(ssr)/./node_modules/ipfs-core-utils/node_modules/nanoid/index.js\");\n\n\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n * @param {string} [boundary]\n */\nasync function multipartRequest (source, abortController, headers = {}, boundary = `-----------------------------${(0,nanoid__WEBPACK_IMPORTED_MODULE_3__.nanoid)()}`) {\n  let req = _multipart_request_node_js__WEBPACK_IMPORTED_MODULE_1__.multipartRequest\n\n  // In electron-renderer we use native fetch and should encode body using native\n  // form data.\n  if (ipfs_utils_src_env_js__WEBPACK_IMPORTED_MODULE_0__.isElectronRenderer) {\n    // @ts-expect-error types are different\n    req = _multipart_request_browser_js__WEBPACK_IMPORTED_MODULE_2__.multipartRequest\n  }\n\n  return req(source, abortController, headers, boundary)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aXBhcnQtcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwRDtBQUM0QjtBQUNNO0FBQzdEOztBQUUvQjtBQUNBLGFBQWEsMkRBQTJEO0FBQ3hFOztBQUVBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxnQ0FBZ0M7QUFDM0MsV0FBVyxRQUFRO0FBQ25CO0FBQ08sc0VBQXNFLDZDQUE2Qyw4Q0FBTSxHQUFHO0FBQ25JLFlBQVksd0VBQW9COztBQUVoQztBQUNBO0FBQ0EsTUFBTSxxRUFBa0I7QUFDeEI7QUFDQSxVQUFVLDJFQUF1QjtBQUNqQzs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVuZGVyLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvbXVsdGlwYXJ0LXJlcXVlc3QuanM/OTRmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0VsZWN0cm9uUmVuZGVyZXIgfSBmcm9tICdpcGZzLXV0aWxzL3NyYy9lbnYuanMnXG5pbXBvcnQgeyBtdWx0aXBhcnRSZXF1ZXN0IGFzIG11bHRpcGFydFJlcXVlc3ROb2RlIH0gZnJvbSAnLi9tdWx0aXBhcnQtcmVxdWVzdC5ub2RlLmpzJ1xuaW1wb3J0IHsgbXVsdGlwYXJ0UmVxdWVzdCBhcyBtdWx0aXBhcnRSZXF1ZXN0QnJvd3NlciB9IGZyb20gJy4vbXVsdGlwYXJ0LXJlcXVlc3QuYnJvd3Nlci5qcydcbmltcG9ydCB7IG5hbm9pZCB9IGZyb20gJ25hbm9pZCdcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBJbXBvcnRDYW5kaWRhdGVTdHJlYW1cbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBzb3VyY2VcbiAqIEBwYXJhbSB7QWJvcnRDb250cm9sbGVyfSBhYm9ydENvbnRyb2xsZXJcbiAqIEBwYXJhbSB7SGVhZGVyc3xSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+fSBbaGVhZGVyc11cbiAqIEBwYXJhbSB7c3RyaW5nfSBbYm91bmRhcnldXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtdWx0aXBhcnRSZXF1ZXN0IChzb3VyY2UsIGFib3J0Q29udHJvbGxlciwgaGVhZGVycyA9IHt9LCBib3VuZGFyeSA9IGAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSR7bmFub2lkKCl9YCkge1xuICBsZXQgcmVxID0gbXVsdGlwYXJ0UmVxdWVzdE5vZGVcblxuICAvLyBJbiBlbGVjdHJvbi1yZW5kZXJlciB3ZSB1c2UgbmF0aXZlIGZldGNoIGFuZCBzaG91bGQgZW5jb2RlIGJvZHkgdXNpbmcgbmF0aXZlXG4gIC8vIGZvcm0gZGF0YS5cbiAgaWYgKGlzRWxlY3Ryb25SZW5kZXJlcikge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZXMgYXJlIGRpZmZlcmVudFxuICAgIHJlcSA9IG11bHRpcGFydFJlcXVlc3RCcm93c2VyXG4gIH1cblxuICByZXR1cm4gcmVxKHNvdXJjZSwgYWJvcnRDb250cm9sbGVyLCBoZWFkZXJzLCBib3VuZGFyeSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/multipart-request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/multipart-request.node.js":
/*!********************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multipart-request.node.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartRequest: () => (/* binding */ multipartRequest)\n/* harmony export */ });\n/* harmony import */ var _files_normalise_input_multiple_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./files/normalise-input-multiple.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! nanoid */ \"(ssr)/./node_modules/ipfs-core-utils/node_modules/nanoid/index.js\");\n/* harmony import */ var _mode_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mode-to-string.js */ \"(ssr)/./node_modules/ipfs-core-utils/src/mode-to-string.js\");\n/* harmony import */ var merge_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! merge-options */ \"(ssr)/./node_modules/merge-options/index.mjs\");\n/* harmony import */ var it_to_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-to-stream */ \"(ssr)/./node_modules/it-to-stream/src/index.js\");\n/* harmony import */ var _libp2p_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libp2p/logger */ \"(ssr)/./node_modules/@libp2p/logger/dist/src/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! it-peekable */ \"(ssr)/./node_modules/it-peekable/dist/src/index.js\");\n\n\n\n\n// @ts-expect-error no types\n\n\n\n\nconst merge = merge_options__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bind({ ignoreUndefined: true })\nconst log = (0,_libp2p_logger__WEBPACK_IMPORTED_MODULE_4__.logger)('ipfs:core-utils:multipart-request')\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n * @param {string} [boundary]\n */\nasync function multipartRequest (source, abortController, headers = {}, boundary = `-----------------------------${(0,nanoid__WEBPACK_IMPORTED_MODULE_6__.nanoid)()}`) {\n  /**\n   * @param {ImportCandidateStream} source\n   */\n  async function * streamFiles (source) {\n    try {\n      let index = 0\n\n      // @ts-expect-error\n      for await (const { content, path, mode, mtime } of source) {\n        let fileSuffix = ''\n        const type = content ? 'file' : 'dir'\n\n        if (index > 0) {\n          yield '\\r\\n'\n\n          fileSuffix = `-${index}`\n        }\n\n        let fieldName = type + fileSuffix\n        const qs = []\n\n        if (mode !== null && mode !== undefined) {\n          qs.push(`mode=${(0,_mode_to_string_js__WEBPACK_IMPORTED_MODULE_1__.modeToString)(mode)}`)\n        }\n\n        if (mtime != null) {\n          const { secs, nsecs } = mtime\n\n          qs.push(`mtime=${secs}`)\n\n          if (nsecs != null) {\n            qs.push(`mtime-nsecs=${nsecs}`)\n          }\n        }\n\n        if (qs.length) {\n          fieldName = `${fieldName}?${qs.join('&')}`\n        }\n\n        yield `--${boundary}\\r\\n`\n        yield `Content-Disposition: form-data; name=\"${fieldName}\"; filename=\"${encodeURIComponent(path || '')}\"\\r\\n`\n        yield `Content-Type: ${content ? 'application/octet-stream' : 'application/x-directory'}\\r\\n`\n        yield '\\r\\n'\n\n        if (content) {\n          yield * content\n        }\n\n        index++\n      }\n    } catch (/** @type {any} */ err) {\n      log(err)\n      // workaround for https://github.com/node-fetch/node-fetch/issues/753\n      abortController.abort()\n    } finally {\n      yield `\\r\\n--${boundary}--\\r\\n`\n    }\n  }\n\n  // peek at the first value in order to get the input stream moving\n  // and to validate its contents.\n  // We cannot do this in the `for await..of` in streamFiles due to\n  // https://github.com/node-fetch/node-fetch/issues/753\n  const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_5__[\"default\"])((0,_files_normalise_input_multiple_js__WEBPACK_IMPORTED_MODULE_0__.normaliseInput)(source))\n\n  /** @type {any} value **/\n  const { value, done } = await peekable.peek()\n\n  if (!done) {\n    peekable.push(value)\n  }\n\n  return {\n    parts: null,\n    total: -1,\n    headers: merge(headers, {\n      'Content-Type': `multipart/form-data; boundary=${boundary}`\n    }),\n    // @ts-expect-error normaliseInput returns unixfs importer import candidates\n    body: it_to_stream__WEBPACK_IMPORTED_MODULE_3__(streamFiles(peekable))\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aXBhcnQtcmVxdWVzdC5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW9FO0FBQ3JDO0FBQ21CO0FBQ2I7QUFDckM7QUFDbUM7QUFDSTtBQUNIOztBQUVwQyxjQUFjLHFEQUFTLFFBQVEsdUJBQXVCO0FBQ3RELFlBQVksc0RBQU07O0FBRWxCO0FBQ0EsYUFBYSwyREFBMkQ7QUFDeEU7O0FBRUE7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLGdDQUFnQztBQUMzQyxXQUFXLFFBQVE7QUFDbkI7QUFDTyxzRUFBc0UsNkNBQTZDLDhDQUFNLEdBQUc7QUFDbkk7QUFDQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5Qiw2QkFBNkI7QUFDdEQ7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDJCQUEyQixNQUFNO0FBQ2pDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEIsZ0VBQVksT0FBTztBQUM3Qzs7QUFFQTtBQUNBLGtCQUFrQixjQUFjOztBQUVoQywyQkFBMkIsS0FBSzs7QUFFaEM7QUFDQSxtQ0FBbUMsTUFBTTtBQUN6QztBQUNBOztBQUVBO0FBQ0EseUJBQXlCLFVBQVUsR0FBRyxhQUFhO0FBQ25EOztBQUVBLG1CQUFtQixTQUFTO0FBQzVCLCtDQUErQyxRQUFRLFVBQVUsR0FBRyxZQUFZLCtCQUErQjtBQUMvRywrQkFBK0IsaUVBQWlFO0FBQ2hHOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxrQkFBa0IsS0FBSztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04scUJBQXFCLFNBQVM7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1REFBVSxDQUFDLGtGQUFjOztBQUU1QyxhQUFhLEtBQUs7QUFDbEIsVUFBVSxjQUFjOztBQUV4QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsV0FBVyxTQUFTO0FBQ2hFLEtBQUs7QUFDTDtBQUNBLFVBQVUseUNBQVE7QUFDbEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbmRlci8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvc3JjL211bHRpcGFydC1yZXF1ZXN0Lm5vZGUuanM/ZTc3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub3JtYWxpc2VJbnB1dCB9IGZyb20gJy4vZmlsZXMvbm9ybWFsaXNlLWlucHV0LW11bHRpcGxlLmpzJ1xuaW1wb3J0IHsgbmFub2lkIH0gZnJvbSAnbmFub2lkJ1xuaW1wb3J0IHsgbW9kZVRvU3RyaW5nIH0gZnJvbSAnLi9tb2RlLXRvLXN0cmluZy5qcydcbmltcG9ydCBtZXJnZU9wdHMgZnJvbSAnbWVyZ2Utb3B0aW9ucydcbi8vIEB0cy1leHBlY3QtZXJyb3Igbm8gdHlwZXNcbmltcG9ydCB0b1N0cmVhbSBmcm9tICdpdC10by1zdHJlYW0nXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAbGlicDJwL2xvZ2dlcidcbmltcG9ydCBpdFBlZWthYmxlIGZyb20gJ2l0LXBlZWthYmxlJ1xuXG5jb25zdCBtZXJnZSA9IG1lcmdlT3B0cy5iaW5kKHsgaWdub3JlVW5kZWZpbmVkOiB0cnVlIH0pXG5jb25zdCBsb2cgPSBsb2dnZXIoJ2lwZnM6Y29yZS11dGlsczptdWx0aXBhcnQtcmVxdWVzdCcpXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkltcG9ydENhbmRpZGF0ZVN0cmVhbX0gSW1wb3J0Q2FuZGlkYXRlU3RyZWFtXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge0ltcG9ydENhbmRpZGF0ZVN0cmVhbX0gc291cmNlXG4gKiBAcGFyYW0ge0Fib3J0Q29udHJvbGxlcn0gYWJvcnRDb250cm9sbGVyXG4gKiBAcGFyYW0ge0hlYWRlcnN8UmVjb3JkPHN0cmluZywgc3RyaW5nPn0gW2hlYWRlcnNdXG4gKiBAcGFyYW0ge3N0cmluZ30gW2JvdW5kYXJ5XVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbXVsdGlwYXJ0UmVxdWVzdCAoc291cmNlLCBhYm9ydENvbnRyb2xsZXIsIGhlYWRlcnMgPSB7fSwgYm91bmRhcnkgPSBgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0ke25hbm9pZCgpfWApIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBzb3VyY2VcbiAgICovXG4gIGFzeW5jIGZ1bmN0aW9uICogc3RyZWFtRmlsZXMgKHNvdXJjZSkge1xuICAgIHRyeSB7XG4gICAgICBsZXQgaW5kZXggPSAwXG5cbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICAgIGZvciBhd2FpdCAoY29uc3QgeyBjb250ZW50LCBwYXRoLCBtb2RlLCBtdGltZSB9IG9mIHNvdXJjZSkge1xuICAgICAgICBsZXQgZmlsZVN1ZmZpeCA9ICcnXG4gICAgICAgIGNvbnN0IHR5cGUgPSBjb250ZW50ID8gJ2ZpbGUnIDogJ2RpcidcblxuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgeWllbGQgJ1xcclxcbidcblxuICAgICAgICAgIGZpbGVTdWZmaXggPSBgLSR7aW5kZXh9YFxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGZpZWxkTmFtZSA9IHR5cGUgKyBmaWxlU3VmZml4XG4gICAgICAgIGNvbnN0IHFzID0gW11cblxuICAgICAgICBpZiAobW9kZSAhPT0gbnVsbCAmJiBtb2RlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBxcy5wdXNoKGBtb2RlPSR7bW9kZVRvU3RyaW5nKG1vZGUpfWApXG4gICAgICAgIH1cblxuICAgICAgICBpZiAobXRpbWUgIT0gbnVsbCkge1xuICAgICAgICAgIGNvbnN0IHsgc2VjcywgbnNlY3MgfSA9IG10aW1lXG5cbiAgICAgICAgICBxcy5wdXNoKGBtdGltZT0ke3NlY3N9YClcblxuICAgICAgICAgIGlmIChuc2VjcyAhPSBudWxsKSB7XG4gICAgICAgICAgICBxcy5wdXNoKGBtdGltZS1uc2Vjcz0ke25zZWNzfWApXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHFzLmxlbmd0aCkge1xuICAgICAgICAgIGZpZWxkTmFtZSA9IGAke2ZpZWxkTmFtZX0/JHtxcy5qb2luKCcmJyl9YFxuICAgICAgICB9XG5cbiAgICAgICAgeWllbGQgYC0tJHtib3VuZGFyeX1cXHJcXG5gXG4gICAgICAgIHlpZWxkIGBDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9XCIke2ZpZWxkTmFtZX1cIjsgZmlsZW5hbWU9XCIke2VuY29kZVVSSUNvbXBvbmVudChwYXRoIHx8ICcnKX1cIlxcclxcbmBcbiAgICAgICAgeWllbGQgYENvbnRlbnQtVHlwZTogJHtjb250ZW50ID8gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgOiAnYXBwbGljYXRpb24veC1kaXJlY3RvcnknfVxcclxcbmBcbiAgICAgICAgeWllbGQgJ1xcclxcbidcblxuICAgICAgICBpZiAoY29udGVudCkge1xuICAgICAgICAgIHlpZWxkICogY29udGVudFxuICAgICAgICB9XG5cbiAgICAgICAgaW5kZXgrK1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKC8qKiBAdHlwZSB7YW55fSAqLyBlcnIpIHtcbiAgICAgIGxvZyhlcnIpXG4gICAgICAvLyB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vbm9kZS1mZXRjaC9ub2RlLWZldGNoL2lzc3Vlcy83NTNcbiAgICAgIGFib3J0Q29udHJvbGxlci5hYm9ydCgpXG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHlpZWxkIGBcXHJcXG4tLSR7Ym91bmRhcnl9LS1cXHJcXG5gXG4gICAgfVxuICB9XG5cbiAgLy8gcGVlayBhdCB0aGUgZmlyc3QgdmFsdWUgaW4gb3JkZXIgdG8gZ2V0IHRoZSBpbnB1dCBzdHJlYW0gbW92aW5nXG4gIC8vIGFuZCB0byB2YWxpZGF0ZSBpdHMgY29udGVudHMuXG4gIC8vIFdlIGNhbm5vdCBkbyB0aGlzIGluIHRoZSBgZm9yIGF3YWl0Li5vZmAgaW4gc3RyZWFtRmlsZXMgZHVlIHRvXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlLWZldGNoL25vZGUtZmV0Y2gvaXNzdWVzLzc1M1xuICBjb25zdCBwZWVrYWJsZSA9IGl0UGVla2FibGUobm9ybWFsaXNlSW5wdXQoc291cmNlKSlcblxuICAvKiogQHR5cGUge2FueX0gdmFsdWUgKiovXG4gIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHBlZWthYmxlLnBlZWsoKVxuXG4gIGlmICghZG9uZSkge1xuICAgIHBlZWthYmxlLnB1c2godmFsdWUpXG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhcnRzOiBudWxsLFxuICAgIHRvdGFsOiAtMSxcbiAgICBoZWFkZXJzOiBtZXJnZShoZWFkZXJzLCB7XG4gICAgICAnQ29udGVudC1UeXBlJzogYG11bHRpcGFydC9mb3JtLWRhdGE7IGJvdW5kYXJ5PSR7Ym91bmRhcnl9YFxuICAgIH0pLFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3Igbm9ybWFsaXNlSW5wdXQgcmV0dXJucyB1bml4ZnMgaW1wb3J0ZXIgaW1wb3J0IGNhbmRpZGF0ZXNcbiAgICBib2R5OiB0b1N0cmVhbShzdHJlYW1GaWxlcyhwZWVrYWJsZSkpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/multipart-request.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/pins/normalise-input.js":
/*!******************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/pins/normalise-input.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseInput: () => (/* binding */ normaliseInput)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(ssr)/./node_modules/err-code/index.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/src/cid.js\");\n\n\n\n/**\n * @typedef {object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * @param {any} thing\n * @returns {thing is IterableIterator<any> & Iterator<any>}\n */\nfunction isIterable (thing) {\n  return Symbol.iterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterableIterator<any> & AsyncIterator<any>}\n */\nfunction isAsyncIterable (thing) {\n  return Symbol.asyncIterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is CID}\n */\nfunction isCID (thing) {\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(thing) != null\n}\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nasync function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID\n  const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(input)\n\n  if (cid) {\n    yield toPin({ cid })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-expect-error - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-expect-error\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (isIterable(input)) {\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n\n    if (first.done) {\n      return iterator\n    }\n\n    // Iterable<CID>\n    if (isCID(first.value)) {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<String>\n    if (first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ path: first.value })\n      for (const path of iterator) {\n        yield toPin({ path })\n      }\n      return\n    }\n\n    // Iterable<Pinnable>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (isAsyncIterable(input)) {\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID>\n    if (isCID(first.value)) {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<String>\n    if (first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ path: first.value })\n      for await (const path of iterator) {\n        yield toPin({ path })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/pins/normalise-input.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-core-utils/src/to-url-string.js":
/*!***********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/to-url-string.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toUrlString: () => (/* binding */ toUrlString)\n/* harmony export */ });\n/* harmony import */ var _multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @multiformats/multiaddr */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/index.js\");\n/* harmony import */ var _multiformats_multiaddr_to_uri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @multiformats/multiaddr-to-uri */ \"(ssr)/./node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js\");\n\n\n\n/**\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nfunction toUrlString (url) {\n  try {\n    // @ts-expect-error\n    url = (0,_multiformats_multiaddr_to_uri__WEBPACK_IMPORTED_MODULE_1__.multiaddrToUri)((0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(url))\n  } catch (/** @type {any} */ err) { }\n\n  url = url.toString()\n\n  return url\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy90by11cmwtc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQUNZOztBQUUvRDtBQUNBLGFBQWEsNkNBQTZDO0FBQzFEOztBQUVBO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakMsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0EsVUFBVSw4RUFBYyxDQUFDLGtFQUFTO0FBQ2xDLElBQUksa0JBQWtCLEtBQUs7O0FBRTNCOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW5kZXIvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy90by11cmwtc3RyaW5nLmpzP2M3ODMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbXVsdGlhZGRyIH0gZnJvbSAnQG11bHRpZm9ybWF0cy9tdWx0aWFkZHInXG5pbXBvcnQgeyBtdWx0aWFkZHJUb1VyaSB9IGZyb20gJ0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaSdcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdAbXVsdGlmb3JtYXRzL211bHRpYWRkcicpLk11bHRpYWRkcn0gTXVsdGlhZGRyXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ3xNdWx0aWFkZHJ8VVJMfSB1cmwgLSBBIHN0cmluZywgbXVsdGlhZGRyIG9yIFVSTCB0byBjb252ZXJ0IHRvIGEgdXJsIHN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvVXJsU3RyaW5nICh1cmwpIHtcbiAgdHJ5IHtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgdXJsID0gbXVsdGlhZGRyVG9VcmkobXVsdGlhZGRyKHVybCkpXG4gIH0gY2F0Y2ggKC8qKiBAdHlwZSB7YW55fSAqLyBlcnIpIHsgfVxuXG4gIHVybCA9IHVybC50b1N0cmluZygpXG5cbiAgcmV0dXJuIHVybFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-core-utils/src/to-url-string.js\n");

/***/ })

};
;